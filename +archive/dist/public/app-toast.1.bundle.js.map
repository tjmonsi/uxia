{"version":3,"sources":["webpack:///../core/modules/app-toast/components/app-toast.html","webpack:///../bower_components/polymer/polymer.html","webpack:///../bower_components/iron-a11y-keys-behavior/iron-a11y-keys-behavior.html","webpack:///../bower_components/polymer/lib/mixins/mutable-data.html","webpack:///../bower_components/polymer/lib/utils/debounce.html","webpack:///../bower_components/polymer/lib/utils/flush.html","webpack:///../bower_components/polymer/lib/utils/templatize.html","webpack:///../bower_components/iron-flex-layout/iron-flex-layout.html","webpack:///../bower_components/polymer/lib/mixins/gesture-event-listeners.html","webpack:///../bower_components/polymer/lib/legacy/legacy-element-mixin.html","webpack:///../bower_components/shadycss/apply-shim.html","webpack:///../bower_components/polymer/lib/elements/dom-repeat.html","webpack:///../bower_components/iron-resizable-behavior/iron-resizable-behavior.html","webpack:///../bower_components/shadycss/apply-shim.min.js","webpack:///../bower_components/polymer/lib/utils/gestures.html","webpack:///../bower_components/polymer/lib/utils/import-href.html","webpack:///../bower_components/polymer/lib/utils/render-status.html","webpack:///../bower_components/polymer/lib/utils/unresolved.html","webpack:///../bower_components/polymer/lib/legacy/polymer.dom.html","webpack:///../bower_components/polymer/lib/legacy/polymer-fn.html","webpack:///../bower_components/polymer/lib/legacy/class.html","webpack:///../bower_components/polymer/lib/legacy/templatizer-behavior.html","webpack:///../bower_components/polymer/lib/elements/dom-bind.html","webpack:///../bower_components/polymer/lib/elements/dom-if.html","webpack:///../bower_components/polymer/lib/elements/array-selector.html","webpack:///../bower_components/polymer/lib/elements/custom-style.html","webpack:///../bower_components/shadycss/custom-style-interface.html","webpack:///../bower_components/shadycss/custom-style-interface.min.js","webpack:///../bower_components/polymer/lib/legacy/mutable-data-behavior.html","webpack:///../bower_components/iron-a11y-announcer/iron-a11y-announcer.html","webpack:///../bower_components/iron-overlay-behavior/iron-overlay-behavior.html","webpack:///../bower_components/iron-fit-behavior/iron-fit-behavior.html","webpack:///../bower_components/iron-overlay-behavior/iron-overlay-manager.html","webpack:///../bower_components/iron-overlay-behavior/iron-overlay-backdrop.html","webpack:///../bower_components/iron-overlay-behavior/iron-focusables-helper.html","webpack:///../bower_components/paper-toast/paper-toast.html"],"names":["require","RegisterHtmlTemplate","toBody","k","n","end","start","rules","parent","previous","cssText","parsedCssText","atRule","type","parsedSelector","selector","keyframesName","p","a","replace","aa","ba","b","q","c","d","length","e","f","h","g","m","push","substring","trim","ca","r","lastIndexOf","indexOf","t","match","da","u","split","pop","v","x","y","ea","fa","ha","ia","ja","Promise","resolve","ka","_applyShimCurrentVersion","_applyShimValidatingVersion","_applyShimNextVersion","z","la","then","A","window","ShadyDOM","inUse","B","C","shimcssproperties","navigator","userAgent","CSS","supports","ShadyCSS","nativeCss","WebComponents","flags","E","F","G","ma","H","I","__cssRules","textContent","J","matchMedia","matches","K","na","oa","L","prototype","set","i","get","M","N","o","test","lastIndex","content","querySelector","j","l","pa","qa","O","exec","index","slice","P","join","document","createElement","setAttribute","style","all","head","appendChild","getComputedStyle","getPropertyValue","ra","Object","assign","create","X","w","Y","D","detectMixin","transformStyle","transformCustomStyle","transformRules","transformRule","transformTemplate","_separator","defineProperty","Q","R","HTMLImports","whenReady","S","sa","requestAnimationFrame","readyState","addEventListener","T","U","V","invalidCallback","CustomStyleInterface","transformCallback","validateCallback","enqueued","W","prepareTemplate","_styleAst","processStyles","getStyleForCustomStyle","styleSubtree","removeProperty","setProperty","shadowRoot","styleElement","children","childNodes","localName","getAttribute","is","styleDocument","body","ScopingShim","Z","ta","getComputedStyleValue","nativeShadow","ApplyShim","call","customStyles","__seenByShadyCSS","__shadyCSSCachedStyle","getStyle","__appliedElement","addCustomStyle","defineProperties"],"mappings":"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","file":"app-toast.1.bundle.js","sourcesContent":["<link rel=\"import\" href=\"../../../../bower_components/polymer/polymer-element.html\">\n<link rel=\"import\" href=\"../../../../bower_components/polymer/lib/mixins/gesture-event-listeners.html\">\n<link rel=\"import\" href=\"../../../../bower_components/shadycss/apply-shim.html\">\n<link rel=\"import\" href=\"../../../../bower_components/paper-toast/paper-toast.html\">\n<link rel=\"import\" href=\"../../../../bower_components/iron-flex-layout/iron-flex-layout.html\">\n\n<dom-module id=\"app-toast\">\n  <template>\n    <style>\n      :host {\n        font-family: 'Roboto', 'Arial', sans-serif;\n      }\n\n      .clickable {\n        cursor: pointer;\n      }\n\n      paper-toast {\n        user-select: none;\n      }\n\n      paper-toast[fit-bottom] {\n        width: 100%;\n        min-width: 0;\n        border-radius: 0;\n        margin: 0;\n      }\n\n      .toast-action {\n        @apply (--layout-self-center);\n        padding-left: 24px;\n        color: #eeff41;\n        text-transform: uppercase;\n        font-weight: 600;\n        cursor: pointer;\n        white-space: nowrap;\n        user-select: none;\n      }\n    </style>\n\n    <paper-toast\n        id=\"internalToast\"\n        class$=\"{{_computeClass(_tapHandler)}}\"\n        on-tap=\"_handleTap\" layout horizontal justified\n        fit-bottom$=\"{{app.isPhoneSize}}\">\n      <span class=\"toast-action\"\n            on-click=\"_handleAction\" hidden$=\"{{!action}}\">[[action]]</span>\n\n    </paper-toast>\n\n  </template>\n\n  <script>\n    (() => {\n      class AppToast extends Polymer.GestureEventListeners(Polymer.Element) {\n        static get is () { return 'app-toast' }\n\n        static get properties () {\n          return Object.assign({}, super.properties, {\n            app: {\n              type: Object\n            },\n            action: {\n              type: String,\n              value: null,\n              observer: '_actionChanged'\n            },\n            duration: {\n              type: Number,\n              value: 6000\n            },\n            _actionHandler: {\n              value: null\n            },\n            _handledAction: {\n              type: Boolean,\n              value: false\n            },\n            _listeners: {\n              value: function () {\n                return []\n              }\n            },\n            _tapHandler: {\n              value: null\n            }\n          })\n        }\n\n        static get listeners () {\n          return Object.assign({}, super.listeners, {\n            'iron-overlay-closed': '_handleOverlayClosed'\n          })\n        }\n\n        _actionChanged () {\n          this.textContent = this.action ? this.action : null\n        }\n\n        show () {\n          this.shadowRoot.querySelector('#internalToast').show({\n            text: this.text,\n            duration: this.duration\n          })\n        }\n\n        close () {\n          this.shadowRoot.querySelector('#internalToast').close()\n        }\n\n        showMessage (message, optTapHandler, optAction, optActionHandler, optDuration) {\n          this.close()\n          // Override duration just for this toast.\n          var obj = {\n            text: message\n          }\n          var originalDuration = this.duration\n          if (typeof optDuration !== 'undefined') {\n            this.duration = optDuration\n            obj.duration = optDuration\n          }\n          this.text = message\n          this._tapHandler = optTapHandler\n          this.action = optAction\n          this._actionHandler = optActionHandler\n          this.shadowRoot.querySelector('#internalToast').show(obj)\n          this.dispatchEvent(new CustomEvent('toast-message', {\n            detail: {\n              message\n            }\n          }))\n          this.duration = originalDuration // reset site-wide duration.\n        }\n\n        _handleTap () {\n          if (typeof this._tapHandler === 'function' && !this._handledAction) {\n            this._tapHandler()\n            this.shadowRoot.querySelector('#internalToast').close()\n          }\n          this._handledAction = false\n        }\n\n        _handleAction (e, detail) {\n          if (typeof this._actionHandler === 'function') {\n            e.stopPropagation()\n            this._actionHandler()\n            this._handledAction = true\n            // Need because handleTap will also be called from a tap.\n            // This handle is a click.\n            this.shadowRoot.querySelector('#internalToast').close()\n          }\n        }\n\n        _handleOverlayClosed () {\n          this._tapHandler = null\n        }\n\n        _computeClass (tapHandler) {\n          return tapHandler ? 'clickable' : ''\n        }\n      }\n\n      window.customElements.define(AppToast.is, AppToast)\n    })()\n  </script>\n</dom-module>\n\n\n\n// WEBPACK FOOTER //\n// ../core/modules/app-toast/components/app-toast.html","<!--\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n-->\n<link rel=\"import\" href=\"lib/legacy/legacy-element-mixin.html\">\n<link rel=\"import\" href=\"lib/legacy/polymer-fn.html\">\n<!-- template elements -->\n<link rel=\"import\" href=\"lib/legacy/templatizer-behavior.html\">\n<link rel=\"import\" href=\"lib/elements/dom-bind.html\">\n<link rel=\"import\" href=\"lib/elements/dom-repeat.html\">\n<link rel=\"import\" href=\"lib/elements/dom-if.html\">\n<link rel=\"import\" href=\"lib/elements/array-selector.html\">\n<!-- custom-style -->\n<link rel=\"import\" href=\"lib/elements/custom-style.html\">\n<!-- bc behaviors -->\n<link rel=\"import\" href=\"lib/legacy/mutable-data-behavior.html\">\n<script>\n  // bc\n  Polymer.Base = Polymer.LegacyElementMixin(HTMLElement).prototype;\n</script>\n\n\n\n// WEBPACK FOOTER //\n// ../bower_components/polymer/polymer.html","<!--\n@license\nCopyright (c) 2015 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n-->\n\n<link rel=\"import\" href=\"../polymer/polymer.html\">\n\n<script>\n  (function() {\n    'use strict';\n\n    /**\n     * Chrome uses an older version of DOM Level 3 Keyboard Events\n     *\n     * Most keys are labeled as text, but some are Unicode codepoints.\n     * Values taken from: http://www.w3.org/TR/2007/WD-DOM-Level-3-Events-20071221/keyset.html#KeySet-Set\n     */\n    var KEY_IDENTIFIER = {\n      'U+0008': 'backspace',\n      'U+0009': 'tab',\n      'U+001B': 'esc',\n      'U+0020': 'space',\n      'U+007F': 'del'\n    };\n\n    /**\n     * Special table for KeyboardEvent.keyCode.\n     * KeyboardEvent.keyIdentifier is better, and KeyBoardEvent.key is even better\n     * than that.\n     *\n     * Values from: https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent.keyCode#Value_of_keyCode\n     */\n    var KEY_CODE = {\n      8: 'backspace',\n      9: 'tab',\n      13: 'enter',\n      27: 'esc',\n      33: 'pageup',\n      34: 'pagedown',\n      35: 'end',\n      36: 'home',\n      32: 'space',\n      37: 'left',\n      38: 'up',\n      39: 'right',\n      40: 'down',\n      46: 'del',\n      106: '*'\n    };\n\n    /**\n     * MODIFIER_KEYS maps the short name for modifier keys used in a key\n     * combo string to the property name that references those same keys\n     * in a KeyboardEvent instance.\n     */\n    var MODIFIER_KEYS = {\n      'shift': 'shiftKey',\n      'ctrl': 'ctrlKey',\n      'alt': 'altKey',\n      'meta': 'metaKey'\n    };\n\n    /**\n     * KeyboardEvent.key is mostly represented by printable character made by\n     * the keyboard, with unprintable keys labeled nicely.\n     *\n     * However, on OS X, Alt+char can make a Unicode character that follows an\n     * Apple-specific mapping. In this case, we fall back to .keyCode.\n     */\n    var KEY_CHAR = /[a-z0-9*]/;\n\n    /**\n     * Matches a keyIdentifier string.\n     */\n    var IDENT_CHAR = /U\\+/;\n\n    /**\n     * Matches arrow keys in Gecko 27.0+\n     */\n    var ARROW_KEY = /^arrow/;\n\n    /**\n     * Matches space keys everywhere (notably including IE10's exceptional name\n     * `spacebar`).\n     */\n    var SPACE_KEY = /^space(bar)?/;\n\n    /**\n     * Matches ESC key.\n     *\n     * Value from: http://w3c.github.io/uievents-key/#key-Escape\n     */\n    var ESC_KEY = /^escape$/;\n\n    /**\n     * Transforms the key.\n     * @param {string} key The KeyBoardEvent.key\n     * @param {Boolean} [noSpecialChars] Limits the transformation to\n     * alpha-numeric characters.\n     */\n    function transformKey(key, noSpecialChars) {\n      var validKey = '';\n      if (key) {\n        var lKey = key.toLowerCase();\n        if (lKey === ' ' || SPACE_KEY.test(lKey)) {\n          validKey = 'space';\n        } else if (ESC_KEY.test(lKey)) {\n          validKey = 'esc';\n        } else if (lKey.length == 1) {\n          if (!noSpecialChars || KEY_CHAR.test(lKey)) {\n            validKey = lKey;\n          }\n        } else if (ARROW_KEY.test(lKey)) {\n          validKey = lKey.replace('arrow', '');\n        } else if (lKey == 'multiply') {\n          // numpad '*' can map to Multiply on IE/Windows\n          validKey = '*';\n        } else {\n          validKey = lKey;\n        }\n      }\n      return validKey;\n    }\n\n    function transformKeyIdentifier(keyIdent) {\n      var validKey = '';\n      if (keyIdent) {\n        if (keyIdent in KEY_IDENTIFIER) {\n          validKey = KEY_IDENTIFIER[keyIdent];\n        } else if (IDENT_CHAR.test(keyIdent)) {\n          keyIdent = parseInt(keyIdent.replace('U+', '0x'), 16);\n          validKey = String.fromCharCode(keyIdent).toLowerCase();\n        } else {\n          validKey = keyIdent.toLowerCase();\n        }\n      }\n      return validKey;\n    }\n\n    function transformKeyCode(keyCode) {\n      var validKey = '';\n      if (Number(keyCode)) {\n        if (keyCode >= 65 && keyCode <= 90) {\n          // ascii a-z\n          // lowercase is 32 offset from uppercase\n          validKey = String.fromCharCode(32 + keyCode);\n        } else if (keyCode >= 112 && keyCode <= 123) {\n          // function keys f1-f12\n          validKey = 'f' + (keyCode - 112 + 1);\n        } else if (keyCode >= 48 && keyCode <= 57) {\n          // top 0-9 keys\n          validKey = String(keyCode - 48);\n        } else if (keyCode >= 96 && keyCode <= 105) {\n          // num pad 0-9\n          validKey = String(keyCode - 96);\n        } else {\n          validKey = KEY_CODE[keyCode];\n        }\n      }\n      return validKey;\n    }\n\n    /**\n      * Calculates the normalized key for a KeyboardEvent.\n      * @param {KeyboardEvent} keyEvent\n      * @param {Boolean} [noSpecialChars] Set to true to limit keyEvent.key\n      * transformation to alpha-numeric chars. This is useful with key\n      * combinations like shift + 2, which on FF for MacOS produces\n      * keyEvent.key = @\n      * To get 2 returned, set noSpecialChars = true\n      * To get @ returned, set noSpecialChars = false\n     */\n    function normalizedKeyForEvent(keyEvent, noSpecialChars) {\n      // Fall back from .key, to .detail.key for artifical keyboard events,\n      // and then to deprecated .keyIdentifier and .keyCode.\n      if (keyEvent.key) {\n        return transformKey(keyEvent.key, noSpecialChars);\n      }\n      if (keyEvent.detail && keyEvent.detail.key) {\n        return transformKey(keyEvent.detail.key, noSpecialChars);\n      }\n      return transformKeyIdentifier(keyEvent.keyIdentifier) ||\n        transformKeyCode(keyEvent.keyCode) || '';\n    }\n\n    function keyComboMatchesEvent(keyCombo, event) {\n      // For combos with modifiers we support only alpha-numeric keys\n      var keyEvent = normalizedKeyForEvent(event, keyCombo.hasModifiers);\n      return keyEvent === keyCombo.key &&\n        (!keyCombo.hasModifiers || (\n          !!event.shiftKey === !!keyCombo.shiftKey &&\n          !!event.ctrlKey === !!keyCombo.ctrlKey &&\n          !!event.altKey === !!keyCombo.altKey &&\n          !!event.metaKey === !!keyCombo.metaKey)\n        );\n    }\n\n    function parseKeyComboString(keyComboString) {\n      if (keyComboString.length === 1) {\n        return {\n          combo: keyComboString,\n          key: keyComboString,\n          event: 'keydown'\n        };\n      }\n      return keyComboString.split('+').reduce(function(parsedKeyCombo, keyComboPart) {\n        var eventParts = keyComboPart.split(':');\n        var keyName = eventParts[0];\n        var event = eventParts[1];\n\n        if (keyName in MODIFIER_KEYS) {\n          parsedKeyCombo[MODIFIER_KEYS[keyName]] = true;\n          parsedKeyCombo.hasModifiers = true;\n        } else {\n          parsedKeyCombo.key = keyName;\n          parsedKeyCombo.event = event || 'keydown';\n        }\n\n        return parsedKeyCombo;\n      }, {\n        combo: keyComboString.split(':').shift()\n      });\n    }\n\n    function parseEventString(eventString) {\n      return eventString.trim().split(' ').map(function(keyComboString) {\n        return parseKeyComboString(keyComboString);\n      });\n    }\n\n    /**\n     * `Polymer.IronA11yKeysBehavior` provides a normalized interface for processing\n     * keyboard commands that pertain to [WAI-ARIA best practices](http://www.w3.org/TR/wai-aria-practices/#kbd_general_binding).\n     * The element takes care of browser differences with respect to Keyboard events\n     * and uses an expressive syntax to filter key presses.\n     *\n     * Use the `keyBindings` prototype property to express what combination of keys\n     * will trigger the callback. A key binding has the format\n     * `\"KEY+MODIFIER:EVENT\": \"callback\"` (`\"KEY\": \"callback\"` or\n     * `\"KEY:EVENT\": \"callback\"` are valid as well). Some examples:\n     *\n     *      keyBindings: {\n     *        'space': '_onKeydown', // same as 'space:keydown'\n     *        'shift+tab': '_onKeydown',\n     *        'enter:keypress': '_onKeypress',\n     *        'esc:keyup': '_onKeyup'\n     *      }\n     *\n     * The callback will receive with an event containing the following information in `event.detail`:\n     *\n     *      _onKeydown: function(event) {\n     *        console.log(event.detail.combo); // KEY+MODIFIER, e.g. \"shift+tab\"\n     *        console.log(event.detail.key); // KEY only, e.g. \"tab\"\n     *        console.log(event.detail.event); // EVENT, e.g. \"keydown\"\n     *        console.log(event.detail.keyboardEvent); // the original KeyboardEvent\n     *      }\n     *\n     * Use the `keyEventTarget` attribute to set up event handlers on a specific\n     * node.\n     *\n     * See the [demo source code](https://github.com/PolymerElements/iron-a11y-keys-behavior/blob/master/demo/x-key-aware.html)\n     * for an example.\n     *\n     * @demo demo/index.html\n     * @polymerBehavior\n     */\n    Polymer.IronA11yKeysBehavior = {\n      properties: {\n        /**\n         * The EventTarget that will be firing relevant KeyboardEvents. Set it to\n         * `null` to disable the listeners.\n         * @type {?EventTarget}\n         */\n        keyEventTarget: {\n          type: Object,\n          value: function() {\n            return this;\n          }\n        },\n\n        /**\n         * If true, this property will cause the implementing element to\n         * automatically stop propagation on any handled KeyboardEvents.\n         */\n        stopKeyboardEventPropagation: {\n          type: Boolean,\n          value: false\n        },\n\n        _boundKeyHandlers: {\n          type: Array,\n          value: function() {\n            return [];\n          }\n        },\n\n        // We use this due to a limitation in IE10 where instances will have\n        // own properties of everything on the \"prototype\".\n        _imperativeKeyBindings: {\n          type: Object,\n          value: function() {\n            return {};\n          }\n        }\n      },\n\n      observers: [\n        '_resetKeyEventListeners(keyEventTarget, _boundKeyHandlers)'\n      ],\n\n\n      /**\n       * To be used to express what combination of keys  will trigger the relative\n       * callback. e.g. `keyBindings: { 'esc': '_onEscPressed'}`\n       * @type {!Object}\n       */\n      keyBindings: {},\n\n      registered: function() {\n        this._prepKeyBindings();\n      },\n\n      attached: function() {\n        this._listenKeyEventListeners();\n      },\n\n      detached: function() {\n        this._unlistenKeyEventListeners();\n      },\n\n      /**\n       * Can be used to imperatively add a key binding to the implementing\n       * element. This is the imperative equivalent of declaring a keybinding\n       * in the `keyBindings` prototype property.\n       *\n       * @param {string} eventString\n       * @param {string} handlerName\n       */\n      addOwnKeyBinding: function(eventString, handlerName) {\n        this._imperativeKeyBindings[eventString] = handlerName;\n        this._prepKeyBindings();\n        this._resetKeyEventListeners();\n      },\n\n      /**\n       * When called, will remove all imperatively-added key bindings.\n       */\n      removeOwnKeyBindings: function() {\n        this._imperativeKeyBindings = {};\n        this._prepKeyBindings();\n        this._resetKeyEventListeners();\n      },\n\n      /**\n       * Returns true if a keyboard event matches `eventString`.\n       *\n       * @param {KeyboardEvent} event\n       * @param {string} eventString\n       * @return {boolean}\n       */\n      keyboardEventMatchesKeys: function(event, eventString) {\n        var keyCombos = parseEventString(eventString);\n        for (var i = 0; i < keyCombos.length; ++i) {\n          if (keyComboMatchesEvent(keyCombos[i], event)) {\n            return true;\n          }\n        }\n        return false;\n      },\n\n      _collectKeyBindings: function() {\n        var keyBindings = this.behaviors.map(function(behavior) {\n          return behavior.keyBindings;\n        });\n\n        if (keyBindings.indexOf(this.keyBindings) === -1) {\n          keyBindings.push(this.keyBindings);\n        }\n\n        return keyBindings;\n      },\n\n      _prepKeyBindings: function() {\n        this._keyBindings = {};\n\n        this._collectKeyBindings().forEach(function(keyBindings) {\n          for (var eventString in keyBindings) {\n            this._addKeyBinding(eventString, keyBindings[eventString]);\n          }\n        }, this);\n\n        for (var eventString in this._imperativeKeyBindings) {\n          this._addKeyBinding(eventString, this._imperativeKeyBindings[eventString]);\n        }\n\n        // Give precedence to combos with modifiers to be checked first.\n        for (var eventName in this._keyBindings) {\n          this._keyBindings[eventName].sort(function (kb1, kb2) {\n            var b1 = kb1[0].hasModifiers;\n            var b2 = kb2[0].hasModifiers;\n            return (b1 === b2) ? 0 : b1 ? -1 : 1;\n          })\n        }\n      },\n\n      _addKeyBinding: function(eventString, handlerName) {\n        parseEventString(eventString).forEach(function(keyCombo) {\n          this._keyBindings[keyCombo.event] =\n            this._keyBindings[keyCombo.event] || [];\n\n          this._keyBindings[keyCombo.event].push([\n            keyCombo,\n            handlerName\n          ]);\n        }, this);\n      },\n\n      _resetKeyEventListeners: function() {\n        this._unlistenKeyEventListeners();\n\n        if (this.isAttached) {\n          this._listenKeyEventListeners();\n        }\n      },\n\n      _listenKeyEventListeners: function() {\n        if (!this.keyEventTarget) {\n          return;\n        }\n        Object.keys(this._keyBindings).forEach(function(eventName) {\n          var keyBindings = this._keyBindings[eventName];\n          var boundKeyHandler = this._onKeyBindingEvent.bind(this, keyBindings);\n\n          this._boundKeyHandlers.push([this.keyEventTarget, eventName, boundKeyHandler]);\n\n          this.keyEventTarget.addEventListener(eventName, boundKeyHandler);\n        }, this);\n      },\n\n      _unlistenKeyEventListeners: function() {\n        var keyHandlerTuple;\n        var keyEventTarget;\n        var eventName;\n        var boundKeyHandler;\n\n        while (this._boundKeyHandlers.length) {\n          // My kingdom for block-scope binding and destructuring assignment..\n          keyHandlerTuple = this._boundKeyHandlers.pop();\n          keyEventTarget = keyHandlerTuple[0];\n          eventName = keyHandlerTuple[1];\n          boundKeyHandler = keyHandlerTuple[2];\n\n          keyEventTarget.removeEventListener(eventName, boundKeyHandler);\n        }\n      },\n\n      _onKeyBindingEvent: function(keyBindings, event) {\n        if (this.stopKeyboardEventPropagation) {\n          event.stopPropagation();\n        }\n\n        // if event has been already prevented, don't do anything\n        if (event.defaultPrevented) {\n          return;\n        }\n\n        for (var i = 0; i < keyBindings.length; i++) {\n          var keyCombo = keyBindings[i][0];\n          var handlerName = keyBindings[i][1];\n          if (keyComboMatchesEvent(keyCombo, event)) {\n            this._triggerKeyHandler(keyCombo, handlerName, event);\n            // exit the loop if eventDefault was prevented\n            if (event.defaultPrevented) {\n              return;\n            }\n          }\n        }\n      },\n\n      _triggerKeyHandler: function(keyCombo, handlerName, keyboardEvent) {\n        var detail = Object.create(keyCombo);\n        detail.keyboardEvent = keyboardEvent;\n        var event = new CustomEvent(keyCombo.event, {\n          detail: detail,\n          cancelable: true\n        });\n        this[handlerName].call(this, event);\n        if (event.defaultPrevented) {\n          keyboardEvent.preventDefault();\n        }\n      }\n    };\n  })();\n</script>\n\n\n\n// WEBPACK FOOTER //\n// ../bower_components/iron-a11y-keys-behavior/iron-a11y-keys-behavior.html","<!--\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n-->\n\n<link rel=\"import\" href=\"../utils/mixin.html\">\n\n<script>\n(function() {\n  'use strict';\n\n  // Common implementation for mixin & behavior\n  function mutablePropertyChange(inst, property, value, old, mutableData) {\n    let isObject;\n    if (mutableData) {\n      isObject = (typeof value === 'object' && value !== null);\n      // Pull `old` for Objects from temp cache, but treat `null` as a primitive\n      if (isObject) {\n        old = inst.__dataTemp[property];\n      }\n    }\n    // Strict equality check, but return false for NaN===NaN\n    let shouldChange = (old !== value && (old === old || value === value));\n    // Objects are stored in temporary cache (cleared at end of\n    // turn), which is used for dirty-checking\n    if (isObject && shouldChange) {\n      inst.__dataTemp[property] = value;\n    }\n    return shouldChange;\n  }\n\n  /**\n   * Element class mixin to skip strict dirty-checking for objects and arrays\n   * (always consider them to be \"dirty\"), for use on elements utilizing\n   * `Polymer.PropertyEffects`\n   *\n   * By default, `Polymer.PropertyEffects` performs strict dirty checking on\n   * objects, which means that any deep modifications to an object or array will\n   * not be propagated unless \"immutable\" data patterns are used (i.e. all object\n   * references from the root to the mutation were changed).\n   *\n   * Polymer also provides a proprietary data mutation and path notification API\n   * (e.g. `notifyPath`, `set`, and array mutation API's) that allow efficient\n   * mutation and notification of deep changes in an object graph to all elements\n   * bound to the same object graph.\n   *\n   * In cases where neither immutable patterns nor the data mutation API can be\n   * used, applying this mixin will cause Polymer to skip dirty checking for\n   * objects and arrays (always consider them to be \"dirty\").  This allows a\n   * user to make a deep modification to a bound object graph, and then either\n   * simply re-set the object (e.g. `this.items = this.items`) or call `notifyPath`\n   * (e.g. `this.notifyPath('items')`) to update the tree.  Note that all\n   * elements that wish to be updated based on deep mutations must apply this\n   * mixin or otherwise skip strict dirty checking for objects/arrays.\n   *\n   * In order to make the dirty check strategy configurable, see\n   * `Polymer.OptionalMutableData`.\n   *\n   * Note, the performance characteristics of propagating large object graphs\n   * will be worse as opposed to using strict dirty checking with immutable\n   * patterns or Polymer's path notification API.\n   *\n   * @mixinFunction\n   * @polymer\n   * @memberof Polymer\n   * @summary Element class mixin to skip strict dirty-checking for objects\n   *   and arrays\n   */\n  Polymer.MutableData = Polymer.dedupingMixin(superClass => {\n\n    /**\n     * @polymer\n     * @mixinClass\n     * @implements {Polymer_MutableData}\n     */\n    class MutableData extends superClass {\n      /**\n       * Overrides `Polymer.PropertyEffects` to provide option for skipping\n       * strict equality checking for Objects and Arrays.\n       *\n       * This method pulls the value to dirty check against from the `__dataTemp`\n       * cache (rather than the normal `__data` cache) for Objects.  Since the temp\n       * cache is cleared at the end of a turn, this implementation allows\n       * side-effects of deep object changes to be processed by re-setting the\n       * same object (using the temp cache as an in-turn backstop to prevent\n       * cycles due to 2-way notification).\n       *\n       * @param {string} property Property name\n       * @param {*} value New property value\n       * @param {*} old Previous property value\n       * @return {boolean} Whether the property should be considered a change\n       * @protected\n       */\n      _shouldPropertyChange(property, value, old) {\n        return mutablePropertyChange(this, property, value, old, true);\n      }\n\n    }\n    /** @type {boolean} */\n    MutableData.prototype.mutableData = false;\n\n    return MutableData;\n\n  });\n\n\n  /**\n   * Element class mixin to add the optional ability to skip strict\n   * dirty-checking for objects and arrays (always consider them to be\n   * \"dirty\") by setting a `mutable-data` attribute on an element instance.\n   *\n   * By default, `Polymer.PropertyEffects` performs strict dirty checking on\n   * objects, which means that any deep modifications to an object or array will\n   * not be propagated unless \"immutable\" data patterns are used (i.e. all object\n   * references from the root to the mutation were changed).\n   *\n   * Polymer also provides a proprietary data mutation and path notification API\n   * (e.g. `notifyPath`, `set`, and array mutation API's) that allow efficient\n   * mutation and notification of deep changes in an object graph to all elements\n   * bound to the same object graph.\n   *\n   * In cases where neither immutable patterns nor the data mutation API can be\n   * used, applying this mixin will allow Polymer to skip dirty checking for\n   * objects and arrays (always consider them to be \"dirty\").  This allows a\n   * user to make a deep modification to a bound object graph, and then either\n   * simply re-set the object (e.g. `this.items = this.items`) or call `notifyPath`\n   * (e.g. `this.notifyPath('items')`) to update the tree.  Note that all\n   * elements that wish to be updated based on deep mutations must apply this\n   * mixin or otherwise skip strict dirty checking for objects/arrays.\n   *\n   * While this mixin adds the ability to forgo Object/Array dirty checking,\n   * the `mutableData` flag defaults to false and must be set on the instance.\n   *\n   * Note, the performance characteristics of propagating large object graphs\n   * will be worse by relying on `mutableData: true` as opposed to using\n   * strict dirty checking with immutable patterns or Polymer's path notification\n   * API.\n   *\n   * @mixinFunction\n   * @polymer\n   * @memberof Polymer\n   * @summary Element class mixin to optionally skip strict dirty-checking\n   *   for objects and arrays\n   */\n  Polymer.OptionalMutableData = Polymer.dedupingMixin(superClass => {\n\n    /**\n     * @mixinClass\n     * @polymer\n     * @implements {Polymer_OptionalMutableData}\n     */\n    class OptionalMutableData extends superClass {\n\n      static get properties() {\n        return {\n          /**\n           * Instance-level flag for configuring the dirty-checking strategy\n           * for this element.  When true, Objects and Arrays will skip dirty\n           * checking, otherwise strict equality checking will be used.\n           */\n          mutableData: Boolean\n        };\n      }\n\n      /**\n       * Overrides `Polymer.PropertyEffects` to provide option for skipping\n       * strict equality checking for Objects and Arrays.\n       *\n       * When `this.mutableData` is true on this instance, this method\n       * pulls the value to dirty check against from the `__dataTemp` cache\n       * (rather than the normal `__data` cache) for Objects.  Since the temp\n       * cache is cleared at the end of a turn, this implementation allows\n       * side-effects of deep object changes to be processed by re-setting the\n       * same object (using the temp cache as an in-turn backstop to prevent\n       * cycles due to 2-way notification).\n       *\n       * @param {string} property Property name\n       * @param {*} value New property value\n       * @param {*} old Previous property value\n       * @return {boolean} Whether the property should be considered a change\n       * @protected\n       */\n      _shouldPropertyChange(property, value, old) {\n        return mutablePropertyChange(this, property, value, old, this.mutableData);\n      }\n    }\n\n    return OptionalMutableData;\n\n  });\n\n  // Export for use by legacy behavior\n  Polymer.MutableData._mutablePropertyChange = mutablePropertyChange;\n\n})();\n</script>\n\n\n\n// WEBPACK FOOTER //\n// ../bower_components/polymer/lib/mixins/mutable-data.html","<!--\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n-->\n<link rel=\"import\" href=\"boot.html\">\n<link rel=\"import\" href=\"mixin.html\">\n<link rel=\"import\" href=\"async.html\">\n\n<script>\n(function() {\n  'use strict';\n\n  /** @typedef {{run: function(function(), number=):number, cancel: function(number)}} */\n  let AsyncModule; // eslint-disable-line no-unused-vars\n\n  /**\n   * @summary Collapse multiple callbacks into one invocation after a timer.\n   * @memberof Polymer\n   */\n  class Debouncer {\n    constructor() {\n      this._asyncModule = null;\n      this._callback = null;\n      this._timer = null;\n    }\n    /**\n     * Sets the scheduler; that is, a module with the Async interface,\n     * a callback and optional arguments to be passed to the run function\n     * from the async module.\n     *\n     * @param {!AsyncModule} asyncModule Object with Async interface.\n     * @param {function()} callback Callback to run.\n     */\n    setConfig(asyncModule, callback) {\n      this._asyncModule = asyncModule;\n      this._callback = callback;\n      this._timer = this._asyncModule.run(() => {\n        this._timer = null;\n        this._callback()\n      });\n    }\n    /**\n     * Cancels an active debouncer and returns a reference to itself.\n     */\n    cancel() {\n      if (this.isActive()) {\n        this._asyncModule.cancel(this._timer);\n        this._timer = null;\n      }\n    }\n    /**\n     * Flushes an active debouncer and returns a reference to itself.\n     */\n    flush() {\n      if (this.isActive()) {\n        this.cancel();\n        this._callback();\n      }\n    }\n    /**\n     * Returns true if the debouncer is active.\n     *\n     * @return {boolean} True if active.\n     */\n    isActive() {\n      return this._timer != null;\n    }\n  /**\n   * Creates a debouncer if no debouncer is passed as a parameter\n   * or it cancels an active debouncer otherwise. The following\n   * example shows how a debouncer can be called multiple times within a\n   * microtask and \"debounced\" such that the provided callback function is\n   * called once. Add this method to a custom element:\n   *\n   * _debounceWork() {\n   *   this._debounceJob = Polymer.Debouncer.debounce(this._debounceJob,\n   *       Polymer.Async.microTask, () => {\n   *     this._doWork();\n   *   });\n   * }\n   *\n   * If the `_debounceWork` method is called multiple times within the same\n   * microtask, the `_doWork` function will be called only once at the next\n   * microtask checkpoint.\n   *\n   * Note: In testing it is often convenient to avoid asynchrony. To accomplish\n   * this with a debouncer, you can use `Polymer.enqueueDebouncer` and\n   * `Polymer.flush`. For example, extend the above example by adding\n   * `Polymer.enqueueDebouncer(this._debounceJob)` at the end of the\n   * `_debounceWork` method. Then in a test, call `Polymer.flush` to ensure\n   * the debouncer has completed.\n   *\n   * @param {Debouncer?} debouncer Debouncer object.\n   * @param {!AsyncModule} asyncModule Object with Async interface\n   * @param {function()} callback Callback to run.\n   * @return {!Debouncer} Returns a debouncer object.\n   */\n    static debounce(debouncer, asyncModule, callback) {\n      if (debouncer instanceof Debouncer) {\n        debouncer.cancel();\n      } else {\n        debouncer = new Debouncer();\n      }\n      debouncer.setConfig(asyncModule, callback);\n      return debouncer;\n    }\n  }\n\n  Polymer.Debouncer = Debouncer;\n})();\n</script>\n\n\n\n// WEBPACK FOOTER //\n// ../bower_components/polymer/lib/utils/debounce.html","<!--\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n-->\n<link rel=\"import\" href=\"boot.html\">\n<script>\n(function() {\n  'use strict';\n\n  let debouncerQueue = [];\n\n  /**\n   * Adds a `Polymer.Debouncer` to a list of globally flushable tasks.\n   *\n   * @memberof Polymer\n   * @param {Polymer.Debouncer} debouncer Debouncer to enqueue\n   */\n  Polymer.enqueueDebouncer = function(debouncer) {\n    debouncerQueue.push(debouncer);\n  }\n\n  function flushDebouncers() {\n    const didFlush = Boolean(debouncerQueue.length);\n    while (debouncerQueue.length) {\n      try {\n        debouncerQueue.shift().flush();\n      } catch(e) {\n        setTimeout(() => {\n          throw e;\n        });\n      }\n    }\n    return didFlush;\n  }\n\n  /**\n   * Forces several classes of asynchronously queued tasks to flush:\n   * - Debouncers added via `enqueueDebouncer`\n   * - ShadyDOM distribution\n   *\n   * @memberof Polymer\n   */\n  Polymer.flush = function() {\n    let shadyDOM, debouncers;\n    do {\n      shadyDOM = window.ShadyDOM && ShadyDOM.flush();\n      if (window.ShadyCSS && window.ShadyCSS.ScopingShim) {\n        window.ShadyCSS.ScopingShim.flush();\n      }\n      debouncers = flushDebouncers();\n    } while (shadyDOM || debouncers);\n  }\n\n})();\n</script>\n\n\n\n// WEBPACK FOOTER //\n// ../bower_components/polymer/lib/utils/flush.html","<!--\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n-->\n\n<link rel=\"import\" href=\"boot.html\">\n<link rel=\"import\" href=\"../mixins/property-effects.html\">\n<link rel=\"import\" href=\"../mixins/mutable-data.html\">\n\n<script>\n  (function() {\n    'use strict';\n\n    // Base class for HTMLTemplateElement extension that has property effects\n    // machinery for propagating host properties to children. This is an ES5\n    // class only because Babel (incorrectly) requires super() in the class\n    // constructor even though no `this` is used and it returns an instance.\n    let newInstance = null;\n    /**\n     * @constructor\n     * @extends {HTMLTemplateElement}\n     */\n    function HTMLTemplateElementExtension() { return newInstance; }\n    HTMLTemplateElementExtension.prototype = Object.create(HTMLTemplateElement.prototype, {\n      constructor: {\n        value: HTMLTemplateElementExtension,\n        writable: true\n      }\n    });\n    /**\n     * @constructor\n     * @implements {Polymer_PropertyEffects}\n     * @extends {HTMLTemplateElementExtension}\n     */\n    const DataTemplate = Polymer.PropertyEffects(HTMLTemplateElementExtension);\n    /**\n     * @constructor\n     * @implements {Polymer_MutableData}\n     * @extends {DataTemplate}\n     */\n    const MutableDataTemplate = Polymer.MutableData(DataTemplate);\n\n    // Applies a DataTemplate subclass to a <template> instance\n    function upgradeTemplate(template, constructor) {\n      newInstance = template;\n      Object.setPrototypeOf(template, constructor.prototype);\n      new constructor();\n      newInstance = null;\n    }\n\n    // Base class for TemplateInstance's\n    /**\n     * @constructor\n     * @implements {Polymer_PropertyEffects}\n     */\n    const base = Polymer.PropertyEffects(class {});\n\n    /**\n     * @polymer\n     * @customElement\n     * @appliesMixin Polymer.PropertyEffects\n     * @unrestricted\n     */\n    class TemplateInstanceBase extends base {\n      constructor(props) {\n        super();\n        this._configureProperties(props);\n        this.root = this._stampTemplate(this.__dataHost);\n        // Save list of stamped children\n        let children = this.children = [];\n        for (let n = this.root.firstChild; n; n=n.nextSibling) {\n          children.push(n);\n          n.__templatizeInstance = this;\n        }\n        if (this.__templatizeOwner.__hideTemplateChildren__) {\n          this._showHideChildren(true);\n        }\n        // Flush props only when props are passed if instance props exist\n        // or when there isn't instance props.\n        let options = this.__templatizeOptions;\n        if ((props && options.instanceProps) || !options.instanceProps) {\n          this._enableProperties();\n        }\n      }\n      /**\n       * Configure the given `props` by calling `_setPendingProperty`. Also\n       * sets any properties stored in `__hostProps`.\n       * @private\n       * @param {Object} props Object of property name-value pairs to set.\n       */\n      _configureProperties(props) {\n        let options = this.__templatizeOptions;\n        if (props) {\n          for (let iprop in options.instanceProps) {\n            if (iprop in props) {\n              this._setPendingProperty(iprop, props[iprop]);\n            }\n          }\n        }\n        for (let hprop in this.__hostProps) {\n          this._setPendingProperty(hprop, this.__dataHost['_host_' + hprop]);\n        }\n      }\n      /**\n       * Forwards a host property to this instance.  This method should be\n       * called on instances from the `options.forwardHostProp` callback\n       * to propagate changes of host properties to each instance.\n       *\n       * Note this method enqueues the change, which are flushed as a batch.\n       *\n       * @param {string} prop Property or path name\n       * @param {*} value Value of the property to forward\n       */\n      forwardHostProp(prop, value) {\n        if (this._setPendingPropertyOrPath(prop, value, false, true)) {\n          this.__dataHost._enqueueClient(this);\n        }\n      }\n      /**\n       * @override\n       */\n      _addEventListenerToNode(node, eventName, handler) {\n        if (this._methodHost && this.__templatizeOptions.parentModel) {\n          // If this instance should be considered a parent model, decorate\n          // events this template instance as `model`\n          this._methodHost._addEventListenerToNode(node, eventName, (e) => {\n            e.model = this;\n            handler(e);\n          });\n        } else {\n          // Otherwise delegate to the template's host (which could be)\n          // another template instance\n          let templateHost = this.__dataHost.__dataHost;\n          if (templateHost) {\n            templateHost._addEventListenerToNode(node, eventName, handler);\n          }\n        }\n      }\n      /**\n       * Shows or hides the template instance top level child elements. For\n       * text nodes, `textContent` is removed while \"hidden\" and replaced when\n       * \"shown.\"\n       * @param {boolean} hide Set to true to hide the children;\n       * set to false to show them.\n       * @protected\n       */\n      _showHideChildren(hide) {\n        let c = this.children;\n        for (let i=0; i<c.length; i++) {\n          let n = c[i];\n          // Ignore non-changes\n          if (Boolean(hide) != Boolean(n.__hideTemplateChildren__)) {\n            if (n.nodeType === Node.TEXT_NODE) {\n              if (hide) {\n                n.__polymerTextContent__ = n.textContent;\n                n.textContent = '';\n              } else {\n                n.textContent = n.__polymerTextContent__;\n              }\n            } else if (n.style) {\n              if (hide) {\n                n.__polymerDisplay__ = n.style.display;\n                n.style.display = 'none';\n              } else {\n                n.style.display = n.__polymerDisplay__;\n              }\n            }\n          }\n          n.__hideTemplateChildren__ = hide;\n          if (n._showHideChildren) {\n            n._showHideChildren(hide);\n          }\n        }\n      }\n      /**\n       * Overrides default property-effects implementation to intercept\n       * textContent bindings while children are \"hidden\" and cache in\n       * private storage for later retrieval.\n       *\n       * @override\n       */\n      _setUnmanagedPropertyToNode(node, prop, value) {\n        if (node.__hideTemplateChildren__ &&\n            node.nodeType == Node.TEXT_NODE && prop == 'textContent') {\n          node.__polymerTextContent__ = value;\n        } else {\n          super._setUnmanagedPropertyToNode(node, prop, value);\n        }\n      }\n      /**\n       * Find the parent model of this template instance.  The parent model\n       * is either another templatize instance that had option `parentModel: true`,\n       * or else the host element.\n       *\n       * @return {Polymer_PropertyEffects} The parent model of this instance\n       */\n      get parentModel() {\n        let model = this.__parentModel;\n        if (!model) {\n          let options;\n          model = this\n          do {\n            // A template instance's `__dataHost` is a <template>\n            // `model.__dataHost.__dataHost` is the template's host\n            model = model.__dataHost.__dataHost;\n          } while ((options = model.__templatizeOptions) && !options.parentModel)\n          this.__parentModel = model;\n        }\n        return model;\n      }\n    }\n\n    /** @type {!DataTemplate} */\n    TemplateInstanceBase.prototype.__dataHost;\n    /** @type {!TemplatizeOptions} */\n    TemplateInstanceBase.prototype.__templatizeOptions;\n    /** @type {!Polymer_PropertyEffects} */\n    TemplateInstanceBase.prototype._methodHost;\n    /** @type {!Object} */\n    TemplateInstanceBase.prototype.__templatizeOwner;\n    /** @type {!Object} */\n    TemplateInstanceBase.prototype.__hostProps;\n\n    /**\n     * @constructor\n     * @extends {TemplateInstanceBase}\n     * @implements {Polymer_MutableData}\n     */\n    const MutableTemplateInstanceBase = Polymer.MutableData(TemplateInstanceBase);\n\n    function findMethodHost(template) {\n      // Technically this should be the owner of the outermost template.\n      // In shadow dom, this is always getRootNode().host, but we can\n      // approximate this via cooperation with our dataHost always setting\n      // `_methodHost` as long as there were bindings (or id's) on this\n      // instance causing it to get a dataHost.\n      let templateHost = template.__dataHost;\n      return templateHost && templateHost._methodHost || templateHost;\n    }\n\n    /* eslint-disable valid-jsdoc */\n    /**\n     * @suppress {missingProperties} class.prototype is not defined for some reason\n     */\n    function createTemplatizerClass(template, templateInfo, options) {\n      // Anonymous class created by the templatize\n      let base = options.mutableData ?\n        MutableTemplateInstanceBase : TemplateInstanceBase;\n      /**\n       * @constructor\n       * @extends {base}\n       */\n      let klass = class extends base { }\n      klass.prototype.__templatizeOptions = options;\n      klass.prototype._bindTemplate(template);\n      addNotifyEffects(klass, template, templateInfo, options);\n      return klass;\n    }\n\n    /**\n     * @suppress {missingProperties} class.prototype is not defined for some reason\n     */\n    function addPropagateEffects(template, templateInfo, options) {\n      let userForwardHostProp = options.forwardHostProp;\n      if (userForwardHostProp) {\n        // Provide data API and property effects on memoized template class\n        let klass = templateInfo.templatizeTemplateClass;\n        if (!klass) {\n          let base = options.mutableData ? MutableDataTemplate : DataTemplate;\n          klass = templateInfo.templatizeTemplateClass =\n            class TemplatizedTemplate extends base {}\n          // Add template - >instances effects\n          // and host <- template effects\n          let hostProps = templateInfo.hostProps;\n          for (let prop in hostProps) {\n            klass.prototype._addPropertyEffect('_host_' + prop,\n              klass.prototype.PROPERTY_EFFECT_TYPES.PROPAGATE,\n              {fn: createForwardHostPropEffect(prop, userForwardHostProp)});\n            klass.prototype._createNotifyingProperty('_host_' + prop);\n          }\n        }\n        upgradeTemplate(template, klass);\n        // Mix any pre-bound data into __data; no need to flush this to\n        // instances since they pull from the template at instance-time\n        if (template.__dataProto) {\n          // Note, generally `__dataProto` could be chained, but it's guaranteed\n          // to not be since this is a vanilla template we just added effects to\n          Object.assign(template.__data, template.__dataProto);\n        }\n        // Clear any pending data for performance\n        template.__dataTemp = {};\n        template.__dataPending = null;\n        template.__dataOld = null;\n        template._enableProperties();\n      }\n    }\n    /* eslint-enable valid-jsdoc */\n\n    function createForwardHostPropEffect(hostProp, userForwardHostProp) {\n      return function forwardHostProp(template, prop, props) {\n        userForwardHostProp.call(template.__templatizeOwner,\n          prop.substring('_host_'.length), props[prop]);\n      }\n    }\n\n    function addNotifyEffects(klass, template, templateInfo, options) {\n      let hostProps = templateInfo.hostProps || {};\n      for (let iprop in options.instanceProps) {\n        delete hostProps[iprop];\n        let userNotifyInstanceProp = options.notifyInstanceProp;\n        if (userNotifyInstanceProp) {\n          klass.prototype._addPropertyEffect(iprop,\n            klass.prototype.PROPERTY_EFFECT_TYPES.NOTIFY,\n            {fn: createNotifyInstancePropEffect(iprop, userNotifyInstanceProp)});\n        }\n      }\n      if (options.forwardHostProp && template.__dataHost) {\n        for (let hprop in hostProps) {\n          klass.prototype._addPropertyEffect(hprop,\n            klass.prototype.PROPERTY_EFFECT_TYPES.NOTIFY,\n            {fn: createNotifyHostPropEffect()})\n        }\n      }\n    }\n\n    function createNotifyInstancePropEffect(instProp, userNotifyInstanceProp) {\n      return function notifyInstanceProp(inst, prop, props) {\n        userNotifyInstanceProp.call(inst.__templatizeOwner,\n          inst, prop, props[prop]);\n      }\n    }\n\n    function createNotifyHostPropEffect() {\n      return function notifyHostProp(inst, prop, props) {\n        inst.__dataHost._setPendingPropertyOrPath('_host_' + prop, props[prop], true, true);\n      }\n    }\n\n    /**\n     * Module for preparing and stamping instances of templates that utilize\n     * Polymer's data-binding and declarative event listener features.\n     *\n     * Example:\n     *\n     *     // Get a template from somewhere, e.g. light DOM\n     *     let template = this.querySelector('template');\n     *     // Prepare the template\n     *     let TemplateClass = Polymer.Templatize.templatize(template);\n     *     // Instance the template with an initial data model\n     *     let instance = new TemplateClass({myProp: 'initial'});\n     *     // Insert the instance's DOM somewhere, e.g. element's shadow DOM\n     *     this.shadowRoot.appendChild(instance.root);\n     *     // Changing a property on the instance will propagate to bindings\n     *     // in the template\n     *     instance.myProp = 'new value';\n     *\n     * The `options` dictionary passed to `templatize` allows for customizing\n     * features of the generated template class, including how outer-scope host\n     * properties should be forwarded into template instances, how any instance\n     * properties added into the template's scope should be notified out to\n     * the host, and whether the instance should be decorated as a \"parent model\"\n     * of any event handlers.\n     *\n     *     // Customze property forwarding and event model decoration\n     *     let TemplateClass = Polymer.Templatize.templatize(template, this, {\n     *       parentModel: true,\n     *       instanceProps: {...},\n     *       forwardHostProp(property, value) {...},\n     *       notifyInstanceProp(instance, property, value) {...},\n     *     });\n     *\n     *\n     * @namespace\n     * @memberof Polymer\n     * @summary Module for preparing and stamping instances of templates\n     *   utilizing Polymer templating features.\n     */\n\n    const Templatize = {\n\n      /**\n       * Returns an anonymous `Polymer.PropertyEffects` class bound to the\n       * `<template>` provided.  Instancing the class will result in the\n       * template being stamped into document fragment stored as the instance's\n       * `root` property, after which it can be appended to the DOM.\n       *\n       * Templates may utilize all Polymer data-binding features as well as\n       * declarative event listeners.  Event listeners and inline computing\n       * functions in the template will be called on the host of the template.\n       *\n       * The constructor returned takes a single argument dictionary of initial\n       * property values to propagate into template bindings.  Additionally\n       * host properties can be forwarded in, and instance properties can be\n       * notified out by providing optional callbacks in the `options` dictionary.\n       *\n       * Valid configuration in `options` are as follows:\n       *\n       * - `forwardHostProp(property, value)`: Called when a property referenced\n       *   in the template changed on the template's host. As this library does\n       *   not retain references to templates instanced by the user, it is the\n       *   templatize owner's responsibility to forward host property changes into\n       *   user-stamped instances.  The `instance.forwardHostProp(property, value)`\n       *    method on the generated class should be called to forward host\n       *   properties into the template to prevent unnecessary property-changed\n       *   notifications. Any properties referenced in the template that are not\n       *   defined in `instanceProps` will be notified up to the template's host\n       *   automatically.\n       * - `instanceProps`: Dictionary of property names that will be added\n       *   to the instance by the templatize owner.  These properties shadow any\n       *   host properties, and changes within the template to these properties\n       *   will result in `notifyInstanceProp` being called.\n       * - `mutableData`: When `true`, the generated class will skip strict\n       *   dirty-checking for objects and arrays (always consider them to be\n       *   \"dirty\").\n       * - `notifyInstanceProp(instance, property, value)`: Called when\n       *   an instance property changes.  Users may choose to call `notifyPath`\n       *   on e.g. the owner to notify the change.\n       * - `parentModel`: When `true`, events handled by declarative event listeners\n       *   (`on-event=\"handler\"`) will be decorated with a `model` property pointing\n       *   to the template instance that stamped it.  It will also be returned\n       *   from `instance.parentModel` in cases where template instance nesting\n       *   causes an inner model to shadow an outer model.\n       *\n       * Note that the class returned from `templatize` is generated only once\n       * for a given `<template>` using `options` from the first call for that\n       * template, and the cached class is returned for all subsequent calls to\n       * `templatize` for that template.  As such, `options` callbacks should not\n       * close over owner-specific properties since only the first `options` is\n       * used; rather, callbacks are called bound to the `owner`, and so context\n       * needed from the callbacks (such as references to `instances` stamped)\n       * should be stored on the `owner` such that they can be retrieved via `this`.\n       *\n       * @memberof Polymer.Templatize\n       * @param {!HTMLTemplateElement} template Template to templatize\n       * @param {!Polymer_PropertyEffects} owner Owner of the template instances;\n       *   any optional callbacks will be bound to this owner.\n       * @param {Object=} options Options dictionary (see summary for details)\n       * @return {function(new:TemplateInstanceBase)} Generated class bound to the template\n       *   provided\n       * @suppress {invalidCasts}\n       */\n      templatize(template, owner, options) {\n        options = /** @type {!TemplatizeOptions} */(options || {});\n        if (template.__templatizeOwner) {\n          throw new Error('A <template> can only be templatized once');\n        }\n        template.__templatizeOwner = owner;\n        let templateInfo = owner.constructor._parseTemplate(template);\n        // Get memoized base class for the prototypical template, which\n        // includes property effects for binding template & forwarding\n        let baseClass = templateInfo.templatizeInstanceClass;\n        if (!baseClass) {\n          baseClass = createTemplatizerClass(template, templateInfo, options);\n          templateInfo.templatizeInstanceClass = baseClass;\n        }\n        // Host property forwarding must be installed onto template instance\n        addPropagateEffects(template, templateInfo, options);\n        // Subclass base class and add reference for this specific template\n        let klass = class TemplateInstance extends baseClass {};\n        klass.prototype._methodHost = findMethodHost(template);\n        klass.prototype.__dataHost = template;\n        klass.prototype.__templatizeOwner = owner;\n        klass.prototype.__hostProps = templateInfo.hostProps;\n        return /** @type {function(new:TemplateInstanceBase)} */(klass);\n      },\n\n      /**\n       * Returns the template \"model\" associated with a given element, which\n       * serves as the binding scope for the template instance the element is\n       * contained in. A template model is an instance of\n       * `TemplateInstanceBase`, and should be used to manipulate data\n       * associated with this template instance.\n       *\n       * Example:\n       *\n       *   let model = modelForElement(el);\n       *   if (model.index < 10) {\n       *     model.set('item.checked', true);\n       *   }\n       *\n       * @memberof Polymer.Templatize\n       * @param {HTMLTemplateElement} template The model will be returned for\n       *   elements stamped from this template\n       * @param {Node} node Node for which to return a template model.\n       * @return {TemplateInstanceBase} Template instance representing the\n       *   binding scope for the element\n       */\n      modelForElement(template, node) {\n        let model;\n        while (node) {\n          // An element with a __templatizeInstance marks the top boundary\n          // of a scope; walk up until we find one, and then ensure that\n          // its __dataHost matches `this`, meaning this dom-repeat stamped it\n          if ((model = node.__templatizeInstance)) {\n            // Found an element stamped by another template; keep walking up\n            // from its __dataHost\n            if (model.__dataHost != template) {\n              node = model.__dataHost;\n            } else {\n              return model;\n            }\n          } else {\n            // Still in a template scope, keep going up until\n            // a __templatizeInstance is found\n            node = node.parentNode;\n          }\n        }\n        return null;\n      }\n    }\n\n    Polymer.Templatize = Templatize;\n    Polymer.TemplateInstanceBase = TemplateInstanceBase;\n\n  })();\n\n</script>\n\n\n\n// WEBPACK FOOTER //\n// ../bower_components/polymer/lib/utils/templatize.html","\nrequire('../polymer/polymer.html');\n\nconst RegisterHtmlTemplate = require('polymer-webpack-loader/register-html-template');\n\nRegisterHtmlTemplate.toBody(\"<custom-style> <style is=custom-style>html{--layout:{display:-ms-flexbox;display:-webkit-flex;display:flex};--layout-inline:{display:-ms-inline-flexbox;display:-webkit-inline-flex;display:inline-flex};--layout-horizontal:{@apply --layout;-ms-flex-direction:row;-webkit-flex-direction:row;flex-direction:row};--layout-horizontal-reverse:{@apply --layout;-ms-flex-direction:row-reverse;-webkit-flex-direction:row-reverse;flex-direction:row-reverse};--layout-vertical:{@apply --layout;-ms-flex-direction:column;-webkit-flex-direction:column;flex-direction:column};--layout-vertical-reverse:{@apply --layout;-ms-flex-direction:column-reverse;-webkit-flex-direction:column-reverse;flex-direction:column-reverse};--layout-wrap:{-ms-flex-wrap:wrap;-webkit-flex-wrap:wrap;flex-wrap:wrap};--layout-wrap-reverse:{-ms-flex-wrap:wrap-reverse;-webkit-flex-wrap:wrap-reverse;flex-wrap:wrap-reverse};--layout-flex-auto:{-ms-flex:1 1 auto;-webkit-flex:1 1 auto;flex:1 1 auto};--layout-flex-none:{-ms-flex:none;-webkit-flex:none;flex:none};--layout-flex:{-ms-flex:1 1 .000000001px;-webkit-flex:1;flex:1;-webkit-flex-basis:.000000001px;flex-basis:.000000001px};--layout-flex-2:{-ms-flex:2;-webkit-flex:2;flex:2};--layout-flex-3:{-ms-flex:3;-webkit-flex:3;flex:3};--layout-flex-4:{-ms-flex:4;-webkit-flex:4;flex:4};--layout-flex-5:{-ms-flex:5;-webkit-flex:5;flex:5};--layout-flex-6:{-ms-flex:6;-webkit-flex:6;flex:6};--layout-flex-7:{-ms-flex:7;-webkit-flex:7;flex:7};--layout-flex-8:{-ms-flex:8;-webkit-flex:8;flex:8};--layout-flex-9:{-ms-flex:9;-webkit-flex:9;flex:9};--layout-flex-10:{-ms-flex:10;-webkit-flex:10;flex:10};--layout-flex-11:{-ms-flex:11;-webkit-flex:11;flex:11};--layout-flex-12:{-ms-flex:12;-webkit-flex:12;flex:12};--layout-start:{-ms-flex-align:start;-webkit-align-items:flex-start;align-items:flex-start};--layout-center:{-ms-flex-align:center;-webkit-align-items:center;align-items:center};--layout-end:{-ms-flex-align:end;-webkit-align-items:flex-end;align-items:flex-end};--layout-baseline:{-ms-flex-align:baseline;-webkit-align-items:baseline;align-items:baseline};--layout-start-justified:{-ms-flex-pack:start;-webkit-justify-content:flex-start;justify-content:flex-start};--layout-center-justified:{-ms-flex-pack:center;-webkit-justify-content:center;justify-content:center};--layout-end-justified:{-ms-flex-pack:end;-webkit-justify-content:flex-end;justify-content:flex-end};--layout-around-justified:{-ms-flex-pack:distribute;-webkit-justify-content:space-around;justify-content:space-around};--layout-justified:{-ms-flex-pack:justify;-webkit-justify-content:space-between;justify-content:space-between};--layout-center-center:{@apply --layout-center;@apply --layout-center-justified;};--layout-self-start:{-ms-align-self:flex-start;-webkit-align-self:flex-start;align-self:flex-start};--layout-self-center:{-ms-align-self:center;-webkit-align-self:center;align-self:center};--layout-self-end:{-ms-align-self:flex-end;-webkit-align-self:flex-end;align-self:flex-end};--layout-self-stretch:{-ms-align-self:stretch;-webkit-align-self:stretch;align-self:stretch};--layout-self-baseline:{-ms-align-self:baseline;-webkit-align-self:baseline;align-self:baseline};--layout-start-aligned:{-ms-flex-line-pack:start;-ms-align-content:flex-start;-webkit-align-content:flex-start;align-content:flex-start};--layout-end-aligned:{-ms-flex-line-pack:end;-ms-align-content:flex-end;-webkit-align-content:flex-end;align-content:flex-end};--layout-center-aligned:{-ms-flex-line-pack:center;-ms-align-content:center;-webkit-align-content:center;align-content:center};--layout-between-aligned:{-ms-flex-line-pack:justify;-ms-align-content:space-between;-webkit-align-content:space-between;align-content:space-between};--layout-around-aligned:{-ms-flex-line-pack:distribute;-ms-align-content:space-around;-webkit-align-content:space-around;align-content:space-around};--layout-block:{display:block};--layout-invisible:{visibility:hidden!important};--layout-relative:{position:relative};--layout-fit:{position:absolute;top:0;right:0;bottom:0;left:0};--layout-scroll:{-webkit-overflow-scrolling:touch;overflow:auto};--layout-fullbleed:{margin:0;height:100vh};--layout-fixed-top:{position:fixed;top:0;left:0;right:0};--layout-fixed-right:{position:fixed;top:0;right:0;bottom:0};--layout-fixed-bottom:{position:fixed;right:0;bottom:0;left:0};--layout-fixed-left:{position:fixed;top:0;bottom:0;left:0};}</style> </custom-style>\");\n\n\n\n// WEBPACK FOOTER //\n// ../bower_components/iron-flex-layout/iron-flex-layout.html","<!--\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n-->\n<link rel=\"import\" href=\"../utils/boot.html\">\n<link rel=\"import\" href=\"../utils/mixin.html\">\n<link rel=\"import\" href=\"../utils/gestures.html\">\n\n<script>\n(function() {\n\n  'use strict';\n\n  /**\n   * @const {Polymer.Gestures}\n   */\n  const gestures = Polymer.Gestures;\n\n  /**\n   * Element class mixin that provides API for adding Polymer's cross-platform\n   * gesture events to nodes.\n   *\n   * The API is designed to be compatible with override points implemented\n   * in `Polymer.TemplateStamp` such that declarative event listeners in\n   * templates will support gesture events when this mixin is applied along with\n   * `Polymer.TemplateStamp`.\n   *\n   * @mixinFunction\n   * @polymer\n   * @memberof Polymer\n   * @summary Element class mixin that provides API for adding Polymer's cross-platform\n   * gesture events to nodes\n   */\n  Polymer.GestureEventListeners = Polymer.dedupingMixin(superClass => {\n\n    /**\n     * @polymer\n     * @mixinClass\n     * @implements {Polymer_GestureEventListeners}\n     */\n    class GestureEventListeners extends superClass {\n\n      _addEventListenerToNode(node, eventName, handler) {\n        if (!gestures.addListener(node, eventName, handler)) {\n          super._addEventListenerToNode(node, eventName, handler);\n        }\n      }\n\n      _removeEventListenerFromNode(node, eventName, handler) {\n        if (!gestures.removeListener(node, eventName, handler)) {\n          super._removeEventListenerFromNode(node, eventName, handler);\n        }\n      }\n\n    }\n\n    return GestureEventListeners;\n\n  });\n\n})();\n</script>\n\n\n\n// WEBPACK FOOTER //\n// ../bower_components/polymer/lib/mixins/gesture-event-listeners.html","<!--\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n-->\n\n<link rel=\"import\" href=\"../../../shadycss/apply-shim.html\">\n<link rel=\"import\" href=\"../mixins/element-mixin.html\">\n<link rel=\"import\" href=\"../mixins/gesture-event-listeners.html\">\n<link rel=\"import\" href=\"../utils/mixin.html\">\n<link rel=\"import\" href=\"../utils/import-href.html\">\n<link rel=\"import\" href=\"../utils/render-status.html\">\n<link rel=\"import\" href=\"../utils/unresolved.html\">\n<link rel=\"import\" href=\"polymer.dom.html\">\n\n<script>\n(function() {\n\n  'use strict';\n\n  let styleInterface = window.ShadyCSS;\n\n  /**\n   * Element class mixin that provides Polymer's \"legacy\" API intended to be\n   * backward-compatible to the greatest extent possible with the API\n   * found on the Polymer 1.x `Polymer.Base` prototype applied to all elements\n   * defined using the `Polymer({...})` function.\n   *\n   * @mixinFunction\n   * @polymer\n   * @appliesMixin Polymer.ElementMixin\n   * @appliesMixin Polymer.GestureEventListeners\n   * @property isAttached {boolean} Set to `true` in this element's\n   *   `connectedCallback` and `false` in `disconnectedCallback`\n   * @memberof Polymer\n   * @summary Element class mixin that provides Polymer's \"legacy\" API\n   */\n  Polymer.LegacyElementMixin = Polymer.dedupingMixin((base) => {\n\n    /**\n     * @constructor\n     * @extends {base}\n     * @implements {Polymer_ElementMixin}\n     * @implements {Polymer_GestureEventListeners}\n     */\n    const legacyElementBase = Polymer.GestureEventListeners(Polymer.ElementMixin(base));\n\n    /**\n     * Map of simple names to touch action names\n     * @dict\n     */\n    const DIRECTION_MAP = {\n      'x': 'pan-x',\n      'y': 'pan-y',\n      'none': 'none',\n      'all': 'auto'\n    };\n\n    /**\n     * @polymer\n     * @mixinClass\n     * @extends {legacyElementBase}\n     * @implements {Polymer_LegacyElementMixin}\n     * @unrestricted\n     */\n    class LegacyElement extends legacyElementBase {\n\n      constructor() {\n        super();\n        this.root = this;\n        this.created();\n      }\n\n      /**\n       * Legacy callback called during the `constructor`, for overriding\n       * by the user.\n       */\n      created() {}\n\n      /**\n       * Provides an implementation of `connectedCallback`\n       * which adds Polymer legacy API's `attached` method.\n       * @override\n       */\n      connectedCallback() {\n        super.connectedCallback();\n        this.isAttached = true;\n        this.attached();\n      }\n\n      /**\n       * Legacy callback called during `connectedCallback`, for overriding\n       * by the user.\n       */\n      attached() {}\n\n      /**\n       * Provides an implementation of `disconnectedCallback`\n       * which adds Polymer legacy API's `detached` method.\n       * @override\n       */\n      disconnectedCallback() {\n        super.disconnectedCallback();\n        this.isAttached = false;\n        this.detached();\n      }\n\n      /**\n       * Legacy callback called during `disconnectedCallback`, for overriding\n       * by the user.\n       */\n      detached() {}\n\n      /**\n       * Provides an override implementation of `attributeChangedCallback`\n       * which adds the Polymer legacy API's `attributeChanged` method.\n       * @param {string} name Name of attribute.\n       * @param {?string} old Old value of attribute.\n       * @param {?string} value Current value of attribute.\n       * @override\n       */\n      attributeChangedCallback(name, old, value) {\n        if (old !== value) {\n          super.attributeChangedCallback(name, old, value);\n          this.attributeChanged(name, old, value);\n        }\n      }\n\n      /**\n       * Legacy callback called during `attributeChangedChallback`, for overriding\n       * by the user.\n       * @param {string} name Name of attribute.\n       * @param {?string} old Old value of attribute.\n       * @param {?string} value Current value of attribute.\n       */\n      attributeChanged(name, old, value) {} // eslint-disable-line no-unused-vars\n\n      /**\n       * Overrides the default `Polymer.PropertyEffects` implementation to\n       * add support for class initialization via the `_registered` callback.\n       * This is called only when the first instance of the element is created.\n       *\n       * @override\n       */\n      _initializeProperties() {\n        let proto = Object.getPrototypeOf(this);\n        if (!proto.hasOwnProperty('__hasRegisterFinished')) {\n          proto.__hasRegisterFinished = true;\n          this._registered();\n        }\n        super._initializeProperties();\n      }\n\n      /**\n       * Called automatically when an element is initializing.\n       * Users may override this method to perform class registration time\n       * work. The implementation should ensure the work is performed\n       * only once for the class.\n       * @protected\n       */\n      _registered() {}\n\n      /**\n       * Overrides the default `Polymer.PropertyEffects` implementation to\n       * add support for installing `hostAttributes` and `listeners`.\n       *\n       * @override\n       */\n      ready() {\n        this._ensureAttributes();\n        this._applyListeners();\n        super.ready();\n      }\n\n      /**\n       * Ensures an element has required attributes. Called when the element\n       * is being readied via `ready`. Users should override to set the\n       * element's required attributes. The implementation should be sure\n       * to check and not override existing attributes added by\n       * the user of the element. Typically, setting attributes should be left\n       * to the element user and not done here; reasonable exceptions include\n       * setting aria roles and focusability.\n       * @protected\n       */\n      _ensureAttributes() {}\n\n      /**\n       * Adds element event listeners. Called when the element\n       * is being readied via `ready`. Users should override to\n       * add any required element event listeners.\n       * In performance critical elements, the work done here should be kept\n       * to a minimum since it is done before the element is rendered. In\n       * these elements, consider adding listeners asychronously so as not to\n       * block render.\n       * @protected\n       */\n      _applyListeners() {}\n\n      /**\n       * Converts a typed JavaScript value to a string.\n       *\n       * Note this method is provided as backward-compatible legacy API\n       * only.  It is not directly called by any Polymer features. To customize\n       * how properties are serialized to attributes for attribute bindings and\n       * `reflectToAttribute: true` properties as well as this method, override\n       * the `_serializeValue` method provided by `Polymer.PropertyAccessors`.\n       *\n       * @param {*} value Value to deserialize\n       * @return {string | undefined} Serialized value\n       */\n      serialize(value) {\n        return this._serializeValue(value);\n      }\n\n      /**\n       * Converts a string to a typed JavaScript value.\n       *\n       * Note this method is provided as backward-compatible legacy API\n       * only.  It is not directly called by any Polymer features.  To customize\n       * how attributes are deserialized to properties for in\n       * `attributeChangedCallback`, override `_deserializeValue` method\n       * provided by `Polymer.PropertyAccessors`.\n       *\n       * @param {string} value String to deserialize\n       * @param {*} type Type to deserialize the string to\n       * @return {*} Returns the deserialized value in the `type` given.\n       */\n      deserialize(value, type) {\n        return this._deserializeValue(value, type);\n      }\n\n      /**\n       * Serializes a property to its associated attribute.\n       *\n       * Note this method is provided as backward-compatible legacy API\n       * only.  It is not directly called by any Polymer features.\n       *\n       * @param {string} property Property name to reflect.\n       * @param {string=} attribute Attribute name to reflect.\n       * @param {*=} value Property value to refect.\n       */\n      reflectPropertyToAttribute(property, attribute, value) {\n        this._propertyToAttribute(property, attribute, value);\n      }\n\n      /**\n       * Sets a typed value to an HTML attribute on a node.\n       *\n       * Note this method is provided as backward-compatible legacy API\n       * only.  It is not directly called by any Polymer features.\n       *\n       * @param {*} value Value to serialize.\n       * @param {string} attribute Attribute name to serialize to.\n       * @param {Element} node Element to set attribute to.\n       */\n      serializeValueToAttribute(value, attribute, node) {\n        this._valueToNodeAttribute(/** @type {Element} */ (node || this), value, attribute);\n      }\n\n      /**\n       * Copies own properties (including accessor descriptors) from a source\n       * object to a target object.\n       *\n       * @param {Object} prototype Target object to copy properties to.\n       * @param {Object} api Source object to copy properties from.\n       * @return {Object} prototype object that was passed as first argument.\n       */\n      extend(prototype, api) {\n        if (!(prototype && api)) {\n          return prototype || api;\n        }\n        let n$ = Object.getOwnPropertyNames(api);\n        for (let i=0, n; (i<n$.length) && (n=n$[i]); i++) {\n          let pd = Object.getOwnPropertyDescriptor(api, n);\n          if (pd) {\n            Object.defineProperty(prototype, n, pd);\n          }\n        }\n        return prototype;\n      }\n\n      /**\n       * Copies props from a source object to a target object.\n       *\n       * Note, this method uses a simple `for...in` strategy for enumerating\n       * properties.  To ensure only `ownProperties` are copied from source\n       * to target and that accessor implementations are copied, use `extend`.\n       *\n       * @param {Object} target Target object to copy properties to.\n       * @param {Object} source Source object to copy properties from.\n       * @return {Object} Target object that was passed as first argument.\n       */\n      mixin(target, source) {\n        for (let i in source) {\n          target[i] = source[i];\n        }\n        return target;\n      }\n\n      /**\n       * Sets the prototype of an object.\n       *\n       * Note this method is provided as backward-compatible legacy API\n       * only.  It is not directly called by any Polymer features.\n       * @param {Object} object The object on which to set the prototype.\n       * @param {Object} prototype The prototype that will be set on the given\n       * `object`.\n       * @return {Object} Returns the given `object` with its prototype set\n       * to the given `prototype` object.\n       */\n      chainObject(object, prototype) {\n        if (object && prototype && object !== prototype) {\n          object.__proto__ = prototype;\n        }\n        return object;\n      }\n\n      /* **** Begin Template **** */\n\n      /**\n       * Calls `importNode` on the `content` of the `template` specified and\n       * returns a document fragment containing the imported content.\n       *\n       * @param {HTMLTemplateElement} template HTML template element to instance.\n       * @return {DocumentFragment} Document fragment containing the imported\n       *   template content.\n      */\n      instanceTemplate(template) {\n        let content = this.constructor._contentForTemplate(template);\n        let dom = /** @type {DocumentFragment} */\n          (document.importNode(content, true));\n        return dom;\n      }\n\n      /* **** Begin Events **** */\n\n\n\n      /**\n       * Dispatches a custom event with an optional detail value.\n       *\n       * @param {string} type Name of event type.\n       * @param {*=} detail Detail value containing event-specific\n       *   payload.\n       * @param {{ bubbles: (boolean|undefined), cancelable: (boolean|undefined), composed: (boolean|undefined) }=}\n       *  options Object specifying options.  These may include:\n       *  `bubbles` (boolean, defaults to `true`),\n       *  `cancelable` (boolean, defaults to false), and\n       *  `node` on which to fire the event (HTMLElement, defaults to `this`).\n       * @return {Event} The new event that was fired.\n       */\n      fire(type, detail, options) {\n        options = options || {};\n        detail = (detail === null || detail === undefined) ? {} : detail;\n        let event = new Event(type, {\n          bubbles: options.bubbles === undefined ? true : options.bubbles,\n          cancelable: Boolean(options.cancelable),\n          composed: options.composed === undefined ? true: options.composed\n        });\n        event.detail = detail;\n        let node = options.node || this;\n        node.dispatchEvent(event)\n        return event;\n      }\n\n      /**\n       * Convenience method to add an event listener on a given element,\n       * late bound to a named method on this element.\n       *\n       * @param {Element} node Element to add event listener to.\n       * @param {string} eventName Name of event to listen for.\n       * @param {string} methodName Name of handler method on `this` to call.\n       */\n      listen(node, eventName, methodName) {\n        node = /** @type {Element} */ (node || this);\n        let hbl = this.__boundListeners ||\n          (this.__boundListeners = new WeakMap());\n        let bl = hbl.get(node);\n        if (!bl) {\n          bl = {};\n          hbl.set(node, bl);\n        }\n        let key = eventName + methodName;\n        if (!bl[key]) {\n          bl[key] = this._addMethodEventListenerToNode(\n            node, eventName, methodName, this);\n        }\n      }\n\n      /**\n       * Convenience method to remove an event listener from a given element,\n       * late bound to a named method on this element.\n       *\n       * @param {Element} node Element to remove event listener from.\n       * @param {string} eventName Name of event to stop listening to.\n       * @param {string} methodName Name of handler method on `this` to not call\n       anymore.\n       */\n      unlisten(node, eventName, methodName) {\n        node = /** @type {Element} */ (node || this);\n        let bl = this.__boundListeners && this.__boundListeners.get(node);\n        let key = eventName + methodName;\n        let handler = bl && bl[key];\n        if (handler) {\n          this._removeEventListenerFromNode(node, eventName, handler);\n          bl[key] = null;\n        }\n      }\n\n      /**\n       * Override scrolling behavior to all direction, one direction, or none.\n       *\n       * Valid scroll directions:\n       *   - 'all': scroll in any direction\n       *   - 'x': scroll only in the 'x' direction\n       *   - 'y': scroll only in the 'y' direction\n       *   - 'none': disable scrolling for this node\n       *\n       * @param {string=} direction Direction to allow scrolling\n       * Defaults to `all`.\n       * @param {Element=} node Element to apply scroll direction setting.\n       * Defaults to `this`.\n       */\n      setScrollDirection(direction, node) {\n        Polymer.Gestures.setTouchAction(/** @type {Element} */ (node || this), DIRECTION_MAP[direction] || 'auto');\n      }\n      /* **** End Events **** */\n\n      /**\n       * Convenience method to run `querySelector` on this local DOM scope.\n       *\n       * This function calls `Polymer.dom(this.root).querySelector(slctr)`.\n       *\n       * @param {string} slctr Selector to run on this local DOM scope\n       * @return {Element} Element found by the selector, or null if not found.\n       */\n      $$(slctr) {\n        return this.root.querySelector(slctr);\n      }\n\n      /**\n       * Return the element whose local dom within which this element\n       * is contained. This is a shorthand for\n       * `this.getRootNode().host`.\n       * @this {Element}\n       */\n      get domHost() {\n        let root = this.getRootNode();\n        return (root instanceof DocumentFragment) ? /** @type {ShadowRoot} */ (root).host : root;\n      }\n\n      /**\n       * Force this element to distribute its children to its local dom.\n       * This should not be necessary as of Polymer 2.0.2 and is provided only\n       * for backwards compatibility.\n       */\n      distributeContent() {\n        if (window.ShadyDOM && this.shadowRoot) {\n          ShadyDOM.flush();\n        }\n      }\n\n      /**\n       * Returns a list of nodes that are the effective childNodes. The effective\n       * childNodes list is the same as the element's childNodes except that\n       * any `<content>` elements are replaced with the list of nodes distributed\n       * to the `<content>`, the result of its `getDistributedNodes` method.\n       * @this {Element}\n       * @return {Array<Node>} List of effctive child nodes.\n       */\n      getEffectiveChildNodes() {\n        return /** @type {Polymer.DomApi} */ (Polymer.dom(this)).getEffectiveChildNodes();\n      }\n\n      /**\n       * Returns a list of nodes distributed within this element that match\n       * `selector`. These can be dom children or elements distributed to\n       * children that are insertion points.\n       * @param {string} selector Selector to run.\n       * @this {Element}\n       * @return {Array<Node>} List of distributed elements that match selector.\n       */\n      queryDistributedElements(selector) {\n        return /** @type {Polymer.DomApi} */ (Polymer.dom(this)).queryDistributedElements(selector);\n      }\n\n      /**\n       * Returns a list of elements that are the effective children. The effective\n       * children list is the same as the element's children except that\n       * any `<content>` elements are replaced with the list of elements\n       * distributed to the `<content>`.\n       *\n       * @return {Array<Node>} List of effctive children.\n       */\n      getEffectiveChildren() {\n        let list = this.getEffectiveChildNodes();\n        return list.filter(function(/** @type {Node} */ n) {\n          return (n.nodeType === Node.ELEMENT_NODE);\n        });\n      }\n\n      /**\n       * Returns a string of text content that is the concatenation of the\n       * text content's of the element's effective childNodes (the elements\n       * returned by <a href=\"#getEffectiveChildNodes>getEffectiveChildNodes</a>.\n       *\n       * @return {string} List of effctive children.\n       */\n      getEffectiveTextContent() {\n        let cn = this.getEffectiveChildNodes();\n        let tc = [];\n        for (let i=0, c; (c = cn[i]); i++) {\n          if (c.nodeType !== Node.COMMENT_NODE) {\n            tc.push(c.textContent);\n          }\n        }\n        return tc.join('');\n      }\n\n      /**\n       * Returns the first effective childNode within this element that\n       * match `selector`. These can be dom child nodes or elements distributed\n       * to children that are insertion points.\n       * @param {string} selector Selector to run.\n       * @return {Object<Node>} First effective child node that matches selector.\n       */\n      queryEffectiveChildren(selector) {\n        let e$ = this.queryDistributedElements(selector);\n        return e$ && e$[0];\n      }\n\n      /**\n       * Returns a list of effective childNodes within this element that\n       * match `selector`. These can be dom child nodes or elements distributed\n       * to children that are insertion points.\n       * @param {string} selector Selector to run.\n       * @return {Array<Node>} List of effective child nodes that match selector.\n       */\n      queryAllEffectiveChildren(selector) {\n        return this.queryDistributedElements(selector);\n      }\n\n      /**\n       * Returns a list of nodes distributed to this element's `<slot>`.\n       *\n       * If this element contains more than one `<slot>` in its local DOM,\n       * an optional selector may be passed to choose the desired content.\n       *\n       * @param {string=} slctr CSS selector to choose the desired\n       *   `<slot>`.  Defaults to `content`.\n       * @return {Array<Node>} List of distributed nodes for the `<slot>`.\n       */\n      getContentChildNodes(slctr) {\n        let content = this.root.querySelector(slctr || 'slot');\n        return content ? /** @type {Polymer.DomApi} */(Polymer.dom(content)).getDistributedNodes() : [];\n      }\n\n      /**\n       * Returns a list of element children distributed to this element's\n       * `<slot>`.\n       *\n       * If this element contains more than one `<slot>` in its\n       * local DOM, an optional selector may be passed to choose the desired\n       * content.  This method differs from `getContentChildNodes` in that only\n       * elements are returned.\n       *\n       * @param {string=} slctr CSS selector to choose the desired\n       *   `<content>`.  Defaults to `content`.\n       * @return {Array<HTMLElement>} List of distributed nodes for the\n       *   `<slot>`.\n       * @suppress {invalidCasts}\n       */\n      getContentChildren(slctr) {\n        return /** @type {Array<HTMLElement>} */(this.getContentChildNodes(slctr).filter(function(n) {\n          return (n.nodeType === Node.ELEMENT_NODE);\n        }));\n      }\n\n      /**\n       * Checks whether an element is in this element's light DOM tree.\n       *\n       * @param {?Node} node The element to be checked.\n       * @this {Element}\n       * @return {boolean} true if node is in this element's light DOM tree.\n       */\n      isLightDescendant(node) {\n        return this !== node && this.contains(node) &&\n            this.getRootNode() === node.getRootNode();\n      }\n\n      /**\n       * Checks whether an element is in this element's local DOM tree.\n       *\n       * @param {Element=} node The element to be checked.\n       * @return {boolean} true if node is in this element's local DOM tree.\n       */\n      isLocalDescendant(node) {\n        return this.root === node.getRootNode();\n      }\n\n      // NOTE: should now be handled by ShadyCss library.\n      scopeSubtree(container, shouldObserve) { // eslint-disable-line no-unused-vars\n      }\n\n      /**\n       * Returns the computed style value for the given property.\n       * @param {string} property The css property name.\n       * @return {string} Returns the computed css property value for the given\n       * `property`.\n       */\n      getComputedStyleValue(property) {\n        return styleInterface.getComputedStyleValue(this, property);\n      }\n\n      // debounce\n\n      /**\n       * Call `debounce` to collapse multiple requests for a named task into\n       * one invocation which is made after the wait time has elapsed with\n       * no new request.  If no wait time is given, the callback will be called\n       * at microtask timing (guaranteed before paint).\n       *\n       *     debouncedClickAction(e) {\n       *       // will not call `processClick` more than once per 100ms\n       *       this.debounce('click', function() {\n       *        this.processClick();\n       *       } 100);\n       *     }\n       *\n       * @param {string} jobName String to indentify the debounce job.\n       * @param {function()} callback Function that is called (with `this`\n       *   context) when the wait time elapses.\n       * @param {number} wait Optional wait time in milliseconds (ms) after the\n       *   last signal that must elapse before invoking `callback`\n       * @return {Object} Returns a debouncer object on which exists the\n       * following methods: `isActive()` returns true if the debouncer is\n       * active; `cancel()` cancels the debouncer if it is active;\n       * `flush()` immediately invokes the debounced callback if the debouncer\n       * is active.\n       */\n      debounce(jobName, callback, wait) {\n        this._debouncers = this._debouncers || {};\n        return this._debouncers[jobName] = Polymer.Debouncer.debounce(\n              this._debouncers[jobName]\n            , wait > 0 ? Polymer.Async.timeOut.after(wait) : Polymer.Async.microTask\n            , callback.bind(this));\n      }\n\n      /**\n       * Returns whether a named debouncer is active.\n       *\n       * @param {string} jobName The name of the debouncer started with `debounce`\n       * @return {boolean} Whether the debouncer is active (has not yet fired).\n       */\n      isDebouncerActive(jobName) {\n        this._debouncers = this._debouncers || {};\n        let debouncer = this._debouncers[jobName];\n        return !!(debouncer && debouncer.isActive());\n      }\n\n      /**\n       * Immediately calls the debouncer `callback` and inactivates it.\n       *\n       * @param {string} jobName The name of the debouncer started with `debounce`\n       */\n      flushDebouncer(jobName) {\n        this._debouncers = this._debouncers || {};\n        let debouncer = this._debouncers[jobName];\n        if (debouncer) {\n          debouncer.flush();\n        }\n      }\n\n      /**\n       * Cancels an active debouncer.  The `callback` will not be called.\n       *\n       * @param {string} jobName The name of the debouncer started with `debounce`\n       */\n      cancelDebouncer(jobName) {\n        this._debouncers = this._debouncers || {}\n        let debouncer = this._debouncers[jobName];\n        if (debouncer) {\n          debouncer.cancel();\n        }\n      }\n\n      /**\n       * Runs a callback function asyncronously.\n       *\n       * By default (if no waitTime is specified), async callbacks are run at\n       * microtask timing, which will occur before paint.\n       *\n       * @param {Function} callback The callback function to run, bound to `this`.\n       * @param {number=} waitTime Time to wait before calling the\n       *   `callback`.  If unspecified or 0, the callback will be run at microtask\n       *   timing (before paint).\n       * @return {number} Handle that may be used to cancel the async job.\n       */\n      async(callback, waitTime) {\n        return waitTime > 0 ? Polymer.Async.timeOut.run(callback.bind(this), waitTime) :\n            ~Polymer.Async.microTask.run(callback.bind(this));\n      }\n\n      /**\n       * Cancels an async operation started with `async`.\n       *\n       * @param {number} handle Handle returned from original `async` call to\n       *   cancel.\n       */\n      cancelAsync(handle) {\n        handle < 0 ? Polymer.Async.microTask.cancel(~handle) :\n            Polymer.Async.timeOut.cancel(handle);\n      }\n\n      // other\n\n      /**\n       * Convenience method for creating an element and configuring it.\n       *\n       * @param {string} tag HTML element tag to create.\n       * @param {Object} props Object of properties to configure on the\n       *    instance.\n       * @return {Element} Newly created and configured element.\n       */\n      create(tag, props) {\n        let elt = document.createElement(tag);\n        if (props) {\n          if (elt.setProperties) {\n            elt.setProperties(props);\n          } else {\n            for (let n in props) {\n              elt[n] = props[n];\n            }\n          }\n        }\n        return elt;\n      }\n\n      /**\n       * Convenience method for importing an HTML document imperatively.\n       *\n       * This method creates a new `<link rel=\"import\">` element with\n       * the provided URL and appends it to the document to start loading.\n       * In the `onload` callback, the `import` property of the `link`\n       * element will contain the imported document contents.\n       *\n       * @param {string} href URL to document to load.\n       * @param {Function} onload Callback to notify when an import successfully\n       *   loaded.\n       * @param {Function} onerror Callback to notify when an import\n       *   unsuccessfully loaded.\n       * @param {boolean} optAsync True if the import should be loaded `async`.\n       *   Defaults to `false`.\n       * @return {HTMLLinkElement} The link element for the URL to be loaded.\n       */\n      importHref(href, onload, onerror, optAsync) { // eslint-disable-line no-unused-vars\n        let loadFn = onload ? onload.bind(this) : null;\n        let errorFn = onerror ? onerror.bind(this) : null;\n        return Polymer.importHref(href, loadFn, errorFn, optAsync);\n      }\n\n      /**\n       * Polyfill for Element.prototype.matches, which is sometimes still\n       * prefixed.\n       *\n       * @param {string} selector Selector to test.\n       * @param {Element=} node Element to test the selector against.\n       * @return {boolean} Whether the element matches the selector.\n       */\n      elementMatches(selector, node) {\n        return Polymer.dom.matchesSelector(/** @type {!Element} */ (node || this), selector);\n      }\n\n      /**\n       * Toggles an HTML attribute on or off.\n       *\n       * @param {string} name HTML attribute name\n       * @param {boolean=} bool Boolean to force the attribute on or off.\n       *    When unspecified, the state of the attribute will be reversed.\n       * @param {Element=} node Node to target.  Defaults to `this`.\n       */\n      toggleAttribute(name, bool, node) {\n        node = /** @type {Element} */ (node || this);\n        if (arguments.length == 1) {\n          bool = !node.hasAttribute(name);\n        }\n        if (bool) {\n          node.setAttribute(name, '');\n        } else {\n          node.removeAttribute(name);\n        }\n      }\n\n\n      /**\n       * Toggles a CSS class on or off.\n       *\n       * @param {string} name CSS class name\n       * @param {boolean=} bool Boolean to force the class on or off.\n       *    When unspecified, the state of the class will be reversed.\n       * @param {Element=} node Node to target.  Defaults to `this`.\n       */\n      toggleClass(name, bool, node) {\n        node = /** @type {Element} */ (node || this);\n        if (arguments.length == 1) {\n          bool = !node.classList.contains(name);\n        }\n        if (bool) {\n          node.classList.add(name);\n        } else {\n          node.classList.remove(name);\n        }\n      }\n\n      /**\n       * Cross-platform helper for setting an element's CSS `transform` property.\n       *\n       * @param {string} transformText Transform setting.\n       * @param {Element=} node Element to apply the transform to.\n       * Defaults to `this`\n       */\n      transform(transformText, node) {\n        node = /** @type {Element} */ (node || this);\n        node.style.webkitTransform = transformText;\n        node.style.transform = transformText;\n      }\n\n      /**\n       * Cross-platform helper for setting an element's CSS `translate3d`\n       * property.\n       *\n       * @param {number} x X offset.\n       * @param {number} y Y offset.\n       * @param {number} z Z offset.\n       * @param {Element=} node Element to apply the transform to.\n       * Defaults to `this`.\n       */\n      translate3d(x, y, z, node) {\n        node = /** @type {Element} */ (node || this);\n        this.transform('translate3d(' + x + ',' + y + ',' + z + ')', node);\n      }\n\n      /**\n       * Removes an item from an array, if it exists.\n       *\n       * If the array is specified by path, a change notification is\n       * generated, so that observers, data bindings and computed\n       * properties watching that path can update.\n       *\n       * If the array is passed directly, **no change\n       * notification is generated**.\n       *\n       * @param {string | !Array<number|string>} arrayOrPath Path to array from which to remove the item\n       *   (or the array itself).\n       * @param {*} item Item to remove.\n       * @return {Array} Array containing item removed.\n       */\n      arrayDelete(arrayOrPath, item) {\n        let index;\n        if (Array.isArray(arrayOrPath)) {\n          index = arrayOrPath.indexOf(item);\n          if (index >= 0) {\n            return arrayOrPath.splice(index, 1);\n          }\n        } else {\n          let arr = Polymer.Path.get(this, arrayOrPath);\n          index = arr.indexOf(item);\n          if (index >= 0) {\n            return this.splice(arrayOrPath, index, 1);\n          }\n        }\n        return null;\n      }\n\n      // logging\n\n      /**\n       * Facades `console.log`/`warn`/`error` as override point.\n       *\n       * @param {string} level One of 'log', 'warn', 'error'\n       * @param {Array} args Array of strings or objects to log\n       */\n      _logger(level, args) {\n        // accept ['foo', 'bar'] and [['foo', 'bar']]\n        if (Array.isArray(args) && args.length === 1) {\n          args = args[0];\n        }\n        switch(level) {\n          case 'log':\n          case 'warn':\n          case 'error':\n            console[level](...args);\n        }\n      }\n\n      /**\n       * Facades `console.log` as an override point.\n       *\n       * @param {...*} args Array of strings or objects to log\n       */\n      _log(...args) {\n        this._logger('log', args);\n      }\n\n      /**\n       * Facades `console.warn` as an override point.\n       *\n       * @param {...*} args Array of strings or objects to log\n       */\n      _warn(...args) {\n        this._logger('warn', args);\n      }\n\n      /**\n       * Facades `console.error` as an override point.\n       *\n       * @param {...*} args Array of strings or objects to log\n       */\n      _error(...args) {\n        this._logger('error', args)\n      }\n\n      /**\n       * Formats a message using the element type an a method name.\n       *\n       * @param {string} methodName Method name to associate with message\n       * @param {...*} args Array of strings or objects to log\n       * @return {Array} Array with formatting information for `console`\n       *   logging.\n       */\n      _logf(methodName, ...args) {\n        return ['[%s::%s]', this.is, methodName, ...args];\n      }\n\n    }\n\n    LegacyElement.prototype.is = '';\n\n    return LegacyElement;\n\n  });\n\n})();\n</script>\n\n\n\n// WEBPACK FOOTER //\n// ../bower_components/polymer/lib/legacy/legacy-element-mixin.html","\nrequire('./apply-shim.min.js');\n\n\n\n// WEBPACK FOOTER //\n// ../bower_components/shadycss/apply-shim.html","<!--\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n-->\n\n<link rel=\"import\" href=\"../../polymer-element.html\">\n<link rel=\"import\" href=\"../utils/templatize.html\">\n<link rel=\"import\" href=\"../utils/debounce.html\">\n<link rel=\"import\" href=\"../utils/flush.html\">\n<link rel=\"import\" href=\"../mixins/mutable-data.html\">\n\n<script>\n(function() {\n  'use strict';\n\n  let TemplateInstanceBase = Polymer.TemplateInstanceBase; // eslint-disable-line\n\n  /**\n   * @constructor\n   * @implements {Polymer_OptionalMutableData}\n   * @extends {Polymer.Element}\n   */\n  const domRepeatBase = Polymer.OptionalMutableData(Polymer.Element);\n\n  /**\n   * The `<dom-repeat>` element will automatically stamp and binds one instance\n   * of template content to each object in a user-provided array.\n   * `dom-repeat` accepts an `items` property, and one instance of the template\n   * is stamped for each item into the DOM at the location of the `dom-repeat`\n   * element.  The `item` property will be set on each instance's binding\n   * scope, thus templates should bind to sub-properties of `item`.\n   *\n   * Example:\n   *\n   * ```html\n   * <dom-module id=\"employee-list\">\n   *\n   *   <template>\n   *\n   *     <div> Employee list: </div>\n   *     <template is=\"dom-repeat\" items=\"{{employees}}\">\n   *         <div>First name: <span>{{item.first}}</span></div>\n   *         <div>Last name: <span>{{item.last}}</span></div>\n   *     </template>\n   *\n   *   </template>\n   *\n   *   <script>\n   *     Polymer({\n   *       is: 'employee-list',\n   *       ready: function() {\n   *         this.employees = [\n   *             {first: 'Bob', last: 'Smith'},\n   *             {first: 'Sally', last: 'Johnson'},\n   *             ...\n   *         ];\n   *       }\n   *     });\n   *   < /script>\n   *\n   * </dom-module>\n   * ```\n   *\n   * Notifications for changes to items sub-properties will be forwarded to template\n   * instances, which will update via the normal structured data notification system.\n   *\n   * Mutations to the `items` array itself should be made using the Array\n   * mutation API's on `Polymer.Base` (`push`, `pop`, `splice`, `shift`,\n   * `unshift`), and template instances will be kept in sync with the data in the\n   * array.\n   *\n   * Events caught by event handlers within the `dom-repeat` template will be\n   * decorated with a `model` property, which represents the binding scope for\n   * each template instance.  The model is an instance of Polymer.Base, and should\n   * be used to manipulate data on the instance, for example\n   * `event.model.set('item.checked', true);`.\n   *\n   * Alternatively, the model for a template instance for an element stamped by\n   * a `dom-repeat` can be obtained using the `modelForElement` API on the\n   * `dom-repeat` that stamped it, for example\n   * `this.$.domRepeat.modelForElement(event.target).set('item.checked', true);`.\n   * This may be useful for manipulating instance data of event targets obtained\n   * by event handlers on parents of the `dom-repeat` (event delegation).\n   *\n   * A view-specific filter/sort may be applied to each `dom-repeat` by supplying a\n   * `filter` and/or `sort` property.  This may be a string that names a function on\n   * the host, or a function may be assigned to the property directly.  The functions\n   * should implemented following the standard `Array` filter/sort API.\n   *\n   * In order to re-run the filter or sort functions based on changes to sub-fields\n   * of `items`, the `observe` property may be set as a space-separated list of\n   * `item` sub-fields that should cause a re-filter/sort when modified.  If\n   * the filter or sort function depends on properties not contained in `items`,\n   * the user should observe changes to those properties and call `render` to update\n   * the view based on the dependency change.\n   *\n   * For example, for an `dom-repeat` with a filter of the following:\n   *\n   * ```js\n   * isEngineer: function(item) {\n   *     return item.type == 'engineer' || item.manager.type == 'engineer';\n   * }\n   * ```\n   *\n   * Then the `observe` property should be configured as follows:\n   *\n   * ```html\n   * <template is=\"dom-repeat\" items=\"{{employees}}\"\n   *           filter=\"isEngineer\" observe=\"type manager.type\">\n   * ```\n   *\n   * @customElement\n   * @polymer\n   * @memberof Polymer\n   * @extends {domRepeatBase}\n   * @appliesMixin Polymer.OptionalMutableData\n   * @summary Custom element for stamping instance of a template bound to\n   *   items in an array.\n   */\n  class DomRepeat extends domRepeatBase {\n\n    // Not needed to find template; can be removed once the analyzer\n    // can find the tag name from customElements.define call\n    static get is() { return 'dom-repeat'; }\n\n    static get template() { return null; }\n\n    static get properties() {\n\n      /**\n       * Fired whenever DOM is added or removed by this template (by\n       * default, rendering occurs lazily).  To force immediate rendering, call\n       * `render`.\n       *\n       * @event dom-change\n       */\n      return {\n\n        /**\n         * An array containing items determining how many instances of the template\n         * to stamp and that that each template instance should bind to.\n         */\n        items: {\n          type: Array\n        },\n\n        /**\n         * The name of the variable to add to the binding scope for the array\n         * element associated with a given template instance.\n         */\n        as: {\n          type: String,\n          value: 'item'\n        },\n\n        /**\n         * The name of the variable to add to the binding scope with the index\n         * of the instance in the sorted and filtered list of rendered items.\n         * Note, for the index in the `this.items` array, use the value of the\n         * `itemsIndexAs` property.\n         */\n        indexAs: {\n          type: String,\n          value: 'index'\n        },\n\n        /**\n         * The name of the variable to add to the binding scope with the index\n         * of the instance in the `this.items` array. Note, for the index of\n         * this instance in the sorted and filtered list of rendered items,\n         * use the value of the `indexAs` property.\n         */\n        itemsIndexAs: {\n          type: String,\n          value: 'itemsIndex'\n        },\n\n        /**\n         * A function that should determine the sort order of the items.  This\n         * property should either be provided as a string, indicating a method\n         * name on the element's host, or else be an actual function.  The\n         * function should match the sort function passed to `Array.sort`.\n         * Using a sort function has no effect on the underlying `items` array.\n         */\n        sort: {\n          type: Function,\n          observer: '__sortChanged'\n        },\n\n        /**\n         * A function that can be used to filter items out of the view.  This\n         * property should either be provided as a string, indicating a method\n         * name on the element's host, or else be an actual function.  The\n         * function should match the sort function passed to `Array.filter`.\n         * Using a filter function has no effect on the underlying `items` array.\n         */\n        filter: {\n          type: Function,\n          observer: '__filterChanged'\n        },\n\n        /**\n         * When using a `filter` or `sort` function, the `observe` property\n         * should be set to a space-separated list of the names of item\n         * sub-fields that should trigger a re-sort or re-filter when changed.\n         * These should generally be fields of `item` that the sort or filter\n         * function depends on.\n         */\n        observe: {\n          type: String,\n          observer: '__observeChanged'\n        },\n\n        /**\n         * When using a `filter` or `sort` function, the `delay` property\n         * determines a debounce time after a change to observed item\n         * properties that must pass before the filter or sort is re-run.\n         * This is useful in rate-limiting shuffing of the view when\n         * item changes may be frequent.\n         */\n        delay: Number,\n\n        /**\n         * Count of currently rendered items after `filter` (if any) has been applied.\n         * If \"chunking mode\" is enabled, `renderedItemCount` is updated each time a\n         * set of template instances is rendered.\n         *\n         */\n        renderedItemCount: {\n          type: Number,\n          notify: true,\n          readOnly: true\n        },\n\n        /**\n         * Defines an initial count of template instances to render after setting\n         * the `items` array, before the next paint, and puts the `dom-repeat`\n         * into \"chunking mode\".  The remaining items will be created and rendered\n         * incrementally at each animation frame therof until all instances have\n         * been rendered.\n         */\n        initialCount: {\n          type: Number,\n          observer: '__initializeChunking'\n        },\n\n        /**\n         * When `initialCount` is used, this property defines a frame rate to\n         * target by throttling the number of instances rendered each frame to\n         * not exceed the budget for the target frame rate.  Setting this to a\n         * higher number will allow lower latency and higher throughput for\n         * things like event handlers, but will result in a longer time for the\n         * remaining items to complete rendering.\n         */\n        targetFramerate: {\n          type: Number,\n          value: 20\n        },\n\n        _targetFrameTime: {\n          type: Number,\n          computed: '__computeFrameTime(targetFramerate)'\n        }\n\n      }\n\n    }\n\n    static get observers() {\n      return [ '__itemsChanged(items.*)' ]\n    }\n\n    constructor() {\n      super();\n      this.__instances = [];\n      this.__limit = Infinity;\n      this.__pool = [];\n      this.__renderDebouncer = null;\n      this.__itemsIdxToInstIdx = {};\n      this.__chunkCount = null;\n      this.__lastChunkTime = null;\n      this.__sortFn = null;\n      this.__filterFn = null;\n      this.__observePaths = null;\n      this.__ctor = null;\n      this.__isDetached = true;\n      this.template = null;\n    }\n\n    disconnectedCallback() {\n      super.disconnectedCallback();\n      this.__isDetached = true;\n      for (let i=0; i<this.__instances.length; i++) {\n        this.__detachInstance(i);\n      }\n    }\n\n    connectedCallback() {\n      super.connectedCallback();\n      // only perform attachment if the element was previously detached.\n      if (this.__isDetached) {\n        this.__isDetached = false;\n        let parent = this.parentNode;\n        for (let i=0; i<this.__instances.length; i++) {\n          this.__attachInstance(i, parent);\n        }\n      }\n    }\n\n    __ensureTemplatized() {\n      // Templatizing (generating the instance constructor) needs to wait\n      // until ready, since won't have its template content handed back to\n      // it until then\n      if (!this.__ctor) {\n        let template = this.template = this.querySelector('template');\n        if (!template) {\n          // // Wait until childList changes and template should be there by then\n          let observer = new MutationObserver(() => {\n            if (this.querySelector('template')) {\n              observer.disconnect();\n              this.__render();\n            } else {\n              throw new Error('dom-repeat requires a <template> child');\n            }\n          })\n          observer.observe(this, {childList: true});\n          return false;\n        }\n        // Template instance props that should be excluded from forwarding\n        let instanceProps = {};\n        instanceProps[this.as] = true;\n        instanceProps[this.indexAs] = true;\n        instanceProps[this.itemsIndexAs] = true;\n        this.__ctor = Polymer.Templatize.templatize(template, this, {\n          mutableData: this.mutableData,\n          parentModel: true,\n          instanceProps: instanceProps,\n          /**\n           * @this {this}\n           * @param {string} prop Property to set\n           * @param {*} value Value to set property to\n           */\n          forwardHostProp: function(prop, value) {\n            let i$ = this.__instances;\n            for (let i=0, inst; (i<i$.length) && (inst=i$[i]); i++) {\n              inst.forwardHostProp(prop, value);\n            }\n          },\n          /**\n           * @this {this}\n           * @param {Object} inst Instance to notify\n           * @param {string} prop Property to notify\n           * @param {*} value Value to notify\n           */\n          notifyInstanceProp: function(inst, prop, value) {\n            if (Polymer.Path.matches(this.as, prop)) {\n              let idx = inst[this.itemsIndexAs];\n              if (prop == this.as) {\n                this.items[idx] = value;\n              }\n              let path = Polymer.Path.translate(this.as, 'items.' + idx, prop);\n              this.notifyPath(path, value);\n            }\n          }\n        });\n      }\n      return true;\n    }\n\n    __getMethodHost() {\n      // Technically this should be the owner of the outermost template.\n      // In shadow dom, this is always getRootNode().host, but we can\n      // approximate this via cooperation with our dataHost always setting\n      // `_methodHost` as long as there were bindings (or id's) on this\n      // instance causing it to get a dataHost.\n      return this.__dataHost._methodHost || this.__dataHost;\n    }\n\n    __sortChanged(sort) {\n      let methodHost = this.__getMethodHost();\n      this.__sortFn = sort && (typeof sort == 'function' ? sort :\n        function() { return methodHost[sort].apply(methodHost, arguments); });\n      if (this.items) {\n        this.__debounceRender(this.__render);\n      }\n    }\n\n    __filterChanged(filter) {\n      let methodHost = this.__getMethodHost();\n      this.__filterFn = filter && (typeof filter == 'function' ? filter :\n        function() { return methodHost[filter].apply(methodHost, arguments); });\n      if (this.items) {\n        this.__debounceRender(this.__render);\n      }\n    }\n\n    __computeFrameTime(rate) {\n      return Math.ceil(1000/rate);\n    }\n\n    __initializeChunking() {\n      if (this.initialCount) {\n        this.__limit = this.initialCount;\n        this.__chunkCount = this.initialCount;\n        this.__lastChunkTime = performance.now();\n      }\n    }\n\n    __tryRenderChunk() {\n      // Debounced so that multiple calls through `_render` between animation\n      // frames only queue one new rAF (e.g. array mutation & chunked render)\n      if (this.items && this.__limit < this.items.length) {\n        this.__debounceRender(this.__requestRenderChunk);\n      }\n    }\n\n    __requestRenderChunk() {\n      requestAnimationFrame(()=>this.__renderChunk());\n    }\n\n    __renderChunk() {\n      // Simple auto chunkSize throttling algorithm based on feedback loop:\n      // measure actual time between frames and scale chunk count by ratio\n      // of target/actual frame time\n      let currChunkTime = performance.now();\n      let ratio = this._targetFrameTime / (currChunkTime - this.__lastChunkTime);\n      this.__chunkCount = Math.round(this.__chunkCount * ratio) || 1;\n      this.__limit += this.__chunkCount;\n      this.__lastChunkTime = currChunkTime;\n      this.__debounceRender(this.__render);\n    }\n\n    __observeChanged() {\n      this.__observePaths = this.observe &&\n        this.observe.replace('.*', '.').split(' ');\n    }\n\n    __itemsChanged(change) {\n      if (this.items && !Array.isArray(this.items)) {\n        console.warn('dom-repeat expected array for `items`, found', this.items);\n      }\n      // If path was to an item (e.g. 'items.3' or 'items.3.foo'), forward the\n      // path to that instance synchronously (retuns false for non-item paths)\n      if (!this.__handleItemPath(change.path, change.value)) {\n        // Otherwise, the array was reset ('items') or spliced ('items.splices'),\n        // so queue a full refresh\n        this.__initializeChunking();\n        this.__debounceRender(this.__render);\n      }\n    }\n\n    __handleObservedPaths(path) {\n      if (this.__observePaths) {\n        path = path.substring(path.indexOf('.') + 1);\n        let paths = this.__observePaths;\n        for (let i=0; i<paths.length; i++) {\n          if (path.indexOf(paths[i]) === 0) {\n            this.__debounceRender(this.__render, this.delay);\n            return true;\n          }\n        }\n      }\n    }\n\n    /**\n     * @param {function(this:DomRepeat)} fn Function to debounce.\n     * @param {number=} delay Delay in ms to debounce by.\n     */\n    __debounceRender(fn, delay = 0) {\n      this.__renderDebouncer = Polymer.Debouncer.debounce(\n            this.__renderDebouncer\n          , delay > 0 ? Polymer.Async.timeOut.after(delay) : Polymer.Async.microTask\n          , fn.bind(this));\n      Polymer.enqueueDebouncer(this.__renderDebouncer);\n    }\n\n    /**\n     * Forces the element to render its content. Normally rendering is\n     * asynchronous to a provoking change. This is done for efficiency so\n     * that multiple changes trigger only a single render. The render method\n     * should be called if, for example, template rendering is required to\n     * validate application state.\n     */\n    render() {\n      // Queue this repeater, then flush all in order\n      this.__debounceRender(this.__render);\n      Polymer.flush();\n    }\n\n    __render() {\n      if (!this.__ensureTemplatized()) {\n        // No template found yet\n        return;\n      }\n      this.__applyFullRefresh();\n      // Reset the pool\n      // TODO(kschaaf): Reuse pool across turns and nested templates\n      // Now that objects/arrays are re-evaluated when set, we can safely\n      // reuse pooled instances across turns, however we still need to decide\n      // semantics regarding how long to hold, how many to hold, etc.\n      this.__pool.length = 0;\n      // Set rendered item count\n      this._setRenderedItemCount(this.__instances.length);\n      // Notify users\n      this.dispatchEvent(new CustomEvent('dom-change', {\n        bubbles: true,\n        composed: true\n      }));\n      // Check to see if we need to render more items\n      this.__tryRenderChunk();\n    }\n\n    __applyFullRefresh() {\n      let items = this.items || [];\n      let isntIdxToItemsIdx = new Array(items.length);\n      for (let i=0; i<items.length; i++) {\n        isntIdxToItemsIdx[i] = i;\n      }\n      // Apply user filter\n      if (this.__filterFn) {\n        isntIdxToItemsIdx = isntIdxToItemsIdx.filter((i, idx, array) =>\n          this.__filterFn(items[i], idx, array));\n      }\n      // Apply user sort\n      if (this.__sortFn) {\n        isntIdxToItemsIdx.sort((a, b) => this.__sortFn(items[a], items[b]));\n      }\n      // items->inst map kept for item path forwarding\n      const itemsIdxToInstIdx = this.__itemsIdxToInstIdx = {};\n      let instIdx = 0;\n      // Generate instances and assign items\n      const limit = Math.min(isntIdxToItemsIdx.length, this.__limit);\n      for (; instIdx<limit; instIdx++) {\n        let inst = this.__instances[instIdx];\n        let itemIdx = isntIdxToItemsIdx[instIdx];\n        let item = items[itemIdx];\n        itemsIdxToInstIdx[itemIdx] = instIdx;\n        if (inst && instIdx < this.__limit) {\n          inst._setPendingProperty(this.as, item);\n          inst._setPendingProperty(this.indexAs, instIdx);\n          inst._setPendingProperty(this.itemsIndexAs, itemIdx);\n          inst._flushProperties();\n        } else {\n          this.__insertInstance(item, instIdx, itemIdx);\n        }\n      }\n      // Remove any extra instances from previous state\n      for (let i=this.__instances.length-1; i>=instIdx; i--) {\n        this.__detachAndRemoveInstance(i);\n      }\n    }\n\n    __detachInstance(idx) {\n      let inst = this.__instances[idx];\n      for (let i=0; i<inst.children.length; i++) {\n        let el = inst.children[i];\n        inst.root.appendChild(el);\n      }\n      return inst;\n    }\n\n    __attachInstance(idx, parent) {\n      let inst = this.__instances[idx];\n      parent.insertBefore(inst.root, this);\n    }\n\n    __detachAndRemoveInstance(idx) {\n      let inst = this.__detachInstance(idx);\n      if (inst) {\n        this.__pool.push(inst);\n      }\n      this.__instances.splice(idx, 1);\n    }\n\n    __stampInstance(item, instIdx, itemIdx) {\n      let model = {};\n      model[this.as] = item;\n      model[this.indexAs] = instIdx;\n      model[this.itemsIndexAs] = itemIdx;\n      return new this.__ctor(model);\n    }\n\n    __insertInstance(item, instIdx, itemIdx) {\n      let inst = this.__pool.pop();\n      if (inst) {\n        // TODO(kschaaf): If the pool is shared across turns, hostProps\n        // need to be re-set to reused instances in addition to item\n        inst._setPendingProperty(this.as, item);\n        inst._setPendingProperty(this.indexAs, instIdx);\n        inst._setPendingProperty(this.itemsIndexAs, itemIdx);\n        inst._flushProperties();\n      } else {\n        inst = this.__stampInstance(item, instIdx, itemIdx);\n      }\n      let beforeRow = this.__instances[instIdx + 1];\n      let beforeNode = beforeRow ? beforeRow.children[0] : this;\n      this.parentNode.insertBefore(inst.root, beforeNode);\n      this.__instances[instIdx] = inst;\n      return inst;\n    }\n\n    // Implements extension point from Templatize mixin\n    _showHideChildren(hidden) {\n      for (let i=0; i<this.__instances.length; i++) {\n        this.__instances[i]._showHideChildren(hidden);\n      }\n    }\n\n    // Called as a side effect of a host items.<key>.<path> path change,\n    // responsible for notifying item.<path> changes to inst for key\n    __handleItemPath(path, value) {\n      let itemsPath = path.slice(6); // 'items.'.length == 6\n      let dot = itemsPath.indexOf('.');\n      let itemsIdx = dot < 0 ? itemsPath : itemsPath.substring(0, dot);\n      // If path was index into array...\n      if (itemsIdx == parseInt(itemsIdx, 10)) {\n        let itemSubPath = dot < 0 ? '' : itemsPath.substring(dot+1);\n        // If the path is observed, it will trigger a full refresh\n        this.__handleObservedPaths(itemSubPath);\n        // Note, even if a rull refresh is triggered, always do the path\n        // notification because unless mutableData is used for dom-repeat\n        // and all elements in the instance subtree, a full refresh may\n        // not trigger the proper update.\n        let instIdx = this.__itemsIdxToInstIdx[itemsIdx];\n        let inst = this.__instances[instIdx];\n        if (inst) {\n          let itemPath = this.as + (itemSubPath ? '.' + itemSubPath : '');\n          // This is effectively `notifyPath`, but avoids some of the overhead\n          // of the public API\n          inst._setPendingPropertyOrPath(itemPath, value, false, true);\n          inst._flushProperties();\n        }\n        return true;\n      }\n    }\n\n    /**\n     * Returns the item associated with a given element stamped by\n     * this `dom-repeat`.\n     *\n     * Note, to modify sub-properties of the item,\n     * `modelForElement(el).set('item.<sub-prop>', value)`\n     * should be used.\n     *\n     * @param {HTMLElement} el Element for which to return the item.\n     * @return {*} Item associated with the element.\n     */\n    itemForElement(el) {\n      let instance = this.modelForElement(el);\n      return instance && instance[this.as];\n    }\n\n    /**\n     * Returns the inst index for a given element stamped by this `dom-repeat`.\n     * If `sort` is provided, the index will reflect the sorted order (rather\n     * than the original array order).\n     *\n     * @param {HTMLElement} el Element for which to return the index.\n     * @return {*} Row index associated with the element (note this may\n     *   not correspond to the array index if a user `sort` is applied).\n     */\n    indexForElement(el) {\n      let instance = this.modelForElement(el);\n      return instance && instance[this.indexAs];\n    }\n\n    /**\n     * Returns the template \"model\" associated with a given element, which\n     * serves as the binding scope for the template instance the element is\n     * contained in. A template model is an instance of `Polymer.Base`, and\n     * should be used to manipulate data associated with this template instance.\n     *\n     * Example:\n     *\n     *   let model = modelForElement(el);\n     *   if (model.index < 10) {\n     *     model.set('item.checked', true);\n     *   }\n     *\n     * @param {HTMLElement} el Element for which to return a template model.\n     * @return {TemplateInstanceBase} Model representing the binding scope for\n     *   the element.\n     */\n    modelForElement(el) {\n      return Polymer.Templatize.modelForElement(this.template, el);\n    }\n\n  }\n\n  customElements.define(DomRepeat.is, DomRepeat);\n\n  Polymer.DomRepeat = DomRepeat;\n\n})();\n\n</script>\n\n\n\n// WEBPACK FOOTER //\n// ../bower_components/polymer/lib/elements/dom-repeat.html","<!--\n@license\nCopyright (c) 2015 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n-->\n\n<link rel=\"import\" href=\"../polymer/polymer.html\">\n\n<script>\n  /**\n   * `IronResizableBehavior` is a behavior that can be used in Polymer elements to\n   * coordinate the flow of resize events between \"resizers\" (elements that control the\n   * size or hidden state of their children) and \"resizables\" (elements that need to be\n   * notified when they are resized or un-hidden by their parents in order to take\n   * action on their new measurements).\n   *\n   * Elements that perform measurement should add the `IronResizableBehavior` behavior to\n   * their element definition and listen for the `iron-resize` event on themselves.\n   * This event will be fired when they become showing after having been hidden,\n   * when they are resized explicitly by another resizable, or when the window has been\n   * resized.\n   *\n   * Note, the `iron-resize` event is non-bubbling.\n   *\n   * @polymerBehavior Polymer.IronResizableBehavior\n   * @demo demo/index.html\n   **/\n  Polymer.IronResizableBehavior = {\n    properties: {\n      /**\n       * The closest ancestor element that implements `IronResizableBehavior`.\n       */\n      _parentResizable: {\n        type: Object,\n        observer: '_parentResizableChanged'\n      },\n\n      /**\n       * True if this element is currently notifying its descendant elements of\n       * resize.\n       */\n      _notifyingDescendant: {\n        type: Boolean,\n        value: false\n      }\n    },\n\n    listeners: {\n      'iron-request-resize-notifications': '_onIronRequestResizeNotifications'\n    },\n\n    created: function() {\n      // We don't really need property effects on these, and also we want them\n      // to be created before the `_parentResizable` observer fires:\n      this._interestedResizables = [];\n      this._boundNotifyResize = this.notifyResize.bind(this);\n    },\n\n    attached: function() {\n      this._requestResizeNotifications();\n    },\n\n    detached: function() {\n      if (this._parentResizable) {\n        this._parentResizable.stopResizeNotificationsFor(this);\n      } else {\n        window.removeEventListener('resize', this._boundNotifyResize);\n      }\n\n      this._parentResizable = null;\n    },\n\n    /**\n     * Can be called to manually notify a resizable and its descendant\n     * resizables of a resize change.\n     */\n    notifyResize: function() {\n      if (!this.isAttached) {\n        return;\n      }\n\n      this._interestedResizables.forEach(function(resizable) {\n        if (this.resizerShouldNotify(resizable)) {\n          this._notifyDescendant(resizable);\n        }\n      }, this);\n\n      this._fireResize();\n    },\n\n    /**\n     * Used to assign the closest resizable ancestor to this resizable\n     * if the ancestor detects a request for notifications.\n     */\n    assignParentResizable: function(parentResizable) {\n      this._parentResizable = parentResizable;\n    },\n\n    /**\n     * Used to remove a resizable descendant from the list of descendants\n     * that should be notified of a resize change.\n     */\n    stopResizeNotificationsFor: function(target) {\n      var index = this._interestedResizables.indexOf(target);\n\n      if (index > -1) {\n        this._interestedResizables.splice(index, 1);\n        this.unlisten(target, 'iron-resize', '_onDescendantIronResize');\n      }\n    },\n\n    /**\n     * This method can be overridden to filter nested elements that should or\n     * should not be notified by the current element. Return true if an element\n     * should be notified, or false if it should not be notified.\n     *\n     * @param {HTMLElement} element A candidate descendant element that\n     * implements `IronResizableBehavior`.\n     * @return {boolean} True if the `element` should be notified of resize.\n     */\n    resizerShouldNotify: function(element) { return true; },\n\n    _onDescendantIronResize: function(event) {\n      if (this._notifyingDescendant) {\n        event.stopPropagation();\n        return;\n      }\n\n      // NOTE(cdata): In ShadowDOM, event retargeting makes echoing of the\n      // otherwise non-bubbling event \"just work.\" We do it manually here for\n      // the case where Polymer is not using shadow roots for whatever reason:\n      if (!Polymer.Settings.useShadow) {\n        this._fireResize();\n      }\n    },\n\n    _fireResize: function() {\n      this.fire('iron-resize', null, {\n        node: this,\n        bubbles: false\n      });\n    },\n\n    _onIronRequestResizeNotifications: function(event) {\n      var target = /** @type {!EventTarget} */ (Polymer.dom(event).rootTarget);\n      if (target === this) {\n        return;\n      }\n\n      if (this._interestedResizables.indexOf(target) === -1) {\n        this._interestedResizables.push(target);\n        this.listen(target, 'iron-resize', '_onDescendantIronResize');\n      }\n\n      target.assignParentResizable(this);\n      this._notifyDescendant(target);\n\n      event.stopPropagation();\n    },\n\n    _parentResizableChanged: function(parentResizable) {\n      if (parentResizable) {\n        window.removeEventListener('resize', this._boundNotifyResize);\n      }\n    },\n\n    _notifyDescendant: function(descendant) {\n      // NOTE(cdata): In IE10, attached is fired on children first, so it's\n      // important not to notify them if the parent is not attached yet (or\n      // else they will get redundantly notified when the parent attaches).\n      if (!this.isAttached) {\n        return;\n      }\n\n      this._notifyingDescendant = true;\n      descendant.notifyResize();\n      this._notifyingDescendant = false;\n    },\n    \n    _requestResizeNotifications: function() {\n      if (!this.isAttached)\n        return;\n      \n      // NOTE(valdrin) In CustomElements v1 with native HTMLImports, the order\n      // of imports affects the order of `attached` callbacks (see webcomponents/custom-elements#15).\n      // This might cause a child to notify parents too early (as the parent\n      // still has to be upgraded), resulting in a parent not able to keep track\n      // of the `_interestedResizables`. To solve this, we wait for the document\n      // to be done loading before firing the event.\n      if (document.readyState === 'loading') {\n        var _requestResizeNotifications = this._requestResizeNotifications.bind(this);\n        document.addEventListener('readystatechange', function readystatechanged() {\n          document.removeEventListener('readystatechange', readystatechanged);\n          _requestResizeNotifications();\n        });\n      } else {\n        this.fire('iron-request-resize-notifications', null, {\n          node: this,\n          bubbles: true,\n          cancelable: true\n        });\n\n        if (!this._parentResizable) {\n          window.addEventListener('resize', this._boundNotifyResize);\n          this.notifyResize();\n        } \n      }\n    }\n  };\n</script>\n\n\n\n// WEBPACK FOOTER //\n// ../bower_components/iron-resizable-behavior/iron-resizable-behavior.html","(function(){/*\n\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n'use strict';var k={};function n(){this.end=this.start=0;this.rules=this.parent=this.previous=null;this.cssText=this.parsedCssText=\"\";this.atRule=!1;this.type=0;this.parsedSelector=this.selector=this.keyframesName=\"\"}\nfunction p(a){a=a.replace(aa,\"\").replace(ba,\"\");var b=q,c=a,d=new n;d.start=0;d.end=c.length;for(var e=d,f=0,h=c.length;f<h;f++)if(\"{\"===c[f]){e.rules||(e.rules=[]);var g=e,m=g.rules[g.rules.length-1]||null;e=new n;e.start=f+1;e.parent=g;e.previous=m;g.rules.push(e)}else\"}\"===c[f]&&(e.end=f+1,e=e.parent||d);return b(d,a)}\nfunction q(a,b){var c=b.substring(a.start,a.end-1);a.parsedCssText=a.cssText=c.trim();a.parent&&(c=b.substring(a.previous?a.previous.end:a.parent.start,a.start-1),c=ca(c),c=c.replace(r,\" \"),c=c.substring(c.lastIndexOf(\";\")+1),c=a.parsedSelector=a.selector=c.trim(),a.atRule=0===c.indexOf(\"@\"),a.atRule?0===c.indexOf(\"@media\")?a.type=t:c.match(da)&&(a.type=u,a.keyframesName=a.selector.split(r).pop()):a.type=0===c.indexOf(\"--\")?v:x);if(c=a.rules)for(var d=0,e=c.length,f;d<e&&(f=c[d]);d++)q(f,b);return a}\nfunction ca(a){return a.replace(/\\\\([0-9a-f]{1,6})\\s/gi,function(a,c){a=c;for(c=6-a.length;c--;)a=\"0\"+a;return\"\\\\\"+a})}\nfunction y(a,b,c){c=void 0===c?\"\":c;var d=\"\";if(a.cssText||a.rules){var e=a.rules,f;if(f=e)f=e[0],f=!(f&&f.selector&&0===f.selector.indexOf(\"--\"));if(f){f=0;for(var h=e.length,g;f<h&&(g=e[f]);f++)d=y(g,b,d)}else b?b=a.cssText:(b=a.cssText,b=b.replace(ea,\"\").replace(fa,\"\"),b=b.replace(ha,\"\").replace(ia,\"\")),(d=b.trim())&&(d=\"  \"+d+\"\\n\")}d&&(a.selector&&(c+=a.selector+\" {\\n\"),c+=d,a.selector&&(c+=\"}\\n\\n\"));return c}\nvar x=1,u=7,t=4,v=1E3,aa=/\\/\\*[^*]*\\*+([^/*][^*]*\\*+)*\\//gim,ba=/@import[^;]*;/gim,ea=/(?:^[^;\\-\\s}]+)?--[^;{}]*?:[^{};]*?(?:[;\\n]|$)/gim,fa=/(?:^[^;\\-\\s}]+)?--[^;{}]*?:[^{};]*?{[^}]*?}(?:[;\\n]|$)?/gim,ha=/@apply\\s*\\(?[^);]*\\)?\\s*(?:[;\\n]|$)?/gim,ia=/[^;:]*?:[^;]*?var\\([^;]*\\)(?:[;\\n]|$)?/gim,da=/^@[^\\s]*keyframes/,r=/\\s+/g;var ja=Promise.resolve();function ka(a){if(a=k[a])a._applyShimCurrentVersion=a._applyShimCurrentVersion||0,a._applyShimValidatingVersion=a._applyShimValidatingVersion||0,a._applyShimNextVersion=(a._applyShimNextVersion||0)+1}function z(a){return a._applyShimCurrentVersion===a._applyShimNextVersion}function la(a){a._applyShimValidatingVersion=a._applyShimNextVersion;a.a||(a.a=!0,ja.then(function(){a._applyShimCurrentVersion=a._applyShimNextVersion;a.a=!1}))};var A=!(window.ShadyDOM&&window.ShadyDOM.inUse),B;function C(a){B=a&&a.shimcssproperties?!1:A||!(navigator.userAgent.match(/AppleWebKit\\/601|Edge\\/15/)||!window.CSS||!CSS.supports||!CSS.supports(\"box-shadow\",\"0 0 0 var(--foo)\"))}window.ShadyCSS&&void 0!==window.ShadyCSS.nativeCss?B=window.ShadyCSS.nativeCss:window.ShadyCSS?(C(window.ShadyCSS),window.ShadyCSS=void 0):C(window.WebComponents&&window.WebComponents.flags);var E=B;var F=/(?:^|[;\\s{]\\s*)(--[\\w-]*?)\\s*:\\s*(?:((?:'(?:\\\\'|.)*?'|\"(?:\\\\\"|.)*?\"|\\([^)]*?\\)|[^};{])+)|\\{([^}]*)\\}(?:(?=[;\\s}])|$))/gi,G=/(?:^|\\W+)@apply\\s*\\(?([^);\\n]*)\\)?/gi,ma=/@media\\s(.*)/;function H(a){if(!a)return\"\";\"string\"===typeof a&&(a=p(a));return y(a,E)}function I(a){!a.__cssRules&&a.textContent&&(a.__cssRules=p(a.textContent));return a.__cssRules||null}function J(a,b,c,d){if(a){var e=!1,f=a.type;if(d&&f===t){var h=a.selector.match(ma);h&&(window.matchMedia(h[1]).matches||(e=!0))}f===x?b(a):c&&f===u?c(a):f===v&&(e=!0);if((a=a.rules)&&!e){e=0;f=a.length;for(var g;e<f&&(g=a[e]);e++)J(g,b,c,d)}}}\nfunction K(a,b){var c=a.indexOf(\"var(\");if(-1===c)return b(a,\"\",\"\",\"\");a:{var d=0;var e=c+3;for(var f=a.length;e<f;e++)if(\"(\"===a[e])d++;else if(\")\"===a[e]&&0===--d)break a;e=-1}d=a.substring(c+4,e);c=a.substring(0,c);a=K(a.substring(e+1),b);e=d.indexOf(\",\");return-1===e?b(c,d.trim(),\"\",a):b(c,d.substring(0,e).trim(),d.substring(e+1).trim(),a)};var na=/;\\s*/m,oa=/^\\s*(initial)|(inherit)\\s*$/;function L(){this.a={}}L.prototype.set=function(a,b){a=a.trim();this.a[a]={h:b,i:{}}};L.prototype.get=function(a){a=a.trim();return this.a[a]||null};var M=null;function N(){this.b=this.c=null;this.a=new L}N.prototype.o=function(a){a=G.test(a)||F.test(a);G.lastIndex=0;F.lastIndex=0;return a};N.prototype.m=function(a,b){a=a.content.querySelector(\"style\");var c=null;a&&(c=this.j(a,b));return c};\nN.prototype.j=function(a,b){b=void 0===b?\"\":b;var c=I(a);this.l(c,b);a.textContent=H(c);return c};N.prototype.f=function(a){var b=this,c=I(a);J(c,function(a){\":root\"===a.selector&&(a.selector=\"html\");b.g(a)});a.textContent=H(c);return c};N.prototype.l=function(a,b){var c=this;this.c=b;J(a,function(a){c.g(a)});this.c=null};N.prototype.g=function(a){a.cssText=pa(this,a.parsedCssText);\":root\"===a.selector&&(a.selector=\":host > *\")};\nfunction pa(a,b){b=b.replace(F,function(b,d,e,f){return qa(a,b,d,e,f)});return O(a,b)}function O(a,b){for(var c;c=G.exec(b);){var d=c[0],e=c[1];c=c.index;var f=b.slice(0,c+d.indexOf(\"@apply\"));b=b.slice(c+d.length);var h=P(a,f);d=void 0;var g=a;e=e.replace(na,\"\");var m=[];var l=g.a.get(e);l||(g.a.set(e,{}),l=g.a.get(e));if(l)for(d in g.c&&(l.i[g.c]=!0),l.h)g=h&&h[d],l=[d,\": var(\",e,\"_-_\",d],g&&l.push(\",\",g),l.push(\")\"),m.push(l.join(\"\"));d=m.join(\"; \");b=\"\"+f+d+b;G.lastIndex=c+d.length}return b}\nfunction P(a,b){b=b.split(\";\");for(var c,d,e={},f=0,h;f<b.length;f++)if(c=b[f])if(h=c.split(\":\"),1<h.length){c=h[0].trim();var g=a;d=c;h=h.slice(1).join(\":\");var m=oa.exec(h);m&&(m[1]?(g.b||(g.b=document.createElement(\"meta\"),g.b.setAttribute(\"apply-shim-measure\",\"\"),g.b.style.all=\"initial\",document.head.appendChild(g.b)),d=window.getComputedStyle(g.b).getPropertyValue(d)):d=\"apply-shim-inherit\",h=d);d=h;e[c]=d}return e}function ra(a,b){if(M)for(var c in b.i)c!==a.c&&M(c)}\nfunction qa(a,b,c,d,e){d&&K(d,function(b,c){c&&a.a.get(c)&&(e=\"@apply \"+c+\";\")});if(!e)return b;var f=O(a,e),h=b.slice(0,b.indexOf(\"--\")),g=f=P(a,f),m=a.a.get(c),l=m&&m.h;l?g=Object.assign(Object.create(l),f):a.a.set(c,g);var X=[],w,Y=!1;for(w in g){var D=f[w];void 0===D&&(D=\"initial\");!l||w in l||(Y=!0);X.push(\"\"+c+\"_-_\"+w+\": \"+D)}Y&&ra(a,m);m&&(m.h=g);d&&(h=b+\";\"+h);return\"\"+h+X.join(\"; \")+\";\"}N.prototype.detectMixin=N.prototype.o;N.prototype.transformStyle=N.prototype.j;\nN.prototype.transformCustomStyle=N.prototype.f;N.prototype.transformRules=N.prototype.l;N.prototype.transformRule=N.prototype.g;N.prototype.transformTemplate=N.prototype.m;N.prototype._separator=\"_-_\";Object.defineProperty(N.prototype,\"invalidCallback\",{get:function(){return M},set:function(a){M=a}});var Q=null,R=window.HTMLImports&&window.HTMLImports.whenReady||null,S;function sa(a){requestAnimationFrame(function(){R?R(a):(Q||(Q=new Promise(function(a){S=a}),\"complete\"===document.readyState?S():document.addEventListener(\"readystatechange\",function(){\"complete\"===document.readyState&&S()})),Q.then(function(){a&&a()}))})};var T=new N;function U(){var a=this;this.a=null;sa(function(){V(a)});T.invalidCallback=ka}function V(a){a.a||(a.a=window.ShadyCSS.CustomStyleInterface,a.a&&(a.a.transformCallback=function(a){T.f(a)},a.a.validateCallback=function(){requestAnimationFrame(function(){a.a.enqueued&&W(a)})}))}U.prototype.prepareTemplate=function(a,b){V(this);k[b]=a;b=T.m(a,b);a._styleAst=b};\nfunction W(a){V(a);if(a.a){var b=a.a.processStyles();if(a.a.enqueued){for(var c=0;c<b.length;c++){var d=a.a.getStyleForCustomStyle(b[c]);d&&T.f(d)}a.a.enqueued=!1}}}U.prototype.styleSubtree=function(a,b){V(this);if(b)for(var c in b)null===c?a.style.removeProperty(c):a.style.setProperty(c,b[c]);if(a.shadowRoot)for(this.styleElement(a),a=a.shadowRoot.children||a.shadowRoot.childNodes,b=0;b<a.length;b++)this.styleSubtree(a[b]);else for(a=a.children||a.childNodes,b=0;b<a.length;b++)this.styleSubtree(a[b])};\nU.prototype.styleElement=function(a){V(this);var b=a.localName,c;b?-1<b.indexOf(\"-\")?c=b:c=a.getAttribute&&a.getAttribute(\"is\")||\"\":c=a.is;if((b=k[c])&&!z(b)){if(z(b)||b._applyShimValidatingVersion!==b._applyShimNextVersion)this.prepareTemplate(b,c),la(b);if(a=a.shadowRoot)if(a=a.querySelector(\"style\"))a.__cssRules=b._styleAst,a.textContent=H(b._styleAst)}};U.prototype.styleDocument=function(a){V(this);this.styleSubtree(document.body,a)};\nif(!window.ShadyCSS||!window.ShadyCSS.ScopingShim){var Z=new U,ta=window.ShadyCSS&&window.ShadyCSS.CustomStyleInterface;window.ShadyCSS={prepareTemplate:function(a,b){W(Z);Z.prepareTemplate(a,b)},styleSubtree:function(a,b){W(Z);Z.styleSubtree(a,b)},styleElement:function(a){W(Z);Z.styleElement(a)},styleDocument:function(a){W(Z);Z.styleDocument(a)},getComputedStyleValue:function(a,b){return(a=window.getComputedStyle(a).getPropertyValue(b))?a.trim():\"\"},nativeCss:E,nativeShadow:A};ta&&(window.ShadyCSS.CustomStyleInterface=\nta)}window.ShadyCSS.ApplyShim=T;}).call(this);\n\n//# sourceMappingURL=apply-shim.min.js.map\n\n\n\n// WEBPACK FOOTER //\n// ../bower_components/shadycss/apply-shim.min.js","<!--\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n-->\n<link rel=\"import\" href=\"boot.html\">\n<link rel=\"import\" href=\"async.html\">\n<link rel=\"import\" href=\"debounce.html\">\n\n<script>\n(function() {\n\n  'use strict';\n\n  // detect native touch action support\n  let HAS_NATIVE_TA = typeof document.head.style.touchAction === 'string';\n  let GESTURE_KEY = '__polymerGestures';\n  let HANDLED_OBJ = '__polymerGesturesHandled';\n  let TOUCH_ACTION = '__polymerGesturesTouchAction';\n  // radius for tap and track\n  let TAP_DISTANCE = 25;\n  let TRACK_DISTANCE = 5;\n  // number of last N track positions to keep\n  let TRACK_LENGTH = 2;\n\n  // Disabling \"mouse\" handlers for 2500ms is enough\n  let MOUSE_TIMEOUT = 2500;\n  let MOUSE_EVENTS = ['mousedown', 'mousemove', 'mouseup', 'click'];\n  // an array of bitmask values for mapping MouseEvent.which to MouseEvent.buttons\n  let MOUSE_WHICH_TO_BUTTONS = [0, 1, 4, 2];\n  let MOUSE_HAS_BUTTONS = (function() {\n    try {\n      return new MouseEvent('test', {buttons: 1}).buttons === 1;\n    } catch (e) {\n      return false;\n    }\n  })();\n\n  /* eslint no-empty: [\"error\", { \"allowEmptyCatch\": true }] */\n  // check for passive event listeners\n  let SUPPORTS_PASSIVE = false;\n  (function() {\n    try {\n      let opts = Object.defineProperty({}, 'passive', {get: function() {SUPPORTS_PASSIVE = true;}})\n      window.addEventListener('test', null, opts);\n      window.removeEventListener('test', null, opts);\n    } catch(e) {}\n  })();\n\n  // Check for touch-only devices\n  let IS_TOUCH_ONLY = navigator.userAgent.match(/iP(?:[oa]d|hone)|Android/);\n\n  let GestureRecognizer = function(){}; // eslint-disable-line no-unused-vars\n  GestureRecognizer.prototype.reset = function(){};\n  /** @type {function(MouseEvent) | undefined} */\n  GestureRecognizer.prototype.mousedown;\n  /** @type {(function(MouseEvent) | undefined)} */\n  GestureRecognizer.prototype.mousemove;\n  /** @type {(function(MouseEvent) | undefined)} */\n  GestureRecognizer.prototype.mouseup;\n  /** @type {(function(TouchEvent) | undefined)} */\n  GestureRecognizer.prototype.touchstart;\n  /** @type {(function(TouchEvent) | undefined)} */\n  GestureRecognizer.prototype.touchmove;\n  /** @type {(function(TouchEvent) | undefined)} */\n  GestureRecognizer.prototype.touchend;\n  /** @type {(function(MouseEvent) | undefined)} */\n  GestureRecognizer.prototype.click;\n\n  // touch will make synthetic mouse events\n  // `preventDefault` on touchend will cancel them,\n  // but this breaks `<input>` focus and link clicks\n  // disable mouse handlers for MOUSE_TIMEOUT ms after\n  // a touchend to ignore synthetic mouse events\n  let mouseCanceller = function(mouseEvent) {\n    // Check for sourceCapabilities, used to distinguish synthetic events\n    // if mouseEvent did not come from a device that fires touch events,\n    // it was made by a real mouse and should be counted\n    // http://wicg.github.io/InputDeviceCapabilities/#dom-inputdevicecapabilities-firestouchevents\n    let sc = mouseEvent.sourceCapabilities;\n    if (sc && !sc.firesTouchEvents) {\n      return;\n    }\n    // skip synthetic mouse events\n    mouseEvent[HANDLED_OBJ] = {skip: true};\n    // disable \"ghost clicks\"\n    if (mouseEvent.type === 'click') {\n      let path = mouseEvent.composedPath && mouseEvent.composedPath();\n      if (path) {\n        for (let i = 0; i < path.length; i++) {\n          if (path[i] === POINTERSTATE.mouse.target) {\n            return;\n          }\n        }\n      }\n      mouseEvent.preventDefault();\n      mouseEvent.stopPropagation();\n    }\n  };\n\n  /**\n   * @param {boolean=} setup True to add, false to remove.\n   */\n  function setupTeardownMouseCanceller(setup) {\n    let events = IS_TOUCH_ONLY ? ['click'] : MOUSE_EVENTS;\n    for (let i = 0, en; i < events.length; i++) {\n      en = events[i];\n      if (setup) {\n        document.addEventListener(en, mouseCanceller, true);\n      } else {\n        document.removeEventListener(en, mouseCanceller, true);\n      }\n    }\n  }\n\n  function ignoreMouse(e) {\n    if (!POINTERSTATE.mouse.mouseIgnoreJob) {\n      setupTeardownMouseCanceller(true);\n    }\n    let unset = function() {\n      setupTeardownMouseCanceller();\n      POINTERSTATE.mouse.target = null;\n      POINTERSTATE.mouse.mouseIgnoreJob = null;\n    };\n    POINTERSTATE.mouse.target = e.composedPath()[0];\n    POINTERSTATE.mouse.mouseIgnoreJob = Polymer.Debouncer.debounce(\n          POINTERSTATE.mouse.mouseIgnoreJob\n        , Polymer.Async.timeOut.after(MOUSE_TIMEOUT)\n        , unset);\n  }\n\n  /**\n   * @param {MouseEvent} ev event to test for left mouse button down\n   * @return {boolean} has left mouse button down\n   */\n  function hasLeftMouseButton(ev) {\n    let type = ev.type;\n    // exit early if the event is not a mouse event\n    if (MOUSE_EVENTS.indexOf(type) === -1) {\n      return false;\n    }\n    // ev.button is not reliable for mousemove (0 is overloaded as both left button and no buttons)\n    // instead we use ev.buttons (bitmask of buttons) or fall back to ev.which (deprecated, 0 for no buttons, 1 for left button)\n    if (type === 'mousemove') {\n      // allow undefined for testing events\n      let buttons = ev.buttons === undefined ? 1 : ev.buttons;\n      if ((ev instanceof window.MouseEvent) && !MOUSE_HAS_BUTTONS) {\n        buttons = MOUSE_WHICH_TO_BUTTONS[ev.which] || 0;\n      }\n      // buttons is a bitmask, check that the left button bit is set (1)\n      return Boolean(buttons & 1);\n    } else {\n      // allow undefined for testing events\n      let button = ev.button === undefined ? 0 : ev.button;\n      // ev.button is 0 in mousedown/mouseup/click for left button activation\n      return button === 0;\n    }\n  }\n\n  function isSyntheticClick(ev) {\n    if (ev.type === 'click') {\n      // ev.detail is 0 for HTMLElement.click in most browsers\n      if (ev.detail === 0) {\n        return true;\n      }\n      // in the worst case, check that the x/y position of the click is within\n      // the bounding box of the target of the event\n      // Thanks IE 10 >:(\n      let t = Gestures._findOriginalTarget(ev);\n      // make sure the target of the event is an element so we can use getBoundingClientRect,\n      // if not, just assume it is a synthetic click\n      if (!t.nodeType || /** @type {Element} */(t).nodeType !== Node.ELEMENT_NODE) {\n        return true;\n      }\n      let bcr = /** @type {Element} */(t).getBoundingClientRect();\n      // use page x/y to account for scrolling\n      let x = ev.pageX, y = ev.pageY;\n      // ev is a synthetic click if the position is outside the bounding box of the target\n      return !((x >= bcr.left && x <= bcr.right) && (y >= bcr.top && y <= bcr.bottom));\n    }\n    return false;\n  }\n\n  let POINTERSTATE = {\n    mouse: {\n      target: null,\n      mouseIgnoreJob: null\n    },\n    touch: {\n      x: 0,\n      y: 0,\n      id: -1,\n      scrollDecided: false\n    }\n  };\n\n  function firstTouchAction(ev) {\n    let ta = 'auto';\n    let path = ev.composedPath && ev.composedPath();\n    if (path) {\n      for (let i = 0, n; i < path.length; i++) {\n        n = path[i];\n        if (n[TOUCH_ACTION]) {\n          ta = n[TOUCH_ACTION];\n          break;\n        }\n      }\n    }\n    return ta;\n  }\n\n  function trackDocument(stateObj, movefn, upfn) {\n    stateObj.movefn = movefn;\n    stateObj.upfn = upfn;\n    document.addEventListener('mousemove', movefn);\n    document.addEventListener('mouseup', upfn);\n  }\n\n  function untrackDocument(stateObj) {\n    document.removeEventListener('mousemove', stateObj.movefn);\n    document.removeEventListener('mouseup', stateObj.upfn);\n    stateObj.movefn = null;\n    stateObj.upfn = null;\n  }\n\n  // use a document-wide touchend listener to start the ghost-click prevention mechanism\n  // Use passive event listeners, if supported, to not affect scrolling performance\n  document.addEventListener('touchend', ignoreMouse, SUPPORTS_PASSIVE ? {passive: true} : false);\n\n  /**\n   * Module for adding listeners to a node for the following normalized\n   * cross-platform \"gesture\" events:\n   * - `down` - mouse or touch went down\n   * - `up` - mouse or touch went up\n   * - `tap` - mouse click or finger tap\n   * - `track` - mouse drag or touch move\n   *\n   * @namespace\n   * @memberof Polymer\n   * @summary Module for adding cross-platform gesture event listeners.\n   */\n  const Gestures = {\n    gestures: {},\n    recognizers: [],\n\n    /**\n     * Finds the element rendered on the screen at the provided coordinates.\n     *\n     * Similar to `document.elementFromPoint`, but pierces through\n     * shadow roots.\n     *\n     * @memberof Polymer.Gestures\n     * @param {number} x Horizontal pixel coordinate\n     * @param {number} y Vertical pixel coordinate\n     * @return {Element} Returns the deepest shadowRoot inclusive element\n     * found at the screen position given.\n     */\n    deepTargetFind: function(x, y) {\n      let node = document.elementFromPoint(x, y);\n      let next = node;\n      // this code path is only taken when native ShadowDOM is used\n      // if there is a shadowroot, it may have a node at x/y\n      // if there is not a shadowroot, exit the loop\n      while (next && next.shadowRoot && !window.ShadyDOM) {\n        // if there is a node at x/y in the shadowroot, look deeper\n        let oldNext = next;\n        next = next.shadowRoot.elementFromPoint(x, y);\n        // on Safari, elementFromPoint may return the shadowRoot host\n        if (oldNext === next) {\n          break;\n        }\n        if (next) {\n          node = next;\n        }\n      }\n      return node;\n    },\n    /**\n     * a cheaper check than ev.composedPath()[0];\n     *\n     * @private\n     * @param {Event} ev Event.\n     * @return {EventTarget} Returns the event target.\n     */\n    _findOriginalTarget: function(ev) {\n      // shadowdom\n      if (ev.composedPath) {\n        return /** @type {EventTarget} */(ev.composedPath()[0]);\n      }\n      // shadydom\n      return ev.target;\n    },\n\n    /**\n     * @private\n     * @param {Event} ev Event.\n     */\n    _handleNative: function(ev) {\n      let handled;\n      let type = ev.type;\n      let node = ev.currentTarget;\n      let gobj = node[GESTURE_KEY];\n      if (!gobj) {\n        return;\n      }\n      let gs = gobj[type];\n      if (!gs) {\n        return;\n      }\n      if (!ev[HANDLED_OBJ]) {\n        ev[HANDLED_OBJ] = {};\n        if (type.slice(0, 5) === 'touch') {\n          ev = /** @type {TouchEvent} */(ev); // eslint-disable-line no-self-assign\n          let t = ev.changedTouches[0];\n          if (type === 'touchstart') {\n            // only handle the first finger\n            if (ev.touches.length === 1) {\n              POINTERSTATE.touch.id = t.identifier;\n            }\n          }\n          if (POINTERSTATE.touch.id !== t.identifier) {\n            return;\n          }\n          if (!HAS_NATIVE_TA) {\n            if (type === 'touchstart' || type === 'touchmove') {\n              Gestures._handleTouchAction(ev);\n            }\n          }\n        }\n      }\n      handled = ev[HANDLED_OBJ];\n      // used to ignore synthetic mouse events\n      if (handled.skip) {\n        return;\n      }\n      let recognizers = Gestures.recognizers;\n      // reset recognizer state\n      for (let i = 0, r; i < recognizers.length; i++) {\n        r = recognizers[i];\n        if (gs[r.name] && !handled[r.name]) {\n          if (r.flow && r.flow.start.indexOf(ev.type) > -1 && r.reset) {\n            r.reset();\n          }\n        }\n      }\n      // enforce gesture recognizer order\n      for (let i = 0, r; i < recognizers.length; i++) {\n        r = recognizers[i];\n        if (gs[r.name] && !handled[r.name]) {\n          handled[r.name] = true;\n          r[type](ev);\n        }\n      }\n    },\n\n    /**\n     * @private\n     * @param {TouchEvent} ev Event.\n     */\n    _handleTouchAction: function(ev) {\n      let t = ev.changedTouches[0];\n      let type = ev.type;\n      if (type === 'touchstart') {\n        POINTERSTATE.touch.x = t.clientX;\n        POINTERSTATE.touch.y = t.clientY;\n        POINTERSTATE.touch.scrollDecided = false;\n      } else if (type === 'touchmove') {\n        if (POINTERSTATE.touch.scrollDecided) {\n          return;\n        }\n        POINTERSTATE.touch.scrollDecided = true;\n        let ta = firstTouchAction(ev);\n        let prevent = false;\n        let dx = Math.abs(POINTERSTATE.touch.x - t.clientX);\n        let dy = Math.abs(POINTERSTATE.touch.y - t.clientY);\n        if (!ev.cancelable) {\n          // scrolling is happening\n        } else if (ta === 'none') {\n          prevent = true;\n        } else if (ta === 'pan-x') {\n          prevent = dy > dx;\n        } else if (ta === 'pan-y') {\n          prevent = dx > dy;\n        }\n        if (prevent) {\n          ev.preventDefault();\n        } else {\n          Gestures.prevent('track');\n        }\n      }\n    },\n\n    /**\n     * Adds an event listener to a node for the given gesture type.\n     *\n     * @memberof Polymer.Gestures\n     * @param {Node} node Node to add listener on\n     * @param {string} evType Gesture type: `down`, `up`, `track`, or `tap`\n     * @param {Function} handler Event listener function to call\n     * @return {boolean} Returns true if a gesture event listener was added.\n     * @this {Gestures}\n     */\n    addListener: function(node, evType, handler) {\n      if (this.gestures[evType]) {\n        this._add(node, evType, handler);\n        return true;\n      }\n      return false;\n    },\n\n    /**\n     * Removes an event listener from a node for the given gesture type.\n     *\n     * @memberof Polymer.Gestures\n     * @param {Node} node Node to remove listener from\n     * @param {string} evType Gesture type: `down`, `up`, `track`, or `tap`\n     * @param {Function} handler Event listener function previously passed to\n     *  `addListener`.\n     * @return {boolean} Returns true if a gesture event listener was removed.\n     * @this {Gestures}\n     */\n    removeListener: function(node, evType, handler) {\n      if (this.gestures[evType]) {\n        this._remove(node, evType, handler);\n        return true;\n      }\n      return false;\n    },\n\n    /**\n     * automate the event listeners for the native events\n     *\n     * @private\n     * @param {HTMLElement} node Node on which to add the event.\n     * @param {string} evType Event type to add.\n     * @param {function(Event?)} handler Event handler function.\n     * @this {Gestures}\n     */\n    _add: function(node, evType, handler) {\n      let recognizer = this.gestures[evType];\n      let deps = recognizer.deps;\n      let name = recognizer.name;\n      let gobj = node[GESTURE_KEY];\n      if (!gobj) {\n        node[GESTURE_KEY] = gobj = {};\n      }\n      for (let i = 0, dep, gd; i < deps.length; i++) {\n        dep = deps[i];\n        // don't add mouse handlers on iOS because they cause gray selection overlays\n        if (IS_TOUCH_ONLY && MOUSE_EVENTS.indexOf(dep) > -1 && dep !== 'click') {\n          continue;\n        }\n        gd = gobj[dep];\n        if (!gd) {\n          gobj[dep] = gd = {_count: 0};\n        }\n        if (gd._count === 0) {\n          node.addEventListener(dep, this._handleNative);\n        }\n        gd[name] = (gd[name] || 0) + 1;\n        gd._count = (gd._count || 0) + 1;\n      }\n      node.addEventListener(evType, handler);\n      if (recognizer.touchAction) {\n        this.setTouchAction(node, recognizer.touchAction);\n      }\n    },\n\n    /**\n     * automate event listener removal for native events\n     *\n     * @private\n     * @param {HTMLElement} node Node on which to remove the event.\n     * @param {string} evType Event type to remove.\n     * @param {function(Event?)} handler Event handler function.\n     * @this {Gestures}\n     */\n    _remove: function(node, evType, handler) {\n      let recognizer = this.gestures[evType];\n      let deps = recognizer.deps;\n      let name = recognizer.name;\n      let gobj = node[GESTURE_KEY];\n      if (gobj) {\n        for (let i = 0, dep, gd; i < deps.length; i++) {\n          dep = deps[i];\n          gd = gobj[dep];\n          if (gd && gd[name]) {\n            gd[name] = (gd[name] || 1) - 1;\n            gd._count = (gd._count || 1) - 1;\n            if (gd._count === 0) {\n              node.removeEventListener(dep, this._handleNative);\n            }\n          }\n        }\n      }\n      node.removeEventListener(evType, handler);\n    },\n\n    /**\n     * Registers a new gesture event recognizer for adding new custom\n     * gesture event types.\n     *\n     * @memberof Polymer.Gestures\n     * @param {GestureRecognizer} recog Gesture recognizer descriptor\n     * @this {Gestures}\n     */\n    register: function(recog) {\n      this.recognizers.push(recog);\n      for (let i = 0; i < recog.emits.length; i++) {\n        this.gestures[recog.emits[i]] = recog;\n      }\n    },\n\n    /**\n     * @private\n     * @param {string} evName Event name.\n     * @return {Object} Returns the gesture for the given event name.\n     * @this {Gestures}\n     */\n    _findRecognizerByEvent: function(evName) {\n      for (let i = 0, r; i < this.recognizers.length; i++) {\n        r = this.recognizers[i];\n        for (let j = 0, n; j < r.emits.length; j++) {\n          n = r.emits[j];\n          if (n === evName) {\n            return r;\n          }\n        }\n      }\n      return null;\n    },\n\n    /**\n     * Sets scrolling direction on node.\n     *\n     * This value is checked on first move, thus it should be called prior to\n     * adding event listeners.\n     *\n     * @memberof Polymer.Gestures\n     * @param {Element} node Node to set touch action setting on\n     * @param {string} value Touch action value\n     */\n    setTouchAction: function(node, value) {\n      if (HAS_NATIVE_TA) {\n        node.style.touchAction = value;\n      }\n      node[TOUCH_ACTION] = value;\n    },\n\n    /**\n     * Dispatches an event on the `target` element of `type` with the given\n     * `detail`.\n     * @private\n     * @param {EventTarget} target The element on which to fire an event.\n     * @param {string} type The type of event to fire.\n     * @param {Object=} detail The detail object to populate on the event.\n     */\n    _fire: function(target, type, detail) {\n      let ev = new Event(type, { bubbles: true, cancelable: true, composed: true });\n      ev.detail = detail;\n      target.dispatchEvent(ev);\n      // forward `preventDefault` in a clean way\n      if (ev.defaultPrevented) {\n        let preventer = detail.preventer || detail.sourceEvent;\n        if (preventer && preventer.preventDefault) {\n          preventer.preventDefault();\n        }\n      }\n    },\n\n    /**\n     * Prevents the dispatch and default action of the given event name.\n     *\n     * @memberof Polymer.Gestures\n     * @param {string} evName Event name.\n     * @this {Gestures}\n     */\n    prevent: function(evName) {\n      let recognizer = this._findRecognizerByEvent(evName);\n      if (recognizer.info) {\n        recognizer.info.prevent = true;\n      }\n    },\n\n    /**\n     * Reset the 2500ms timeout on processing mouse input after detecting touch input.\n     *\n     * Touch inputs create synthesized mouse inputs anywhere from 0 to 2000ms after the touch.\n     * This method should only be called during testing with simulated touch inputs.\n     * Calling this method in production may cause duplicate taps or other Gestures.\n     *\n     * @memberof Polymer.Gestures\n     */\n    resetMouseCanceller: function() {\n      if (POINTERSTATE.mouse.mouseIgnoreJob) {\n        POINTERSTATE.mouse.mouseIgnoreJob.flush();\n      }\n    }\n  };\n\n  /* eslint-disable valid-jsdoc */\n\n  Gestures.register({\n    name: 'downup',\n    deps: ['mousedown', 'touchstart', 'touchend'],\n    flow: {\n      start: ['mousedown', 'touchstart'],\n      end: ['mouseup', 'touchend']\n    },\n    emits: ['down', 'up'],\n\n    info: {\n      movefn: null,\n      upfn: null\n    },\n\n    /** @this {GestureRecognizer} */\n    reset: function() {\n      untrackDocument(this.info);\n    },\n\n    /**\n     * @this {GestureRecognizer}\n     * @param {MouseEvent} e\n     */\n    mousedown: function(e) {\n      if (!hasLeftMouseButton(e)) {\n        return;\n      }\n      let t = Gestures._findOriginalTarget(e);\n      let self = this;\n      let movefn = function movefn(e) {\n        if (!hasLeftMouseButton(e)) {\n          self._fire('up', t, e);\n          untrackDocument(self.info);\n        }\n      };\n      let upfn = function upfn(e) {\n        if (hasLeftMouseButton(e)) {\n          self._fire('up', t, e);\n        }\n        untrackDocument(self.info);\n      };\n      trackDocument(this.info, movefn, upfn);\n      this._fire('down', t, e);\n    },\n    /**\n     * @this {GestureRecognizer}\n     * @param {TouchEvent} e\n     */\n    touchstart: function(e) {\n      this._fire('down', Gestures._findOriginalTarget(e), e.changedTouches[0], e);\n    },\n    /**\n     * @this {GestureRecognizer}\n     * @param {TouchEvent} e\n     */\n    touchend: function(e) {\n      this._fire('up', Gestures._findOriginalTarget(e), e.changedTouches[0], e);\n    },\n    /**\n     * @param {string} type\n     * @param {EventTarget} target\n     * @param {Event} event\n     * @param {Function} preventer\n     */\n    _fire: function(type, target, event, preventer) {\n      Gestures._fire(target, type, {\n        x: event.clientX,\n        y: event.clientY,\n        sourceEvent: event,\n        preventer: preventer,\n        prevent: function(e) {\n          return Gestures.prevent(e);\n        }\n      });\n    }\n  });\n\n  Gestures.register({\n    name: 'track',\n    touchAction: 'none',\n    deps: ['mousedown', 'touchstart', 'touchmove', 'touchend'],\n    flow: {\n      start: ['mousedown', 'touchstart'],\n      end: ['mouseup', 'touchend']\n    },\n    emits: ['track'],\n\n    info: {\n      x: 0,\n      y: 0,\n      state: 'start',\n      started: false,\n      moves: [],\n      /** @this {GestureRecognizer} */\n      addMove: function(move) {\n        if (this.moves.length > TRACK_LENGTH) {\n          this.moves.shift();\n        }\n        this.moves.push(move);\n      },\n      movefn: null,\n      upfn: null,\n      prevent: false\n    },\n\n    /** @this {GestureRecognizer} */\n    reset: function() {\n      this.info.state = 'start';\n      this.info.started = false;\n      this.info.moves = [];\n      this.info.x = 0;\n      this.info.y = 0;\n      this.info.prevent = false;\n      untrackDocument(this.info);\n    },\n\n    /**\n     * @this {GestureRecognizer}\n     * @param {number} x\n     * @param {number} y\n     * @return {boolean}\n     */\n    hasMovedEnough: function(x, y) {\n      if (this.info.prevent) {\n        return false;\n      }\n      if (this.info.started) {\n        return true;\n      }\n      let dx = Math.abs(this.info.x - x);\n      let dy = Math.abs(this.info.y - y);\n      return (dx >= TRACK_DISTANCE || dy >= TRACK_DISTANCE);\n    },\n    /**\n     * @this {GestureRecognizer}\n     * @param {MouseEvent} e\n     */\n    mousedown: function(e) {\n      if (!hasLeftMouseButton(e)) {\n        return;\n      }\n      let t = Gestures._findOriginalTarget(e);\n      let self = this;\n      let movefn = function movefn(e) {\n        let x = e.clientX, y = e.clientY;\n        if (self.hasMovedEnough(x, y)) {\n          // first move is 'start', subsequent moves are 'move', mouseup is 'end'\n          self.info.state = self.info.started ? (e.type === 'mouseup' ? 'end' : 'track') : 'start';\n          if (self.info.state === 'start') {\n            // if and only if tracking, always prevent tap\n            Gestures.prevent('tap');\n          }\n          self.info.addMove({x: x, y: y});\n          if (!hasLeftMouseButton(e)) {\n            // always _fire \"end\"\n            self.info.state = 'end';\n            untrackDocument(self.info);\n          }\n          self._fire(t, e);\n          self.info.started = true;\n        }\n      };\n      let upfn = function upfn(e) {\n        if (self.info.started) {\n          movefn(e);\n        }\n\n        // remove the temporary listeners\n        untrackDocument(self.info);\n      };\n      // add temporary document listeners as mouse retargets\n      trackDocument(this.info, movefn, upfn);\n      this.info.x = e.clientX;\n      this.info.y = e.clientY;\n    },\n    /**\n     * @this {GestureRecognizer}\n     * @param {TouchEvent} e\n     */\n    touchstart: function(e) {\n      let ct = e.changedTouches[0];\n      this.info.x = ct.clientX;\n      this.info.y = ct.clientY;\n    },\n    /**\n     * @this {GestureRecognizer}\n     * @param {TouchEvent} e\n     */\n    touchmove: function(e) {\n      let t = Gestures._findOriginalTarget(e);\n      let ct = e.changedTouches[0];\n      let x = ct.clientX, y = ct.clientY;\n      if (this.hasMovedEnough(x, y)) {\n        if (this.info.state === 'start') {\n          // if and only if tracking, always prevent tap\n          Gestures.prevent('tap');\n        }\n        this.info.addMove({x: x, y: y});\n        this._fire(t, ct);\n        this.info.state = 'track';\n        this.info.started = true;\n      }\n    },\n    /**\n     * @this {GestureRecognizer}\n     * @param {TouchEvent} e\n     */\n    touchend: function(e) {\n      let t = Gestures._findOriginalTarget(e);\n      let ct = e.changedTouches[0];\n      // only trackend if track was started and not aborted\n      if (this.info.started) {\n        // reset started state on up\n        this.info.state = 'end';\n        this.info.addMove({x: ct.clientX, y: ct.clientY});\n        this._fire(t, ct, e);\n      }\n    },\n\n    /**\n     * @this {GestureRecognizer}\n     * @param {EventTarget} target\n     * @param {Touch} touch\n     */\n    _fire: function(target, touch) {\n      let secondlast = this.info.moves[this.info.moves.length - 2];\n      let lastmove = this.info.moves[this.info.moves.length - 1];\n      let dx = lastmove.x - this.info.x;\n      let dy = lastmove.y - this.info.y;\n      let ddx, ddy = 0;\n      if (secondlast) {\n        ddx = lastmove.x - secondlast.x;\n        ddy = lastmove.y - secondlast.y;\n      }\n      Gestures._fire(target, 'track', {\n        state: this.info.state,\n        x: touch.clientX,\n        y: touch.clientY,\n        dx: dx,\n        dy: dy,\n        ddx: ddx,\n        ddy: ddy,\n        sourceEvent: touch,\n        hover: function() {\n          return Gestures.deepTargetFind(touch.clientX, touch.clientY);\n        }\n      });\n    }\n\n  });\n\n  Gestures.register({\n    name: 'tap',\n    deps: ['mousedown', 'click', 'touchstart', 'touchend'],\n    flow: {\n      start: ['mousedown', 'touchstart'],\n      end: ['click', 'touchend']\n    },\n    emits: ['tap'],\n    info: {\n      x: NaN,\n      y: NaN,\n      prevent: false\n    },\n    /** @this {GestureRecognizer} */\n    reset: function() {\n      this.info.x = NaN;\n      this.info.y = NaN;\n      this.info.prevent = false;\n    },\n    /** @this {GestureRecognizer} */\n    save: function(e) {\n      this.info.x = e.clientX;\n      this.info.y = e.clientY;\n    },\n    /**\n     * @this {GestureRecognizer}\n     * @param {MouseEvent} e\n     */\n    mousedown: function(e) {\n      if (hasLeftMouseButton(e)) {\n        this.save(e);\n      }\n    },\n    /**\n     * @this {GestureRecognizer}\n     * @param {MouseEvent} e\n     */\n    click: function(e) {\n      if (hasLeftMouseButton(e)) {\n        this.forward(e);\n      }\n    },\n    /**\n     * @this {GestureRecognizer}\n     * @param {TouchEvent} e\n     */\n    touchstart: function(e) {\n      this.save(e.changedTouches[0], e);\n    },\n    /**\n     * @this {GestureRecognizer}\n     * @param {TouchEvent} e\n     */\n    touchend: function(e) {\n      this.forward(e.changedTouches[0], e);\n    },\n    /**\n     * @this {GestureRecognizer}\n     * @param {Event} e\n     * @param {Function} preventer\n     */\n    forward: function(e, preventer) {\n      let dx = Math.abs(e.clientX - this.info.x);\n      let dy = Math.abs(e.clientY - this.info.y);\n      let t = Gestures._findOriginalTarget(e);\n      // dx,dy can be NaN if `click` has been simulated and there was no `down` for `start`\n      if (isNaN(dx) || isNaN(dy) || (dx <= TAP_DISTANCE && dy <= TAP_DISTANCE) || isSyntheticClick(e)) {\n        // prevent taps from being generated if an event has canceled them\n        if (!this.info.prevent) {\n          Gestures._fire(t, 'tap', {\n            x: e.clientX,\n            y: e.clientY,\n            sourceEvent: e,\n            preventer: preventer\n          });\n        }\n      }\n    }\n  });\n\n  /* eslint-enable valid-jsdoc */\n\n  /** @deprecated */\n  Gestures.findOriginalTarget = Gestures._findOriginalTarget;\n\n  /** @deprecated */\n  Gestures.add = Gestures.addListener;\n\n  /** @deprecated */\n  Gestures.remove = Gestures.removeListener;\n\n  Polymer.Gestures = Gestures;\n\n})();\n</script>\n\n\n\n// WEBPACK FOOTER //\n// ../bower_components/polymer/lib/utils/gestures.html","<!--\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n-->\n\n<link rel=\"import\" href=\"boot.html\">\n\n<script>\n\n(function() {\n\n  'use strict';\n\n  // run a callback when HTMLImports are ready or immediately if\n  // this api is not available.\n  function whenImportsReady(cb) {\n    if (window.HTMLImports) {\n      HTMLImports.whenReady(cb);\n    } else {\n      cb();\n    }\n  }\n\n  /**\n   * Convenience method for importing an HTML document imperatively.\n   *\n   * This method creates a new `<link rel=\"import\">` element with\n   * the provided URL and appends it to the document to start loading.\n   * In the `onload` callback, the `import` property of the `link`\n   * element will contain the imported document contents.\n   *\n   * @memberof Polymer\n   * @param {string} href URL to document to load.\n   * @param {Function=} onload Callback to notify when an import successfully\n   *   loaded.\n   * @param {Function=} onerror Callback to notify when an import\n   *   unsuccessfully loaded.\n   * @param {boolean=} optAsync True if the import should be loaded `async`.\n   *   Defaults to `false`.\n   * @return {HTMLLinkElement} The link element for the URL to be loaded.\n   */\n  Polymer.importHref = function(href, onload, onerror, optAsync) {\n    let link = /** @type {HTMLLinkElement} */\n      (document.head.querySelector('link[href=\"' + href + '\"][import-href]'));\n    if (!link) {\n      link = /** @type {HTMLLinkElement} */ (document.createElement('link'));\n      link.rel = 'import';\n      link.href = href;\n      link.setAttribute('import-href', '');\n    }\n    // always ensure link has `async` attribute if user specified one,\n    // even if it was previously not async. This is considered less confusing.\n    if (optAsync) {\n      link.setAttribute('async', '');\n    }\n    // NOTE: the link may now be in 3 states: (1) pending insertion,\n    // (2) inflight, (3) already laoded. In each case, we need to add\n    // event listeners to process callbacks.\n    let cleanup = function() {\n      link.removeEventListener('load', loadListener);\n      link.removeEventListener('error', errorListener);\n    }\n    let loadListener = function(event) {\n      cleanup();\n      // In case of a successful load, cache the load event on the link so\n      // that it can be used to short-circuit this method in the future when\n      // it is called with the same href param.\n      link.__dynamicImportLoaded = true;\n      if (onload) {\n        whenImportsReady(() => {\n          onload(event);\n        });\n      }\n    };\n    let errorListener = function(event) {\n      cleanup();\n      // In case of an error, remove the link from the document so that it\n      // will be automatically created again the next time `importHref` is\n      // called.\n      if (link.parentNode) {\n        link.parentNode.removeChild(link);\n      }\n      if (onerror) {\n        whenImportsReady(() => {\n          onerror(event);\n        });\n      }\n    };\n    link.addEventListener('load', loadListener);\n    link.addEventListener('error', errorListener);\n    if (link.parentNode == null) {\n      document.head.appendChild(link);\n    // if the link already loaded, dispatch a fake load event\n    // so that listeners are called and get a proper event argument.\n    } else if (link.__dynamicImportLoaded) {\n      link.dispatchEvent(new Event('load'));\n    }\n    return link;\n  };\n\n})();\n</script>\n\n\n\n// WEBPACK FOOTER //\n// ../bower_components/polymer/lib/utils/import-href.html","<!--\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n-->\n<link rel=\"import\" href=\"boot.html\">\n\n<script>\n(function() {\n\n  'use strict';\n\n  let scheduled = false;\n  let beforeRenderQueue = [];\n  let afterRenderQueue = [];\n\n  function schedule() {\n    scheduled = true;\n    // before next render\n    requestAnimationFrame(function() {\n      scheduled = false;\n      flushQueue(beforeRenderQueue);\n      // after the render\n      setTimeout(function() {\n        runQueue(afterRenderQueue);\n      });\n    });\n  }\n\n  function flushQueue(queue) {\n    while (queue.length) {\n      callMethod(queue.shift());\n    }\n  }\n\n  function runQueue(queue) {\n    for (let i=0, l=queue.length; i < l; i++) {\n      callMethod(queue.shift());\n    }\n  }\n\n  function callMethod(info) {\n    const context = info[0];\n    const callback = info[1];\n    const args = info[2];\n    try {\n      callback.apply(context, args);\n    } catch(e) {\n      setTimeout(() => {\n        throw e;\n      })\n    }\n  }\n\n  function flush() {\n    while (beforeRenderQueue.length || afterRenderQueue.length) {\n      flushQueue(beforeRenderQueue);\n      flushQueue(afterRenderQueue);\n    }\n    scheduled = false;\n  }\n\n  /**\n   * Module for scheduling flushable pre-render and post-render tasks.\n   *\n   * @namespace\n   * @memberof Polymer\n   * @summary Module for scheduling flushable pre-render and post-render tasks.\n   */\n  Polymer.RenderStatus = {\n\n    /**\n     * Enqueues a callback which will be run before the next render, at\n     * `requestAnimationFrame` timing.\n     *\n     * This method is useful for enqueuing work that requires DOM measurement,\n     * since measurement may not be reliable in custom element callbacks before\n     * the first render, as well as for batching measurement tasks in general.\n     *\n     * Tasks in this queue may be flushed by calling `Polymer.RenderStatus.flush()`.\n     *\n     * @memberof Polymer.RenderStatus\n     * @param {*} context Context object the callback function will be bound to\n     * @param {function()} callback Callback function\n     * @param {Array} args An array of arguments to call the callback function with\n     */\n    beforeNextRender: function(context, callback, args) {\n      if (!scheduled) {\n        schedule();\n      }\n      beforeRenderQueue.push([context, callback, args]);\n    },\n\n    /**\n     * Enqueues a callback which will be run after the next render, equivalent\n     * to one task (`setTimeout`) after the next `requestAnimationFrame`.\n     *\n     * This method is useful for tuning the first-render performance of an\n     * element or application by deferring non-critical work until after the\n     * first paint.  Typical non-render-critical work may include adding UI\n     * event listeners and aria attributes.\n     *\n     * @memberof Polymer.RenderStatus\n     * @param {*} context Context object the callback function will be bound to\n     * @param {function()} callback Callback function\n     * @param {Array} args An array of arguments to call the callback function with\n     */\n    afterNextRender: function(context, callback, args) {\n      if (!scheduled) {\n        schedule();\n      }\n      afterRenderQueue.push([context, callback, args]);\n    },\n\n    /**\n     * Flushes all `beforeNextRender` tasks, followed by all `afterNextRender`\n     * tasks.\n     *\n     * @memberof Polymer.RenderStatus\n     */\n    flush: flush\n\n  };\n\n})();\n</script>\n\n\n\n// WEBPACK FOOTER //\n// ../bower_components/polymer/lib/utils/render-status.html","<!--\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n-->\n<script>\n(function() {\n  'use strict';\n\n  // unresolved\n\n  function resolve() {\n    document.body.removeAttribute('unresolved');\n  }\n\n  if (window.WebComponents) {\n    window.addEventListener('WebComponentsReady', resolve);\n  } else {\n    if (document.readyState === 'interactive' || document.readyState === 'complete') {\n      resolve();\n    } else {\n      window.addEventListener('DOMContentLoaded', resolve);\n    }\n  }\n\n})();\n</script>\n\n\n\n// WEBPACK FOOTER //\n// ../bower_components/polymer/lib/utils/unresolved.html","<!--\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n-->\n<link rel=\"import\" href=\"../utils/boot.html\">\n<link rel=\"import\" href=\"../utils/settings.html\">\n<link rel=\"import\" href=\"../utils/flattened-nodes-observer.html\">\n<link rel=\"import\" href=\"../utils/flush.html\">\n<script>\n(function() {\n  'use strict';\n\n  const p = Element.prototype;\n  /**\n   * @const {function(this:Element, string): boolean}\n   */\n  const normalizedMatchesSelector = p.matches || p.matchesSelector ||\n    p.mozMatchesSelector || p.msMatchesSelector ||\n    p.oMatchesSelector || p.webkitMatchesSelector;\n\n  /**\n   * Cross-platform `element.matches` shim.\n   *\n   * @function matchesSelector\n   * @memberof Polymer.dom\n   * @param {!Element} node Node to check selector against\n   * @param {string} selector Selector to match\n   * @return {boolean} True if node matched selector\n   */\n  const matchesSelector = function(node, selector) {\n    return normalizedMatchesSelector.call(node, selector);\n  }\n\n  /**\n   * Node API wrapper class returned from `Polymer.dom.(target)` when\n   * `target` is a `Node`.\n   */\n  class DomApi {\n\n    /**\n     * @param {Node} node Node for which to create a Polymer.dom helper object.\n     */\n    constructor(node) {\n      this.node = node;\n    }\n\n    /**\n     * Returns an instance of `Polymer.FlattenedNodesObserver` that\n     * listens for node changes on this element.\n     *\n     * @param {Function} callback Called when direct or distributed children\n     *   of this element changes\n     * @return {Polymer.FlattenedNodesObserver} Observer instance\n     */\n    observeNodes(callback) {\n      return new Polymer.FlattenedNodesObserver(this.node, callback);\n    }\n\n    /**\n     * Disconnects an observer previously created via `observeNodes`\n     *\n     * @param {Polymer.FlattenedNodesObserver} observerHandle Observer instance\n     *   to disconnect.\n     */\n    unobserveNodes(observerHandle) {\n      observerHandle.disconnect();\n    }\n\n    /**\n     * Provided as a backwards-compatible API only.  This method does nothing.\n     */\n    notifyObserver() {}\n\n    /**\n     * Returns true if the provided node is contained with this element's\n     * light-DOM children or shadow root, including any nested shadow roots\n     * of children therein.\n     *\n     * @param {Node} node Node to test\n     * @return {boolean} Returns true if the given `node` is contained within\n     *   this element's light or shadow DOM.\n     */\n    deepContains(node) {\n      if (this.node.contains(node)) {\n        return true;\n      }\n      let n = node;\n      let doc = node.ownerDocument;\n      // walk from node to `this` or `document`\n      while (n && n !== doc && n !== this.node) {\n        // use logical parentnode, or native ShadowRoot host\n        n = n.parentNode || n.host;\n      }\n      return n === this.node;\n    }\n\n    /**\n     * Returns the root node of this node.  Equivalent to `getRoodNode()`.\n     *\n     * @return {Node} Top most element in the dom tree in which the node\n     * exists. If the node is connected to a document this is either a\n     * shadowRoot or the document; otherwise, it may be the node\n     * itself or a node or document fragment containing it.\n     */\n    getOwnerRoot() {\n      return this.node.getRootNode();\n    }\n\n    /**\n     * For slot elements, returns the nodes assigned to the slot; otherwise\n     * an empty array. It is equivalent to `<slot>.addignedNodes({flatten:true})`.\n     *\n     * @return {Array<Node>} Array of assigned nodes\n     */\n    getDistributedNodes() {\n      return (this.node.localName === 'slot') ?\n        this.node.assignedNodes({flatten: true}) :\n        [];\n    }\n\n    /**\n     * Returns an array of all slots this element was distributed to.\n     *\n     * @return {Array<HTMLSlotElement>} Description\n     */\n    getDestinationInsertionPoints() {\n      let ip$ = [];\n      let n = this.node.assignedSlot;\n      while (n) {\n        ip$.push(n);\n        n = n.assignedSlot;\n      }\n      return ip$;\n    }\n\n    /**\n     * Calls `importNode` on the `ownerDocument` for this node.\n     *\n     * @param {Node} node Node to import\n     * @param {boolean} deep True if the node should be cloned deeply during\n     *   import\n     * @return {Node} Clone of given node imported to this owner document\n     */\n    importNode(node, deep) {\n      let doc = this.node instanceof Document ? this.node :\n        this.node.ownerDocument;\n      return doc.importNode(node, deep);\n    }\n\n    /**\n     * @return {Array} Returns a flattened list of all child nodes and nodes assigned\n     * to child slots.\n     */\n    getEffectiveChildNodes() {\n      return Polymer.FlattenedNodesObserver.getFlattenedNodes(this.node);\n    }\n\n    /**\n     * Returns a filtered list of flattened child elements for this element based\n     * on the given selector.\n     *\n     * @param {string} selector Selector to filter nodes against\n     * @return {Array<HTMLElement>} List of flattened child elements\n     */\n    queryDistributedElements(selector) {\n      let c$ = this.getEffectiveChildNodes();\n      let list = [];\n      for (let i=0, l=c$.length, c; (i<l) && (c=c$[i]); i++) {\n        if ((c.nodeType === Node.ELEMENT_NODE) &&\n            matchesSelector(c, selector)) {\n          list.push(c);\n        }\n      }\n      return list;\n    }\n\n    /**\n     * For shadow roots, returns the currently focused element within this\n     * shadow root.\n     *\n     * @return {Node|undefined} Currently focused element\n     */\n    get activeElement() {\n      let node = this.node;\n      return node._activeElement !== undefined ? node._activeElement : node.activeElement;\n    }\n  }\n\n  function forwardMethods(proto, methods) {\n    for (let i=0; i < methods.length; i++) {\n      let method = methods[i];\n      proto[method] = /** @this {DomApi} */ function() {\n        return this.node[method].apply(this.node, arguments);\n      }\n    }\n  }\n\n  function forwardReadOnlyProperties(proto, properties) {\n    for (let i=0; i < properties.length; i++) {\n      let name = properties[i];\n      Object.defineProperty(proto, name, {\n        get: function() {\n          return /** @type {DomApi} */ (this).node[name];\n        },\n        configurable: true\n      });\n    }\n  }\n\n  function forwardProperties(proto, properties) {\n    for (let i=0; i < properties.length; i++) {\n      let name = properties[i];\n      Object.defineProperty(proto, name, {\n        get: function() {\n          return /** @type {DomApi} */ (this).node[name];\n        },\n        set: function(value) {\n          /** @type {DomApi} */ (this).node[name] = value;\n        },\n        configurable: true\n      });\n    }\n  }\n\n  forwardMethods(DomApi.prototype, [\n    'cloneNode', 'appendChild', 'insertBefore', 'removeChild',\n    'replaceChild', 'setAttribute', 'removeAttribute',\n    'querySelector', 'querySelectorAll'\n  ]);\n\n  forwardReadOnlyProperties(DomApi.prototype, [\n    'parentNode', 'firstChild', 'lastChild',\n    'nextSibling', 'previousSibling', 'firstElementChild',\n    'lastElementChild', 'nextElementSibling', 'previousElementSibling',\n    'childNodes', 'children', 'classList'\n  ]);\n\n  forwardProperties(DomApi.prototype, [\n    'textContent', 'innerHTML'\n  ]);\n\n\n  /**\n   * Event API wrapper class returned from `Polymer.dom.(target)` when\n   * `target` is an `Event`.\n   */\n  class EventApi {\n    constructor(event) {\n      this.event = event;\n    }\n\n    /**\n     * Returns the first node on the `composedPath` of this event.\n     *\n     * @return {Node} The node this event was dispatched to\n     */\n    get rootTarget() {\n      return this.event.composedPath()[0];\n    }\n\n    /**\n     * Returns the local (re-targeted) target for this event.\n     *\n     * @return {Node} The local (re-targeted) target for this event.\n     */\n    get localTarget() {\n      return this.event.target;\n    }\n\n    /**\n     * Returns the `composedPath` for this event.\n     */\n    get path() {\n      return this.event.composedPath();\n    }\n  }\n\n  Polymer.DomApi = DomApi;\n\n  /**\n   * Legacy DOM and Event manipulation API wrapper factory used to abstract\n   * differences between native Shadow DOM and \"Shady DOM\" when polyfilling on\n   * older browsers.\n   *\n   * Note that in Polymer 2.x use of `Polymer.dom` is no longer required and\n   * in the majority of cases simply facades directly to the standard native\n   * API.\n   *\n   * @namespace\n   * @summary Legacy DOM and Event manipulation API wrapper factory used to\n   * abstract differences between native Shadow DOM and \"Shady DOM.\"\n   * @memberof Polymer\n   * @param {!Node|Event} obj Node or event to operate on\n   * @return {DomApi|EventApi} Wrapper providing either node API or event API\n   */\n  Polymer.dom = function(obj) {\n    obj = obj || document;\n    if (!obj.__domApi) {\n      let helper;\n      if (obj instanceof Event) {\n        helper = new EventApi(obj);\n      } else {\n        helper = new DomApi(obj);\n      }\n      obj.__domApi = helper;\n    }\n    return obj.__domApi;\n  };\n\n  Polymer.dom.matchesSelector = matchesSelector;\n\n  /**\n   * Forces several classes of asynchronously queued tasks to flush:\n   * - Debouncers added via `Polymer.enqueueDebouncer`\n   * - ShadyDOM distribution\n   *\n   * This method facades to `Polymer.flush`.\n   *\n   * @memberof Polymer.dom\n   */\n  Polymer.dom.flush = Polymer.flush;\n\n  /**\n   * Adds a `Polymer.Debouncer` to a list of globally flushable tasks.\n   *\n   * This method facades to `Polymer.enqueueDebouncer`.\n   *\n   * @memberof Polymer.dom\n   * @param {Polymer.Debouncer} debouncer Debouncer to enqueue\n   */\n  Polymer.dom.addDebouncer = Polymer.enqueueDebouncer;\n})();\n</script>\n\n\n\n// WEBPACK FOOTER //\n// ../bower_components/polymer/lib/legacy/polymer.dom.html","<!--\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n-->\n\n<link rel=\"import\" href=\"class.html\">\n\n<script>\n\n  (function() {\n    'use strict';\n\n    /**\n     * Legacy class factory and registration helper for defining Polymer\n     * elements.\n     *\n     * This method is equivalent to\n     * `customElements.define(info.is, Polymer.Class(info));`\n     *\n     * See `Polymer.Class` for details on valid legacy metadata format for `info`.\n     *\n     * @override\n     * @function Polymer\n     * @param {!PolymerInit} info Object containing Polymer metadata and functions\n     *   to become class methods.\n     * @return {!HTMLElement} Generated class\n     * @suppress {duplicate, invalidCasts, checkTypes}\n     */\n    window.Polymer._polymerFn = function(info) {\n      // if input is a `class` (aka a function with a prototype), use the prototype\n      // remember that the `constructor` will never be called\n      let klass;\n      if (typeof info === 'function') {\n        klass = info;\n      } else {\n        klass = Polymer.Class(info);\n      }\n      customElements.define(klass.is, /** @type {!HTMLElement} */(klass));\n      return klass;\n    };\n\n  })();\n\n</script>\n\n\n\n// WEBPACK FOOTER //\n// ../bower_components/polymer/lib/legacy/polymer-fn.html","<!--\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n-->\n<link rel=\"import\" href=\"legacy-element-mixin.html\">\n<script>\n\n  (function() {\n\n    'use strict';\n\n    let metaProps = {\n      attached: true,\n      detached: true,\n      ready: true,\n      created: true,\n      beforeRegister: true,\n      registered: true,\n      attributeChanged: true,\n      // meta objects\n      behaviors: true\n    }\n\n    /**\n     * Applies a \"legacy\" behavior or array of behaviors to the provided class.\n     *\n     * Note: this method will automatically also apply the `Polymer.LegacyElementMixin`\n     * to ensure that any legacy behaviors can rely on legacy Polymer API on\n     * the underlying element.\n     *\n     * @param {!(Object|Array)} behaviors Behavior object or array of behaviors.\n     * @param {!HTMLElement|function(new:HTMLElement)} klass Element class.\n     * @return {function(new:HTMLElement)} Returns a new Element class extended by the\n     * passed in `behaviors` and also by `Polymer.LegacyElementMixin`.\n     * @memberof Polymer\n     * @suppress {invalidCasts, checkTypes}\n     */\n    function mixinBehaviors(behaviors, klass) {\n      if (!behaviors) {\n        return /** @type {HTMLElement} */(klass);\n      }\n      // NOTE: ensure the bahevior is extending a class with\n      // legacy element api. This is necessary since behaviors expect to be able\n      // to access 1.x legacy api.\n      klass = Polymer.LegacyElementMixin(klass);\n      if (!Array.isArray(behaviors)) {\n        behaviors = [behaviors];\n      }\n      let superBehaviors = klass.prototype.behaviors;\n      // get flattened, deduped list of behaviors *not* already on super class\n      behaviors = flattenBehaviors(behaviors, null, superBehaviors);\n      // mixin new behaviors\n      klass = _mixinBehaviors(behaviors, klass);\n      if (superBehaviors) {\n        behaviors = superBehaviors.concat(behaviors);\n      }\n      // Set behaviors on prototype for BC...\n      klass.prototype.behaviors = behaviors;\n      return klass;\n    }\n\n    // NOTE:\n    // 1.x\n    // Behaviors were mixed in *in reverse order* and de-duped on the fly.\n    // The rule was that behavior properties were copied onto the element\n    // prototype if and only if the property did not already exist.\n    // Given: Polymer{ behaviors: [A, B, C, A, B]}, property copy order was:\n    // (1), B, (2), A, (3) C. This means prototype properties win over\n    // B properties win over A win over C. This mirrors what would happen\n    // with inheritance if element extended B extended A extended C.\n    //\n    // Again given, Polymer{ behaviors: [A, B, C, A, B]}, the resulting\n    // `behaviors` array was [C, A, B].\n    // Behavior lifecycle methods were called in behavior array order\n    // followed by the element, e.g. (1) C.created, (2) A.created,\n    // (3) B.created, (4) element.created. There was no support for\n    // super, and \"super-behavior\" methods were callable only by name).\n    //\n    // 2.x\n    // Behaviors are made into proper mixins which live in the\n    // element's prototype chain. Behaviors are placed in the element prototype\n    // eldest to youngest and de-duped youngest to oldest:\n    // So, first [A, B, C, A, B] becomes [C, A, B] then,\n    // the element prototype becomes (oldest) (1) Polymer.Element, (2) class(C),\n    // (3) class(A), (4) class(B), (5) class(Polymer({...})).\n    // Result:\n    // This means element properties win over B properties win over A win\n    // over C. (same as 1.x)\n    // If lifecycle is called (super then me), order is\n    // (1) C.created, (2) A.created, (3) B.created, (4) element.created\n    // (again same as 1.x)\n    function _mixinBehaviors(behaviors, klass) {\n      for (let i=0; i<behaviors.length; i++) {\n        let b = behaviors[i];\n        if (b) {\n          klass = Array.isArray(b) ? _mixinBehaviors(b, klass) :\n            GenerateClassFromInfo(b, klass);\n        }\n      }\n      return klass;\n    }\n\n    /**\n     * @param {Array} behaviors List of behaviors to flatten.\n     * @param {Array=} list Target list to flatten behaviors into.\n     * @param {Array=} exclude List of behaviors to exclude from the list.\n     * @return {!Array} Returns the list of flattened behaviors.\n     */\n    function flattenBehaviors(behaviors, list, exclude) {\n      list = list || [];\n      for (let i=behaviors.length-1; i >= 0; i--) {\n        let b = behaviors[i];\n        if (b) {\n          if (Array.isArray(b)) {\n            flattenBehaviors(b, list);\n          } else {\n            // dedup\n            if (list.indexOf(b) < 0 && (!exclude || exclude.indexOf(b) < 0)) {\n              list.unshift(b);\n            }\n          }\n        } else {\n          console.warn('behavior is null, check for missing or 404 import');\n        }\n      }\n      return list;\n    }\n\n    /**\n     * @param {!PolymerInit} info Polymer info object\n     * @param {function(new:HTMLElement)} Base base class to extend with info object\n     * @return {function(new:HTMLElement)} Generated class\n     * @suppress {checkTypes}\n     * @private\n     */\n    function GenerateClassFromInfo(info, Base) {\n\n      class PolymerGenerated extends Base {\n\n        static get properties() {\n          return info.properties;\n        }\n\n        static get observers() {\n          return info.observers;\n        }\n\n        /**\n         * @return {HTMLTemplateElement} template for this class\n         */\n        static get template() {\n          // get template first from any imperative set in `info._template`\n          return info._template ||\n            // next look in dom-module associated with this element's is.\n            Polymer.DomModule && Polymer.DomModule.import(this.is, 'template') ||\n            // next look for superclass template (note: use superclass symbol\n            // to ensure correct `this.is`)\n            Base.template ||\n            // finally fall back to `_template` in element's protoype.\n            this.prototype._template ||\n            null;\n        }\n\n        created() {\n          super.created();\n          if (info.created) {\n            info.created.call(this);\n          }\n        }\n\n        _registered() {\n          super._registered();\n          /* NOTE: `beforeRegister` is called here for bc, but the behavior\n           is different than in 1.x. In 1.0, the method was called *after*\n           mixing prototypes together but *before* processing of meta-objects.\n           However, dynamic effects can still be set here and can be done either\n           in `beforeRegister` or `registered`. It is no longer possible to set\n           `is` in `beforeRegister` as you could in 1.x.\n          */\n          if (info.beforeRegister) {\n            info.beforeRegister.call(Object.getPrototypeOf(this));\n          }\n          if (info.registered) {\n            info.registered.call(Object.getPrototypeOf(this));\n          }\n        }\n\n        _applyListeners() {\n          super._applyListeners();\n          if (info.listeners) {\n            for (let l in info.listeners) {\n              this._addMethodEventListenerToNode(this, l, info.listeners[l]);\n            }\n          }\n        }\n\n        // note: exception to \"super then me\" rule;\n        // do work before calling super so that super attributes\n        // only apply if not already set.\n        _ensureAttributes() {\n          if (info.hostAttributes) {\n            for (let a in info.hostAttributes) {\n              this._ensureAttribute(a, info.hostAttributes[a]);\n            }\n          }\n          super._ensureAttributes();\n        }\n\n        ready() {\n          super.ready();\n          if (info.ready) {\n            info.ready.call(this);\n          }\n        }\n\n        attached() {\n          super.attached();\n          if (info.attached) {\n            info.attached.call(this);\n          }\n        }\n\n        detached() {\n          super.detached();\n          if (info.detached) {\n            info.detached.call(this);\n          }\n        }\n\n        attributeChanged(name, old, value) {\n          super.attributeChanged(name, old, value);\n          if (info.attributeChanged) {\n            info.attributeChanged.call(this, name, old, value);\n          }\n       }\n      }\n\n      PolymerGenerated.generatedFrom = info\n\n      for (let p in info) {\n        // NOTE: cannot copy `metaProps` methods onto prototype at least because\n        // `super.ready` must be called and is not included in the user fn.\n        if (!(p in metaProps)) {\n          let pd = Object.getOwnPropertyDescriptor(info, p);\n          if (pd) {\n            Object.defineProperty(PolymerGenerated.prototype, p, pd);\n          }\n        }\n      }\n\n      return PolymerGenerated;\n    }\n\n    /**\n     * Generates a class that extends `Polymer.LegacyElement` based on the\n     * provided info object.  Metadata objects on the `info` object\n     * (`properties`, `observers`, `listeners`, `behaviors`, `is`) are used\n     * for Polymer's meta-programming systems, and any functions are copied\n     * to the generated class.\n     *\n     * Valid \"metadata\" values are as follows:\n     *\n     * `is`: String providing the tag name to register the element under. In\n     * addition, if a `dom-module` with the same id exists, the first template\n     * in that `dom-module` will be stamped into the shadow root of this element,\n     * with support for declarative event listeners (`on-...`), Polymer data\n     * bindings (`[[...]]` and `{{...}}`), and id-based node finding into\n     * `this.$`.\n     *\n     * `properties`: Object describing property-related metadata used by Polymer\n     * features (key: property names, value: object containing property metadata).\n     * Valid keys in per-property metadata include:\n     * - `type` (String|Number|Object|Array|...): Used by\n     *   `attributeChangedCallback` to determine how string-based attributes\n     *   are deserialized to JavaScript property values.\n     * - `notify` (boolean): Causes a change in the property to fire a\n     *   non-bubbling event called `<property>-changed`. Elements that have\n     *   enabled two-way binding to the property use this event to observe changes.\n     * - `readOnly` (boolean): Creates a getter for the property, but no setter.\n     *   To set a read-only property, use the private setter method\n     *   `_setProperty(property, value)`.\n     * - `observer` (string): Observer method name that will be called when\n     *   the property changes. The arguments of the method are\n     *   `(value, previousValue)`.\n     * - `computed` (string): String describing method and dependent properties\n     *   for computing the value of this property (e.g. `'computeFoo(bar, zot)'`).\n     *   Computed properties are read-only by default and can only be changed\n     *   via the return value of the computing method.\n     *\n     * `observers`: Array of strings describing multi-property observer methods\n     *  and their dependent properties (e.g. `'observeABC(a, b, c)'`).\n     *\n     * `listeners`: Object describing event listeners to be added to each\n     *  instance of this element (key: event name, value: method name).\n     *\n     * `behaviors`: Array of additional `info` objects containing metadata\n     * and callbacks in the same format as the `info` object here which are\n     * merged into this element.\n     *\n     * `hostAttributes`: Object listing attributes to be applied to the host\n     *  once created (key: attribute name, value: attribute value).  Values\n     *  are serialized based on the type of the value.  Host attributes should\n     *  generally be limited to attributes such as `tabIndex` and `aria-...`.\n     *  Attributes in `hostAttributes` are only applied if a user-supplied\n     *  attribute is not already present (attributes in markup override\n     *  `hostAttributes`).\n     *\n     * In addition, the following Polymer-specific callbacks may be provided:\n     * - `registered`: called after first instance of this element,\n     * - `created`: called during `constructor`\n     * - `attached`: called during `connectedCallback`\n     * - `detached`: called during `disconnectedCallback`\n     * - `ready`: called before first `attached`, after all properties of\n     *   this element have been propagated to its template and all observers\n     *   have run\n     *\n     * @param {!PolymerInit} info Object containing Polymer metadata and functions\n     *   to become class methods.\n     * @return {function(new:HTMLElement)} Generated class\n     * @memberof Polymer\n     */\n    Polymer.Class = function(info) {\n      if (!info) {\n        console.warn('Polymer.Class requires `info` argument');\n      }\n      let klass = GenerateClassFromInfo(info, info.behaviors ?\n        // note: mixinBehaviors ensures `LegacyElementMixin`.\n        mixinBehaviors(info.behaviors, HTMLElement) :\n        Polymer.LegacyElementMixin(HTMLElement));\n      // decorate klass with registration info\n      klass.is = info.is;\n      return klass;\n    }\n\n    Polymer.mixinBehaviors = mixinBehaviors;\n\n  })();\n\n</script>\n\n\n\n// WEBPACK FOOTER //\n// ../bower_components/polymer/lib/legacy/class.html","<!--\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n-->\n\n<link rel=\"import\" href=\"../utils/templatize.html\">\n\n<script>\n  (function() {\n    'use strict';\n\n    let TemplateInstanceBase = Polymer.TemplateInstanceBase; // eslint-disable-line\n\n    /**\n     * @typedef {{\n     *   _templatizerTemplate: HTMLTemplateElement,\n     *   _parentModel: boolean,\n     *   _instanceProps: Object,\n     *   _forwardHostPropV2: Function,\n     *   _notifyInstancePropV2: Function,\n     *   ctor: TemplateInstanceBase\n     * }}\n     */\n    let TemplatizerUser; // eslint-disable-line\n\n    /**\n     * The `Polymer.Templatizer` behavior adds methods to generate instances of\n     * templates that are each managed by an anonymous `Polymer.PropertyEffects`\n     * instance where data-bindings in the stamped template content are bound to\n     * accessors on itself.\n     *\n     * This behavior is provided in Polymer 2.x as a hybrid-element convenience\n     * only.  For non-hybrid usage, the `Polymer.Templatize` library\n     * should be used instead.\n     *\n     * Example:\n     *\n     *     // Get a template from somewhere, e.g. light DOM\n     *     let template = this.querySelector('template');\n     *     // Prepare the template\n     *     this.templatize(template);\n     *     // Instance the template with an initial data model\n     *     let instance = this.stamp({myProp: 'initial'});\n     *     // Insert the instance's DOM somewhere, e.g. light DOM\n     *     Polymer.dom(this).appendChild(instance.root);\n     *     // Changing a property on the instance will propagate to bindings\n     *     // in the template\n     *     instance.myProp = 'new value';\n     *\n     * Users of `Templatizer` may need to implement the following abstract\n     * API's to determine how properties and paths from the host should be\n     * forwarded into to instances:\n     *\n     *     _forwardHostPropV2: function(prop, value)\n     *\n     * Likewise, users may implement these additional abstract API's to determine\n     * how instance-specific properties that change on the instance should be\n     * forwarded out to the host, if necessary.\n     *\n     *     _notifyInstancePropV2: function(inst, prop, value)\n     *\n     * In order to determine which properties are instance-specific and require\n     * custom notification via `_notifyInstanceProp`, define an `_instanceProps`\n     * object containing keys for each instance prop, for example:\n     *\n     *     _instanceProps: {\n     *       item: true,\n     *       index: true\n     *     }\n     *\n     * Any properties used in the template that are not defined in _instanceProp\n     * will be forwarded out to the Templatize `owner` automatically.\n     *\n     * Users may also implement the following abstract function to show or\n     * hide any DOM generated using `stamp`:\n     *\n     *     _showHideChildren: function(shouldHide)\n     *\n     * Note that some callbacks are suffixed with `V2` in the Polymer 2.x behavior\n     * as the implementations will need to differ from the callbacks required\n     * by the 1.x Templatizer API due to changes in the `TemplateInstance` API\n     * between versions 1.x and 2.x.\n     *\n     * @polymerBehavior\n     * @memberof Polymer\n     */\n    let Templatizer = {\n\n      /**\n       * Generates an anonymous `TemplateInstance` class (stored as `this.ctor`)\n       * for the provided template.  This method should be called once per\n       * template to prepare an element for stamping the template, followed\n       * by `stamp` to create new instances of the template.\n       *\n       * @param {HTMLTemplateElement} template Template to prepare\n       * @param {boolean=} mutableData When `true`, the generated class will skip\n       *   strict dirty-checking for objects and arrays (always consider them to\n       *   be \"dirty\"). Defaults to false.\n       * @this {TemplatizerUser}\n       */\n      templatize(template, mutableData) {\n        this._templatizerTemplate = template;\n        this.ctor = Polymer.Templatize.templatize(template, this, {\n          mutableData: Boolean(mutableData),\n          parentModel: this._parentModel,\n          instanceProps: this._instanceProps,\n          forwardHostProp: this._forwardHostPropV2,\n          notifyInstanceProp: this._notifyInstancePropV2\n        });\n      },\n\n      /**\n       * Creates an instance of the template prepared by `templatize`.  The object\n       * returned is an instance of the anonymous class generated by `templatize`\n       * whose `root` property is a document fragment containing newly cloned\n       * template content, and which has property accessors corresponding to\n       * properties referenced in template bindings.\n       *\n       * @param {Object=} model Object containing initial property values to\n       *   populate into the template bindings.\n       * @return {TemplateInstanceBase} Returns the created instance of\n       * the template prepared by `templatize`.\n       * @this {TemplatizerUser}\n       */\n      stamp(model) {\n        return new this.ctor(model);\n      },\n\n      /**\n       * Returns the template \"model\" (`TemplateInstance`) associated with\n       * a given element, which serves as the binding scope for the template\n       * instance the element is contained in.  A template model should be used\n       * to manipulate data associated with this template instance.\n       *\n       * @param {HTMLElement} el Element for which to return a template model.\n       * @return {TemplateInstanceBase} Model representing the binding scope for\n       *   the element.\n       * @this {TemplatizerUser}\n       */\n      modelForElement(el) {\n        return Polymer.Templatize.modelForElement(this._templatizerTemplate, el);\n      }\n    };\n\n    Polymer.Templatizer = Templatizer;\n\n  })();\n</script>\n\n\n\n// WEBPACK FOOTER //\n// ../bower_components/polymer/lib/legacy/templatizer-behavior.html","<!--\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n-->\n\n<link rel=\"import\" href=\"../utils/boot.html\">\n<link rel=\"import\" href=\"../mixins/property-effects.html\">\n<link rel=\"import\" href=\"../mixins/mutable-data.html\">\n<link rel=\"import\" href=\"../mixins/gesture-event-listeners.html\">\n\n<script>\n\n  (function() {\n    'use strict';\n\n    /**\n     * @constructor\n     * @extends {HTMLElement}\n     * @implements {Polymer_PropertyEffects}\n     * @implements {Polymer_OptionalMutableData}\n     * @implements {Polymer_GestureEventListeners}\n     */\n    const domBindBase =\n      Polymer.GestureEventListeners(\n        Polymer.OptionalMutableData(\n          Polymer.PropertyEffects(HTMLElement)));\n\n    /**\n     * Custom element to allow using Polymer's template features (data binding,\n     * declarative event listeners, etc.) in the main document without defining\n     * a new custom element.\n     *\n     * `<template>` tags utilizing bindings may be wrapped with the `<dom-bind>`\n     * element, which will immediately stamp the wrapped template into the main\n     * document and bind elements to the `dom-bind` element itself as the\n     * binding scope.\n     *\n     * @polymer\n     * @customElement\n     * @appliesMixin Polymer.PropertyEffects\n     * @appliesMixin Polymer.OptionalMutableData\n     * @appliesMixin Polymer.GestureEventListeners\n     * @extends {domBindBase}\n     * @memberof Polymer\n     * @summary Custom element to allow using Polymer's template features (data\n     *   binding, declarative event listeners, etc.) in the main document.\n     */\n    class DomBind extends domBindBase {\n\n      static get observedAttributes() { return ['mutable-data'] }\n\n      constructor() {\n        super();\n        this.root = null;\n        this.$ = null;\n        this.__children = null;\n      }\n\n      // assumes only one observed attribute\n      attributeChangedCallback() {\n        this.mutableData = true;\n      }\n\n      connectedCallback() {\n        this.render();\n      }\n\n      disconnectedCallback() {\n        this.__removeChildren();\n      }\n\n      __insertChildren() {\n        this.parentNode.insertBefore(this.root, this);\n      }\n\n      __removeChildren() {\n        if (this.__children) {\n          for (let i=0; i<this.__children.length; i++) {\n            this.root.appendChild(this.__children[i]);\n          }\n        }\n      }\n\n      /**\n       * Forces the element to render its content. This is typically only\n       * necessary to call if HTMLImports with the async attribute are used.\n       */\n      render() {\n        let template;\n        if (!this.__children) {\n          template = /** @type {HTMLTemplateElement} */(template || this.querySelector('template'));\n          if (!template) {\n            // Wait until childList changes and template should be there by then\n            let observer = new MutationObserver(() => {\n              template = /** @type {HTMLTemplateElement} */(this.querySelector('template'));\n              if (template) {\n                observer.disconnect();\n                this.render();\n              } else {\n                throw new Error('dom-bind requires a <template> child');\n              }\n            })\n            observer.observe(this, {childList: true});\n            return;\n          }\n          this.root = this._stampTemplate(template);\n          this.$ = this.root.$;\n          this.__children = [];\n          for (let n=this.root.firstChild; n; n=n.nextSibling) {\n            this.__children[this.__children.length] = n;\n          }\n          this._enableProperties();\n        }\n        this.__insertChildren();\n        this.dispatchEvent(new CustomEvent('dom-change', {\n          bubbles: true,\n          composed: true\n        }));\n      }\n\n    }\n\n    customElements.define('dom-bind', DomBind);\n\n  })();\n\n</script>\n\n\n\n// WEBPACK FOOTER //\n// ../bower_components/polymer/lib/elements/dom-bind.html","<!--\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n-->\n\n<link rel=\"import\" href=\"../../polymer-element.html\">\n<link rel=\"import\" href=\"../utils/templatize.html\">\n<link rel=\"import\" href=\"../utils/debounce.html\">\n<link rel=\"import\" href=\"../utils/flush.html\">\n\n<script>\n\n(function() {\n  'use strict';\n\n  /**\n   * The `<dom-if>` element will stamp a light-dom `<template>` child when\n   * the `if` property becomes truthy, and the template can use Polymer\n   * data-binding and declarative event features when used in the context of\n   * a Polymer element's template.\n   *\n   * When `if` becomes falsey, the stamped content is hidden but not\n   * removed from dom. When `if` subsequently becomes truthy again, the content\n   * is simply re-shown. This approach is used due to its favorable performance\n   * characteristics: the expense of creating template content is paid only\n   * once and lazily.\n   *\n   * Set the `restamp` property to true to force the stamped content to be\n   * created / destroyed when the `if` condition changes.\n   *\n   * @customElement\n   * @polymer\n   * @extends Polymer.Element\n   * @memberof Polymer\n   * @summary Custom element that conditionally stamps and hides or removes\n   *   template content based on a boolean flag.\n   */\n  class DomIf extends Polymer.Element {\n\n    // Not needed to find template; can be removed once the analyzer\n    // can find the tag name from customElements.define call\n    static get is() { return 'dom-if'; }\n\n    static get template() { return null; }\n\n    static get properties() {\n\n      return {\n\n        /**\n         * Fired whenever DOM is added or removed/hidden by this template (by\n         * default, rendering occurs lazily).  To force immediate rendering, call\n         * `render`.\n         *\n         * @event dom-change\n         */\n\n        /**\n         * A boolean indicating whether this template should stamp.\n         */\n        if: {\n          type: Boolean,\n          observer: '__debounceRender'\n        },\n\n        /**\n         * When true, elements will be removed from DOM and discarded when `if`\n         * becomes false and re-created and added back to the DOM when `if`\n         * becomes true.  By default, stamped elements will be hidden but left\n         * in the DOM when `if` becomes false, which is generally results\n         * in better performance.\n         */\n        restamp: {\n          type: Boolean,\n          observer: '__debounceRender'\n        }\n\n      }\n\n    }\n\n    constructor() {\n      super();\n      this.__renderDebouncer = null;\n      this.__invalidProps = null;\n      this.__instance = null;\n      this._lastIf = false;\n      this.__ctor = null;\n    }\n\n    __debounceRender() {\n      // Render is async for 2 reasons:\n      // 1. To eliminate dom creation trashing if user code thrashes `if` in the\n      //    same turn. This was more common in 1.x where a compound computed\n      //    property could result in the result changing multiple times, but is\n      //    mitigated to a large extent by batched property processing in 2.x.\n      // 2. To avoid double object propagation when a bag including values bound\n      //    to the `if` property as well as one or more hostProps could enqueue\n      //    the <dom-if> to flush before the <template>'s host property\n      //    forwarding. In that scenario creating an instance would result in\n      //    the host props being set once, and then the enqueued changes on the\n      //    template would set properties a second time, potentially causing an\n      //    object to be set to an instance more than once.  Creating the\n      //    instance async from flushing data ensures this doesn't happen. If\n      //    we wanted a sync option in the future, simply having <dom-if> flush\n      //    (or clear) its template's pending host properties before creating\n      //    the instance would also avoid the problem.\n      this.__renderDebouncer = Polymer.Debouncer.debounce(\n            this.__renderDebouncer\n          , Polymer.Async.microTask\n          , () => this.__render());\n      Polymer.enqueueDebouncer(this.__renderDebouncer);\n    }\n\n    disconnectedCallback() {\n      super.disconnectedCallback();\n      if (!this.parentNode ||\n          (this.parentNode.nodeType == Node.DOCUMENT_FRAGMENT_NODE &&\n           !this.parentNode.host)) {\n        this.__teardownInstance();\n      }\n    }\n\n    connectedCallback() {\n      super.connectedCallback();\n      if (this.if) {\n        this.__debounceRender();\n      }\n    }\n\n    /**\n     * Forces the element to render its content. Normally rendering is\n     * asynchronous to a provoking change. This is done for efficiency so\n     * that multiple changes trigger only a single render. The render method\n     * should be called if, for example, template rendering is required to\n     * validate application state.\n     */\n    render() {\n      Polymer.flush();\n    }\n\n    __render() {\n      if (this.if) {\n        if (!this.__ensureInstance()) {\n          // No template found yet\n          return;\n        }\n        this._showHideChildren();\n      } else if (this.restamp) {\n        this.__teardownInstance();\n      }\n      if (!this.restamp && this.__instance) {\n        this._showHideChildren();\n      }\n      if (this.if != this._lastIf) {\n        this.dispatchEvent(new CustomEvent('dom-change', {\n          bubbles: true,\n          composed: true\n        }));\n        this._lastIf = this.if;\n      }\n    }\n\n    __ensureInstance() {\n      let parentNode = this.parentNode;\n      // Guard against element being detached while render was queued\n      if (parentNode) {\n        if (!this.__ctor) {\n          let template = this.querySelector('template');\n          if (!template) {\n            // Wait until childList changes and template should be there by then\n            let observer = new MutationObserver(() => {\n              if (this.querySelector('template')) {\n                observer.disconnect();\n                this.__render();\n              } else {\n                throw new Error('dom-if requires a <template> child');\n              }\n            })\n            observer.observe(this, {childList: true});\n            return false;\n          }\n          this.__ctor = Polymer.Templatize.templatize(template, this, {\n            // dom-if templatizer instances require `mutable: true`, as\n            // `__syncHostProperties` relies on that behavior to sync objects\n            mutableData: true,\n            /**\n             * @param {string} prop Property to forward\n             * @param {*} value Value of property\n             * @this {this}\n             */\n            forwardHostProp: function(prop, value) {\n              if (this.__instance) {\n                if (this.if) {\n                  this.__instance.forwardHostProp(prop, value);\n                } else {\n                  // If we have an instance but are squelching host property\n                  // forwarding due to if being false, note the invalidated\n                  // properties so `__syncHostProperties` can sync them the next\n                  // time `if` becomes true\n                  this.__invalidProps = this.__invalidProps || Object.create(null);\n                  this.__invalidProps[Polymer.Path.root(prop)] = true;\n                }\n              }\n            }\n          });\n        }\n        if (!this.__instance) {\n          this.__instance = new this.__ctor();\n          parentNode.insertBefore(this.__instance.root, this);\n        } else {\n          this.__syncHostProperties();\n          let c$ = this.__instance.children;\n          if (c$ && c$.length) {\n            // Detect case where dom-if was re-attached in new position\n            let lastChild = this.previousSibling;\n            if (lastChild !== c$[c$.length-1]) {\n              for (let i=0, n; (i<c$.length) && (n=c$[i]); i++) {\n                parentNode.insertBefore(n, this);\n              }\n            }\n          }\n        }\n      }\n      return true;\n    }\n\n    __syncHostProperties() {\n      let props = this.__invalidProps;\n      if (props) {\n        for (let prop in props) {\n          this.__instance._setPendingProperty(prop, this.__dataHost[prop]);\n        }\n        this.__invalidProps = null;\n        this.__instance._flushProperties();\n      }\n    }\n\n    __teardownInstance() {\n      if (this.__instance) {\n        let c$ = this.__instance.children;\n        if (c$ && c$.length) {\n          // use first child parent, for case when dom-if may have been detached\n          let parent = c$[0].parentNode;\n          for (let i=0, n; (i<c$.length) && (n=c$[i]); i++) {\n            parent.removeChild(n);\n          }\n        }\n        this.__instance = null;\n        this.__invalidProps = null;\n      }\n    }\n\n    _showHideChildren() {\n      let hidden = this.__hideTemplateChildren__ || !this.if;\n      if (this.__instance) {\n        this.__instance._showHideChildren(hidden);\n      }\n    }\n\n  }\n\n  customElements.define(DomIf.is, DomIf);\n\n  Polymer.DomIf = DomIf;\n\n})();\n</script>\n\n\n\n// WEBPACK FOOTER //\n// ../bower_components/polymer/lib/elements/dom-if.html","<!--\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n-->\n\n<link rel=\"import\" href=\"../../polymer-element.html\">\n<link rel=\"import\" href=\"../utils/mixin.html\">\n<link rel=\"import\" href=\"../utils/array-splice.html\">\n\n<script>\n(function() {\n  'use strict';\n\n  /**\n   * Element mixin for recording dynamic associations between item paths in a\n   * master `items` array and a `selected` array such that path changes to the\n   * master array (at the host) element or elsewhere via data-binding) are\n   * correctly propagated to items in the selected array and vice-versa.\n   *\n   * The `items` property accepts an array of user data, and via the\n   * `select(item)` and `deselect(item)` API, updates the `selected` property\n   * which may be bound to other parts of the application, and any changes to\n   * sub-fields of `selected` item(s) will be kept in sync with items in the\n   * `items` array.  When `multi` is false, `selected` is a property\n   * representing the last selected item.  When `multi` is true, `selected`\n   * is an array of multiply selected items.\n   *\n   * @polymer\n   * @mixinFunction\n   * @appliesMixin Polymer.ElementMixin\n   * @memberof Polymer\n   * @summary Element mixin for recording dynamic associations between item paths in a\n   * master `items` array and a `selected` array\n   */\n  let ArraySelectorMixin = Polymer.dedupingMixin(superClass => {\n\n    /**\n     * @constructor\n     * @extends {superClass}\n     * @implements {Polymer_ElementMixin}\n     */\n    let elementBase = Polymer.ElementMixin(superClass);\n\n    /**\n     * @polymer\n     * @mixinClass\n     * @implements {Polymer_ArraySelectorMixin}\n     * @unrestricted\n     */\n    class ArraySelectorMixin extends elementBase {\n\n      static get properties() {\n\n        return {\n\n          /**\n           * An array containing items from which selection will be made.\n           */\n          items: {\n            type: Array,\n          },\n\n          /**\n           * When `true`, multiple items may be selected at once (in this case,\n           * `selected` is an array of currently selected items).  When `false`,\n           * only one item may be selected at a time.\n           */\n          multi: {\n            type: Boolean,\n            value: false,\n          },\n\n          /**\n           * When `multi` is true, this is an array that contains any selected.\n           * When `multi` is false, this is the currently selected item, or `null`\n           * if no item is selected.\n           * @type {?(Object|Array<!Object>)}\n           */\n          selected: {\n            type: Object,\n            notify: true\n          },\n\n          /**\n           * When `multi` is false, this is the currently selected item, or `null`\n           * if no item is selected.\n           * @type {?Object}\n           */\n          selectedItem: {\n            type: Object,\n            notify: true\n          },\n\n          /**\n           * When `true`, calling `select` on an item that is already selected\n           * will deselect the item.\n           */\n          toggle: {\n            type: Boolean,\n            value: false\n          }\n\n        }\n      }\n\n      static get observers() {\n        return ['__updateSelection(multi, items.*)']\n      }\n\n      constructor() {\n        super();\n        this.__lastItems = null;\n        this.__lastMulti = null;\n        this.__selectedMap = null;\n      }\n\n      __updateSelection(multi, itemsInfo) {\n        let path = itemsInfo.path;\n        if (path == 'items') {\n          // Case 1 - items array changed, so diff against previous array and\n          // deselect any removed items and adjust selected indices\n          let newItems = itemsInfo.base || [];\n          let lastItems = this.__lastItems;\n          let lastMulti = this.__lastMulti;\n          if (multi !== lastMulti) {\n            this.clearSelection();\n          }\n          if (lastItems) {\n            let splices = Polymer.ArraySplice.calculateSplices(newItems, lastItems);\n            this.__applySplices(splices);\n          }\n          this.__lastItems = newItems;\n          this.__lastMulti = multi;\n        } else if (itemsInfo.path == 'items.splices') {\n          // Case 2 - got specific splice information describing the array mutation:\n          // deselect any removed items and adjust selected indices\n          this.__applySplices(itemsInfo.value.indexSplices);\n        } else {\n          // Case 3 - an array element was changed, so deselect the previous\n          // item for that index if it was previously selected\n          let part = path.slice('items.'.length);\n          let idx = parseInt(part, 10);\n          if ((part.indexOf('.') < 0) && part == idx) {\n            this.__deselectChangedIdx(idx);\n          }\n        }\n      }\n\n      __applySplices(splices) {\n        let selected = this.__selectedMap;\n        // Adjust selected indices and mark removals\n        for (let i=0; i<splices.length; i++) {\n          let s = splices[i];\n          selected.forEach((idx, item) => {\n            if (idx < s.index) {\n              // no change\n            } else if (idx >= s.index + s.removed.length) {\n              // adjust index\n              selected.set(item, idx + s.addedCount - s.removed.length);\n            } else {\n              // remove index\n              selected.set(item, -1);\n            }\n          });\n          for (let j=0; j<s.addedCount; j++) {\n            let idx = s.index + j;\n            if (selected.has(this.items[idx])) {\n              selected.set(this.items[idx], idx);\n            }\n          }\n        }\n        // Update linked paths\n        this.__updateLinks();\n        // Remove selected items that were removed from the items array\n        let sidx = 0;\n        selected.forEach((idx, item) => {\n          if (idx < 0) {\n            if (this.multi) {\n              this.splice('selected', sidx, 1);\n            } else {\n              this.selected = this.selectedItem = null;\n            }\n            selected.delete(item);\n          } else {\n            sidx++;\n          }\n        });\n      }\n\n      __updateLinks() {\n        this.__dataLinkedPaths = {};\n        if (this.multi) {\n          let sidx = 0;\n          this.__selectedMap.forEach(idx => {\n            if (idx >= 0) {\n              this.linkPaths('items.' + idx, 'selected.' + sidx++);\n            }\n          });\n        } else {\n          this.__selectedMap.forEach(idx => {\n            this.linkPaths('selected', 'items.' + idx);\n            this.linkPaths('selectedItem', 'items.' + idx);\n          });\n        }\n      }\n\n      /**\n       * Clears the selection state.\n       *\n       */\n      clearSelection() {\n        // Unbind previous selection\n        this.__dataLinkedPaths = {};\n        // The selected map stores 3 pieces of information:\n        // key: items array object\n        // value: items array index\n        // order: selected array index\n        this.__selectedMap = new Map();\n        // Initialize selection\n        this.selected = this.multi ? [] : null\n        this.selectedItem = null;\n      }\n\n      /**\n       * Returns whether the item is currently selected.\n       *\n       * @param {*} item Item from `items` array to test\n       * @return {boolean} Whether the item is selected\n       */\n      isSelected(item) {\n        return this.__selectedMap.has(item);\n      }\n\n      /**\n       * Returns whether the item is currently selected.\n       *\n       * @param {number} idx Index from `items` array to test\n       * @return {boolean} Whether the item is selected\n       */\n      isIndexSelected(idx) {\n        return this.isSelected(this.items[idx]);\n      }\n\n      __deselectChangedIdx(idx) {\n        let sidx = this.__selectedIndexForItemIndex(idx);\n        if (sidx >= 0) {\n          let i = 0;\n          this.__selectedMap.forEach((idx, item) => {\n            if (sidx == i++) {\n              this.deselect(item);\n            }\n          });\n        }\n      }\n\n      __selectedIndexForItemIndex(idx) {\n        let selected = this.__dataLinkedPaths['items.' + idx];\n        if (selected) {\n          return parseInt(selected.slice('selected.'.length), 10);\n        }\n      }\n\n      /**\n       * Deselects the given item if it is already selected.\n       *\n       * @param {*} item Item from `items` array to deselect\n       */\n      deselect(item) {\n        let idx = this.__selectedMap.get(item);\n        if (idx >= 0) {\n          this.__selectedMap.delete(item);\n          let sidx;\n          if (this.multi) {\n            sidx = this.__selectedIndexForItemIndex(idx);\n          }\n          this.__updateLinks();\n          if (this.multi) {\n            this.splice('selected', sidx, 1);\n          } else {\n            this.selected = this.selectedItem = null;\n          }\n        }\n      }\n\n      /**\n       * Deselects the given index if it is already selected.\n       *\n       * @param {number} idx Index from `items` array to deselect\n       */\n      deselectIndex(idx) {\n        this.deselect(this.items[idx]);\n      }\n\n      /**\n       * Selects the given item.  When `toggle` is true, this will automatically\n       * deselect the item if already selected.\n       *\n       * @param {*} item Item from `items` array to select\n       */\n      select(item) {\n        this.selectIndex(this.items.indexOf(item));\n      }\n\n      /**\n       * Selects the given index.  When `toggle` is true, this will automatically\n       * deselect the item if already selected.\n       *\n       * @param {number} idx Index from `items` array to select\n       */\n      selectIndex(idx) {\n        let item = this.items[idx];\n        if (!this.isSelected(item)) {\n          if (!this.multi) {\n            this.__selectedMap.clear();\n          }\n          this.__selectedMap.set(item, idx);\n          this.__updateLinks();\n          if (this.multi) {\n            this.push('selected', item);\n          } else {\n            this.selected = this.selectedItem = item;\n          }\n        } else if (this.toggle) {\n          this.deselectIndex(idx);\n        }\n      }\n\n    }\n\n    return ArraySelectorMixin;\n\n  });\n\n  // export mixin\n  Polymer.ArraySelectorMixin = ArraySelectorMixin;\n\n  /**\n   * @constructor\n   * @extends {Polymer.Element}\n   * @implements {Polymer_ArraySelectorMixin}\n   */\n  let baseArraySelector = ArraySelectorMixin(Polymer.Element);\n\n  /**\n   * Element implementing the `Polymer.ArraySelector` mixin, which records\n   * dynamic associations between item paths in a master `items` array and a\n   * `selected` array such that path changes to the master array (at the host)\n   * element or elsewhere via data-binding) are correctly propagated to items\n   * in the selected array and vice-versa.\n   *\n   * The `items` property accepts an array of user data, and via the\n   * `select(item)` and `deselect(item)` API, updates the `selected` property\n   * which may be bound to other parts of the application, and any changes to\n   * sub-fields of `selected` item(s) will be kept in sync with items in the\n   * `items` array.  When `multi` is false, `selected` is a property\n   * representing the last selected item.  When `multi` is true, `selected`\n   * is an array of multiply selected items.\n   *\n   * Example:\n   *\n   * ```html\n   * <dom-module id=\"employee-list\">\n   *\n   *   <template>\n   *\n   *     <div> Employee list: </div>\n   *     <template is=\"dom-repeat\" id=\"employeeList\" items=\"{{employees}}\">\n   *         <div>First name: <span>{{item.first}}</span></div>\n   *         <div>Last name: <span>{{item.last}}</span></div>\n   *         <button on-click=\"toggleSelection\">Select</button>\n   *     </template>\n   *\n   *     <array-selector id=\"selector\" items=\"{{employees}}\" selected=\"{{selected}}\" multi toggle></array-selector>\n   *\n   *     <div> Selected employees: </div>\n   *     <template is=\"dom-repeat\" items=\"{{selected}}\">\n   *         <div>First name: <span>{{item.first}}</span></div>\n   *         <div>Last name: <span>{{item.last}}</span></div>\n   *     </template>\n   *\n   *   </template>\n   *\n   * </dom-module>\n   * ```\n   *\n   * ```js\n   * Polymer({\n   *   is: 'employee-list',\n   *   ready() {\n   *     this.employees = [\n   *         {first: 'Bob', last: 'Smith'},\n   *         {first: 'Sally', last: 'Johnson'},\n   *         ...\n   *     ];\n   *   },\n   *   toggleSelection(e) {\n   *     let item = this.$.employeeList.itemForElement(e.target);\n   *     this.$.selector.select(item);\n   *   }\n   * });\n   * ```\n   *\n   * @polymer\n   * @customElement\n   * @extends {baseArraySelector}\n   * @appliesMixin Polymer.ArraySelectorMixin\n   * @memberof Polymer\n   * @summary Custom element that links paths between an input `items` array and\n   *   an output `selected` item or array based on calls to its selection API.\n   */\n  class ArraySelector extends baseArraySelector {\n    // Not needed to find template; can be removed once the analyzer\n    // can find the tag name from customElements.define call\n    static get is() { return 'array-selector' }\n  }\n  customElements.define(ArraySelector.is, ArraySelector);\n  Polymer.ArraySelector = ArraySelector;\n\n})();\n\n</script>\n\n\n\n// WEBPACK FOOTER //\n// ../bower_components/polymer/lib/elements/array-selector.html","<!--\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n-->\n<link rel=\"import\" href=\"../../../shadycss/custom-style-interface.html\">\n<link rel=\"import\" href=\"../utils/style-gather.html\">\n<script>\n(function() {\n  'use strict';\n\n  const attr = 'include';\n\n  const CustomStyleInterface = window.ShadyCSS.CustomStyleInterface;\n\n  /**\n   * Custom element for defining styles in the main document that can take\n   * advantage of several special features of Polymer's styling system:\n   *\n   * - Document styles defined in a custom-style are shimmed to ensure they\n   *   do not leak into local DOM when running on browsers without native\n   *   Shadow DOM.\n   * - Custom properties used by Polymer's shim for cross-scope styling may\n   *   be defined in an custom-style. Use the :root selector to define custom\n   *   properties that apply to all custom elements.\n   *\n   * To use, simply wrap an inline `<style>` tag in the main document whose\n   * CSS uses these features with a `<custom-style>` element.\n   *\n   * @customElement\n   * @extends HTMLElement\n   * @memberof Polymer\n   * @summary Custom element for defining styles in the main document that can\n   *   take advantage of Polymer's style scoping and custom properties shims.\n   */\n  class CustomStyle extends HTMLElement {\n    constructor() {\n      super();\n      this._style = null;\n      CustomStyleInterface.addCustomStyle(this);\n    }\n    /**\n     * Returns the light-DOM `<style>` child this element wraps.  Upon first\n     * call any style modules referenced via the `include` attribute will be\n     * concatenated to this element's `<style>`.\n     *\n     * @return {HTMLStyleElement} This element's light-DOM `<style>`\n     */\n    getStyle() {\n      if (this._style) {\n        return this._style;\n      }\n      const style = /** @type {HTMLStyleElement} */(this.querySelector('style'));\n      if (!style) {\n        return null;\n      }\n      this._style = style;\n      const include = style.getAttribute(attr);\n      if (include) {\n        style.removeAttribute(attr);\n        style.textContent = Polymer.StyleGather.cssFromModules(include) + style.textContent;\n      }\n      return this._style;\n    }\n  }\n\n  window.customElements.define('custom-style', CustomStyle);\n  Polymer.CustomStyle = CustomStyle;\n})();\n</script>\n\n\n\n// WEBPACK FOOTER //\n// ../bower_components/polymer/lib/elements/custom-style.html","\nrequire('./custom-style-interface.min.js');\n\n\n\n// WEBPACK FOOTER //\n// ../bower_components/shadycss/custom-style-interface.html","(function(){/*\n\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n'use strict';var c=!(window.ShadyDOM&&window.ShadyDOM.inUse),f;function g(a){f=a&&a.shimcssproperties?!1:c||!(navigator.userAgent.match(/AppleWebKit\\/601|Edge\\/15/)||!window.CSS||!CSS.supports||!CSS.supports(\"box-shadow\",\"0 0 0 var(--foo)\"))}window.ShadyCSS&&void 0!==window.ShadyCSS.nativeCss?f=window.ShadyCSS.nativeCss:window.ShadyCSS?(g(window.ShadyCSS),window.ShadyCSS=void 0):g(window.WebComponents&&window.WebComponents.flags);var h=f;function k(a,b){for(var d in b)null===d?a.style.removeProperty(d):a.style.setProperty(d,b[d])};var l=null,m=window.HTMLImports&&window.HTMLImports.whenReady||null,n;function p(){var a=q;requestAnimationFrame(function(){m?m(a):(l||(l=new Promise(function(a){n=a}),\"complete\"===document.readyState?n():document.addEventListener(\"readystatechange\",function(){\"complete\"===document.readyState&&n()})),l.then(function(){a&&a()}))})};var r=null,q=null;function t(){this.customStyles=[];this.enqueued=!1}function u(a){!a.enqueued&&q&&(a.enqueued=!0,p())}t.prototype.c=function(a){a.__seenByShadyCSS||(a.__seenByShadyCSS=!0,this.customStyles.push(a),u(this))};t.prototype.b=function(a){if(a.__shadyCSSCachedStyle)return a.__shadyCSSCachedStyle;var b;a.getStyle?b=a.getStyle():b=a;return b};\nt.prototype.a=function(){for(var a=this.customStyles,b=0;b<a.length;b++){var d=a[b];if(!d.__shadyCSSCachedStyle){var e=this.b(d);e&&(e=e.__appliedElement||e,r&&r(e),d.__shadyCSSCachedStyle=e)}}return a};t.prototype.addCustomStyle=t.prototype.c;t.prototype.getStyleForCustomStyle=t.prototype.b;t.prototype.processStyles=t.prototype.a;\nObject.defineProperties(t.prototype,{transformCallback:{get:function(){return r},set:function(a){r=a}},validateCallback:{get:function(){return q},set:function(a){var b=!1;q||(b=!0);q=a;b&&u(this)}}});var v=new t;window.ShadyCSS||(window.ShadyCSS={prepareTemplate:function(){},styleSubtree:function(a,b){v.a();k(a,b)},styleElement:function(){v.a()},styleDocument:function(a){v.a();k(document.body,a)},getComputedStyleValue:function(a,b){return(a=window.getComputedStyle(a).getPropertyValue(b))?a.trim():\"\"},nativeCss:h,nativeShadow:c});window.ShadyCSS.CustomStyleInterface=v;}).call(this);\n\n//# sourceMappingURL=custom-style-interface.min.js.map\n\n\n\n// WEBPACK FOOTER //\n// ../bower_components/shadycss/custom-style-interface.min.js","<!--\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n-->\n\n<link rel=\"import\" href=\"../mixins/mutable-data.html\">\n\n<script>\n(function() {\n  'use strict';\n\n  let mutablePropertyChange;\n  (\n    /** @suppress {missingProperties} */\n    function() {\n    mutablePropertyChange = Polymer.MutableData._mutablePropertyChange;\n  })();\n\n  /**\n   * Legacy element behavior to skip strict dirty-checking for objects and arrays,\n   * (always consider them to be \"dirty\") for use on legacy API Polymer elements.\n   *\n   * By default, `Polymer.PropertyEffects` performs strict dirty checking on\n   * objects, which means that any deep modifications to an object or array will\n   * not be propagated unless \"immutable\" data patterns are used (i.e. all object\n   * references from the root to the mutation were changed).\n   *\n   * Polymer also provides a proprietary data mutation and path notification API\n   * (e.g. `notifyPath`, `set`, and array mutation API's) that allow efficient\n   * mutation and notification of deep changes in an object graph to all elements\n   * bound to the same object graph.\n   *\n   * In cases where neither immutable patterns nor the data mutation API can be\n   * used, applying this mixin will cause Polymer to skip dirty checking for\n   * objects and arrays (always consider them to be \"dirty\").  This allows a\n   * user to make a deep modification to a bound object graph, and then either\n   * simply re-set the object (e.g. `this.items = this.items`) or call `notifyPath`\n   * (e.g. `this.notifyPath('items')`) to update the tree.  Note that all\n   * elements that wish to be updated based on deep mutations must apply this\n   * mixin or otherwise skip strict dirty checking for objects/arrays.\n   *\n   * In order to make the dirty check strategy configurable, see\n   * `Polymer.OptionalMutableDataBehavior`.\n   *\n   * Note, the performance characteristics of propagating large object graphs\n   * will be worse as opposed to using strict dirty checking with immutable\n   * patterns or Polymer's path notification API.\n   *\n   * @polymerBehavior\n   * @memberof Polymer\n   * @summary Behavior to skip strict dirty-checking for objects and\n   *   arrays\n   */\n  Polymer.MutableDataBehavior = {\n\n    /**\n     * Overrides `Polymer.PropertyEffects` to provide option for skipping\n     * strict equality checking for Objects and Arrays.\n     *\n     * This method pulls the value to dirty check against from the `__dataTemp`\n     * cache (rather than the normal `__data` cache) for Objects.  Since the temp\n     * cache is cleared at the end of a turn, this implementation allows\n     * side-effects of deep object changes to be processed by re-setting the\n     * same object (using the temp cache as an in-turn backstop to prevent\n     * cycles due to 2-way notification).\n     *\n     * @param {string} property Property name\n     * @param {*} value New property value\n     * @param {*} old Previous property value\n     * @return {boolean} Whether the property should be considered a change\n     * @protected\n     */\n    _shouldPropertyChange(property, value, old) {\n      return mutablePropertyChange(this, property, value, old, true);\n    }\n  };\n\n  /**\n   * Legacy element behavior to add the optional ability to skip strict\n   * dirty-checking for objects and arrays (always consider them to be\n   * \"dirty\") by setting a `mutable-data` attribute on an element instance.\n   *\n   * By default, `Polymer.PropertyEffects` performs strict dirty checking on\n   * objects, which means that any deep modifications to an object or array will\n   * not be propagated unless \"immutable\" data patterns are used (i.e. all object\n   * references from the root to the mutation were changed).\n   *\n   * Polymer also provides a proprietary data mutation and path notification API\n   * (e.g. `notifyPath`, `set`, and array mutation API's) that allow efficient\n   * mutation and notification of deep changes in an object graph to all elements\n   * bound to the same object graph.\n   *\n   * In cases where neither immutable patterns nor the data mutation API can be\n   * used, applying this mixin will allow Polymer to skip dirty checking for\n   * objects and arrays (always consider them to be \"dirty\").  This allows a\n   * user to make a deep modification to a bound object graph, and then either\n   * simply re-set the object (e.g. `this.items = this.items`) or call `notifyPath`\n   * (e.g. `this.notifyPath('items')`) to update the tree.  Note that all\n   * elements that wish to be updated based on deep mutations must apply this\n   * mixin or otherwise skip strict dirty checking for objects/arrays.\n   *\n   * While this behavior adds the ability to forgo Object/Array dirty checking,\n   * the `mutableData` flag defaults to false and must be set on the instance.\n   *\n   * Note, the performance characteristics of propagating large object graphs\n   * will be worse by relying on `mutableData: true` as opposed to using\n   * strict dirty checking with immutable patterns or Polymer's path notification\n   * API.\n   *\n   * @polymerBehavior\n   * @memberof Polymer\n   * @summary Behavior to optionally skip strict dirty-checking for objects and\n   *   arrays\n   */\n  Polymer.OptionalMutableDataBehavior = {\n\n    properties: {\n      /**\n       * Instance-level flag for configuring the dirty-checking strategy\n       * for this element.  When true, Objects and Arrays will skip dirty\n       * checking, otherwise strict equality checking will be used.\n       */\n      mutableData: Boolean\n    },\n\n    /**\n     * Overrides `Polymer.PropertyEffects` to skip strict equality checking\n     * for Objects and Arrays.\n     *\n     * Pulls the value to dirty check against from the `__dataTemp` cache\n     * (rather than the normal `__data` cache) for Objects.  Since the temp\n     * cache is cleared at the end of a turn, this implementation allows\n     * side-effects of deep object changes to be processed by re-setting the\n     * same object (using the temp cache as an in-turn backstop to prevent\n     * cycles due to 2-way notification).\n     *\n     * @param {string} property Property name\n     * @param {*} value New property value\n     * @param {*} old Previous property value\n     * @return {boolean} Whether the property should be considered a change\n     * @this {this}\n     * @protected\n     */\n    _shouldPropertyChange(property, value, old) {\n      return mutablePropertyChange(this, property, value, old, this.mutableData);\n    }\n  };\n\n})();\n\n</script>\n\n\n\n// WEBPACK FOOTER //\n// ../bower_components/polymer/lib/legacy/mutable-data-behavior.html","<!--\n@license\nCopyright (c) 2015 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n-->\n\n<link rel=\"import\" href=\"../polymer/polymer.html\">\n\n<!--\n`iron-a11y-announcer` is a singleton element that is intended to add a11y\nto features that require on-demand announcement from screen readers. In\norder to make use of the announcer, it is best to request its availability\nin the announcing element.\n\nExample:\n\n    Polymer({\n\n      is: 'x-chatty',\n\n      attached: function() {\n        // This will create the singleton element if it has not\n        // been created yet:\n        Polymer.IronA11yAnnouncer.requestAvailability();\n      }\n    });\n\nAfter the `iron-a11y-announcer` has been made available, elements can\nmake announces by firing bubbling `iron-announce` events.\n\nExample:\n\n    this.fire('iron-announce', {\n      text: 'This is an announcement!'\n    }, { bubbles: true });\n\nNote: announcements are only audible if you have a screen reader enabled.\n\n@group Iron Elements\n@demo demo/index.html\n-->\n\n<dom-module id=\"iron-a11y-announcer\">\n  <template>\n    <style>\n      :host {\n        display: inline-block;\n        position: fixed;\n        clip: rect(0px,0px,0px,0px);\n      }\n    </style>\n    <div aria-live$=\"[[mode]]\">[[_text]]</div>\n  </template>\n\n  <script>\n\n    (function() {\n      'use strict';\n\n      Polymer.IronA11yAnnouncer = Polymer({\n        is: 'iron-a11y-announcer',\n\n        properties: {\n\n          /**\n           * The value of mode is used to set the `aria-live` attribute\n           * for the element that will be announced. Valid values are: `off`,\n           * `polite` and `assertive`.\n           */\n          mode: {\n            type: String,\n            value: 'polite'\n          },\n\n          _text: {\n            type: String,\n            value: ''\n          }\n        },\n\n        created: function() {\n          if (!Polymer.IronA11yAnnouncer.instance) {\n            Polymer.IronA11yAnnouncer.instance = this;\n          }\n\n          document.body.addEventListener('iron-announce', this._onIronAnnounce.bind(this));\n        },\n\n        /**\n         * Cause a text string to be announced by screen readers.\n         *\n         * @param {string} text The text that should be announced.\n         */\n        announce: function(text) {\n          this._text = '';\n          this.async(function() {\n            this._text = text;\n          }, 100);\n        },\n\n        _onIronAnnounce: function(event) {\n          if (event.detail && event.detail.text) {\n            this.announce(event.detail.text);\n          }\n        }\n      });\n\n      Polymer.IronA11yAnnouncer.instance = null;\n\n      Polymer.IronA11yAnnouncer.requestAvailability = function() {\n        if (!Polymer.IronA11yAnnouncer.instance) {\n          Polymer.IronA11yAnnouncer.instance = document.createElement('iron-a11y-announcer');\n        }\n\n        document.body.appendChild(Polymer.IronA11yAnnouncer.instance);\n      };\n    })();\n\n  </script>\n</dom-module>\n\n\n\n// WEBPACK FOOTER //\n// ../bower_components/iron-a11y-announcer/iron-a11y-announcer.html","<!--\n@license\nCopyright (c) 2015 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n-->\n\n<link rel=\"import\" href=\"../polymer/polymer.html\">\n<link rel=\"import\" href=\"../iron-fit-behavior/iron-fit-behavior.html\">\n<link rel=\"import\" href=\"../iron-resizable-behavior/iron-resizable-behavior.html\">\n<link rel=\"import\" href=\"iron-overlay-manager.html\">\n<link rel=\"import\" href=\"iron-focusables-helper.html\">\n\n<script>\n(function() {\n  'use strict';\n\n  /** @polymerBehavior */\n  Polymer.IronOverlayBehaviorImpl = {\n\n    properties: {\n\n      /**\n       * True if the overlay is currently displayed.\n       */\n      opened: {\n        observer: '_openedChanged',\n        type: Boolean,\n        value: false,\n        notify: true\n      },\n\n      /**\n       * True if the overlay was canceled when it was last closed.\n       */\n      canceled: {\n        observer: '_canceledChanged',\n        readOnly: true,\n        type: Boolean,\n        value: false\n      },\n\n      /**\n       * Set to true to display a backdrop behind the overlay. It traps the focus\n       * within the light DOM of the overlay.\n       */\n      withBackdrop: {\n        observer: '_withBackdropChanged',\n        type: Boolean\n      },\n\n      /**\n       * Set to true to disable auto-focusing the overlay or child nodes with\n       * the `autofocus` attribute` when the overlay is opened.\n       */\n      noAutoFocus: {\n        type: Boolean,\n        value: false\n      },\n\n      /**\n       * Set to true to disable canceling the overlay with the ESC key.\n       */\n      noCancelOnEscKey: {\n        type: Boolean,\n        value: false\n      },\n\n      /**\n       * Set to true to disable canceling the overlay by clicking outside it.\n       */\n      noCancelOnOutsideClick: {\n        type: Boolean,\n        value: false\n      },\n\n      /**\n       * Contains the reason(s) this overlay was last closed (see `iron-overlay-closed`).\n       * `IronOverlayBehavior` provides the `canceled` reason; implementers of the\n       * behavior can provide other reasons in addition to `canceled`.\n       */\n      closingReason: {\n        // was a getter before, but needs to be a property so other\n        // behaviors can override this.\n        type: Object\n      },\n\n      /**\n       * Set to true to enable restoring of focus when overlay is closed.\n       */\n      restoreFocusOnClose: {\n        type: Boolean,\n        value: false\n      },\n\n      /**\n       * Set to true to keep overlay always on top.\n       */\n      alwaysOnTop: {\n        type: Boolean\n      },\n\n      /**\n       * Shortcut to access to the overlay manager.\n       * @private\n       * @type {Polymer.IronOverlayManagerClass}\n       */\n      _manager: {\n        type: Object,\n        value: Polymer.IronOverlayManager\n      },\n\n      /**\n       * The node being focused.\n       * @type {?Node}\n       */\n      _focusedChild: {\n        type: Object\n      }\n\n    },\n\n    listeners: {\n      'iron-resize': '_onIronResize'\n    },\n\n    /**\n     * The backdrop element.\n     * @type {Element}\n     */\n    get backdropElement() {\n      return this._manager.backdropElement;\n    },\n\n    /**\n     * Returns the node to give focus to.\n     * @type {Node}\n     */\n    get _focusNode() {\n      return this._focusedChild || Polymer.dom(this).querySelector('[autofocus]') || this;\n    },\n\n    /**\n     * Array of nodes that can receive focus (overlay included), ordered by `tabindex`.\n     * This is used to retrieve which is the first and last focusable nodes in order\n     * to wrap the focus for overlays `with-backdrop`.\n     *\n     * If you know what is your content (specifically the first and last focusable children),\n     * you can override this method to return only `[firstFocusable, lastFocusable];`\n     * @type {Array<Node>}\n     * @protected\n     */\n    get _focusableNodes() {\n      return Polymer.IronFocusablesHelper.getTabbableNodes(this);\n    },\n\n    ready: function() {\n      // Used to skip calls to notifyResize and refit while the overlay is animating.\n      this.__isAnimating = false;\n      // with-backdrop needs tabindex to be set in order to trap the focus.\n      // If it is not set, IronOverlayBehavior will set it, and remove it if with-backdrop = false.\n      this.__shouldRemoveTabIndex = false;\n      // Used for wrapping the focus on TAB / Shift+TAB.\n      this.__firstFocusableNode = this.__lastFocusableNode = null;\n      // Used by __onNextAnimationFrame to cancel any previous callback.\n      this.__raf = null;\n      // Focused node before overlay gets opened. Can be restored on close.\n      this.__restoreFocusNode = null;\n      this._ensureSetup();\n    },\n\n    attached: function() {\n      // Call _openedChanged here so that position can be computed correctly.\n      if (this.opened) {\n        this._openedChanged(this.opened);\n      }\n      this._observer = Polymer.dom(this).observeNodes(this._onNodesChange);\n    },\n\n    detached: function() {\n      Polymer.dom(this).unobserveNodes(this._observer);\n      this._observer = null;\n      if (this.__raf) {\n        window.cancelAnimationFrame(this.__raf);\n        this.__raf = null;\n      }\n      this._manager.removeOverlay(this);\n    },\n\n    /**\n     * Toggle the opened state of the overlay.\n     */\n    toggle: function() {\n      this._setCanceled(false);\n      this.opened = !this.opened;\n    },\n\n    /**\n     * Open the overlay.\n     */\n    open: function() {\n      this._setCanceled(false);\n      this.opened = true;\n    },\n\n    /**\n     * Close the overlay.\n     */\n    close: function() {\n      this._setCanceled(false);\n      this.opened = false;\n    },\n\n    /**\n     * Cancels the overlay.\n     * @param {Event=} event The original event\n     */\n    cancel: function(event) {\n      var cancelEvent = this.fire('iron-overlay-canceled', event, {cancelable: true});\n      if (cancelEvent.defaultPrevented) {\n        return;\n      }\n\n      this._setCanceled(true);\n      this.opened = false;\n    },\n\n    /**\n     * Invalidates the cached tabbable nodes. To be called when any of the focusable\n     * content changes (e.g. a button is disabled).\n     */\n    invalidateTabbables: function() {\n      this.__firstFocusableNode = this.__lastFocusableNode = null;\n    },\n\n    _ensureSetup: function() {\n      if (this._overlaySetup) {\n        return;\n      }\n      this._overlaySetup = true;\n      this.style.outline = 'none';\n      this.style.display = 'none';\n    },\n\n    /**\n     * Called when `opened` changes.\n     * @param {boolean=} opened\n     * @protected\n     */\n    _openedChanged: function(opened) {\n      if (opened) {\n        this.removeAttribute('aria-hidden');\n      } else {\n        this.setAttribute('aria-hidden', 'true');\n      }\n\n      // Defer any animation-related code on attached\n      // (_openedChanged gets called again on attached).\n      if (!this.isAttached) {\n        return;\n      }\n\n      this.__isAnimating = true;\n\n      // Use requestAnimationFrame for non-blocking rendering.\n      this.__onNextAnimationFrame(this.__openedChanged);\n    },\n\n    _canceledChanged: function() {\n      this.closingReason = this.closingReason || {};\n      this.closingReason.canceled = this.canceled;\n    },\n\n    _withBackdropChanged: function() {\n      // If tabindex is already set, no need to override it.\n      if (this.withBackdrop && !this.hasAttribute('tabindex')) {\n        this.setAttribute('tabindex', '-1');\n        this.__shouldRemoveTabIndex = true;\n      } else if (this.__shouldRemoveTabIndex) {\n        this.removeAttribute('tabindex');\n        this.__shouldRemoveTabIndex = false;\n      }\n      if (this.opened && this.isAttached) {\n        this._manager.trackBackdrop();\n      }\n    },\n\n    /**\n     * tasks which must occur before opening; e.g. making the element visible.\n     * @protected\n     */\n    _prepareRenderOpened: function() {\n      // Store focused node.\n      this.__restoreFocusNode = this._manager.deepActiveElement;\n\n      // Needed to calculate the size of the overlay so that transitions on its size\n      // will have the correct starting points.\n      this._preparePositioning();\n      this.refit();\n      this._finishPositioning();\n\n      // Safari will apply the focus to the autofocus element when displayed\n      // for the first time, so we make sure to return the focus where it was.\n      if (this.noAutoFocus && document.activeElement === this._focusNode) {\n        this._focusNode.blur();\n        this.__restoreFocusNode.focus();\n      }\n    },\n\n    /**\n     * Tasks which cause the overlay to actually open; typically play an animation.\n     * @protected\n     */\n    _renderOpened: function() {\n      this._finishRenderOpened();\n    },\n\n    /**\n     * Tasks which cause the overlay to actually close; typically play an animation.\n     * @protected\n     */\n    _renderClosed: function() {\n      this._finishRenderClosed();\n    },\n\n    /**\n     * Tasks to be performed at the end of open action. Will fire `iron-overlay-opened`.\n     * @protected\n     */\n    _finishRenderOpened: function() {\n      this.notifyResize();\n      this.__isAnimating = false;\n\n      this.fire('iron-overlay-opened');\n    },\n\n    /**\n     * Tasks to be performed at the end of close action. Will fire `iron-overlay-closed`.\n     * @protected\n     */\n    _finishRenderClosed: function() {\n      // Hide the overlay.\n      this.style.display = 'none';\n      // Reset z-index only at the end of the animation.\n      this.style.zIndex = '';\n      this.notifyResize();\n      this.__isAnimating = false;\n      this.fire('iron-overlay-closed', this.closingReason);\n    },\n\n    _preparePositioning: function() {\n      this.style.transition = this.style.webkitTransition = 'none';\n      this.style.transform = this.style.webkitTransform = 'none';\n      this.style.display = '';\n    },\n\n    _finishPositioning: function() {\n      // First, make it invisible & reactivate animations.\n      this.style.display = 'none';\n      // Force reflow before re-enabling animations so that they don't start.\n      // Set scrollTop to itself so that Closure Compiler doesn't remove this.\n      this.scrollTop = this.scrollTop;\n      this.style.transition = this.style.webkitTransition = '';\n      this.style.transform = this.style.webkitTransform = '';\n      // Now that animations are enabled, make it visible again\n      this.style.display = '';\n      // Force reflow, so that following animations are properly started.\n      // Set scrollTop to itself so that Closure Compiler doesn't remove this.\n      this.scrollTop = this.scrollTop;\n    },\n\n    /**\n     * Applies focus according to the opened state.\n     * @protected\n     */\n    _applyFocus: function() {\n      if (this.opened) {\n        if (!this.noAutoFocus) {\n          this._focusNode.focus();\n        }\n      }\n      else {\n        this._focusNode.blur();\n        this._focusedChild = null;\n        // Restore focus.\n        if (this.restoreFocusOnClose && this.__restoreFocusNode) {\n          this.__restoreFocusNode.focus();\n        }\n        this.__restoreFocusNode = null;\n        // If many overlays get closed at the same time, one of them would still\n        // be the currentOverlay even if already closed, and would call _applyFocus\n        // infinitely, so we check for this not to be the current overlay.\n        var currentOverlay = this._manager.currentOverlay();\n        if (currentOverlay && this !== currentOverlay) {\n          currentOverlay._applyFocus();\n        }\n      }\n    },\n\n    /**\n     * Cancels (closes) the overlay. Call when click happens outside the overlay.\n     * @param {!Event} event\n     * @protected\n     */\n    _onCaptureClick: function(event) {\n      if (!this.noCancelOnOutsideClick) {\n        this.cancel(event);\n      }\n    },\n\n    /**\n     * Keeps track of the focused child. If withBackdrop, traps focus within overlay.\n     * @param {!Event} event\n     * @protected\n     */\n    _onCaptureFocus: function (event) {\n      if (!this.withBackdrop) {\n        return;\n      }\n      var path = Polymer.dom(event).path;\n      if (path.indexOf(this) === -1) {\n        event.stopPropagation();\n        this._applyFocus();\n      } else {\n        this._focusedChild = path[0];\n      }\n    },\n\n    /**\n     * Handles the ESC key event and cancels (closes) the overlay.\n     * @param {!Event} event\n     * @protected\n     */\n    _onCaptureEsc: function(event) {\n      if (!this.noCancelOnEscKey) {\n        this.cancel(event);\n      }\n    },\n\n    /**\n     * Handles TAB key events to track focus changes.\n     * Will wrap focus for overlays withBackdrop.\n     * @param {!Event} event\n     * @protected\n     */\n    _onCaptureTab: function(event) {\n      if (!this.withBackdrop) {\n        return;\n      }\n      this.__ensureFirstLastFocusables();\n      // TAB wraps from last to first focusable.\n      // Shift + TAB wraps from first to last focusable.\n      var shift = event.shiftKey;\n      var nodeToCheck = shift ? this.__firstFocusableNode : this.__lastFocusableNode;\n      var nodeToSet = shift ? this.__lastFocusableNode : this.__firstFocusableNode;\n      var shouldWrap = false;\n      if (nodeToCheck === nodeToSet) {\n        // If nodeToCheck is the same as nodeToSet, it means we have an overlay\n        // with 0 or 1 focusables; in either case we still need to trap the\n        // focus within the overlay.\n        shouldWrap = true;\n      } else {\n        // In dom=shadow, the manager will receive focus changes on the main\n        // root but not the ones within other shadow roots, so we can't rely on\n        // _focusedChild, but we should check the deepest active element.\n        var focusedNode = this._manager.deepActiveElement;\n        // If the active element is not the nodeToCheck but the overlay itself,\n        // it means the focus is about to go outside the overlay, hence we\n        // should prevent that (e.g. user opens the overlay and hit Shift+TAB).\n        shouldWrap = (focusedNode === nodeToCheck || focusedNode === this);\n      }\n\n      if (shouldWrap) {\n        // When the overlay contains the last focusable element of the document\n        // and it's already focused, pressing TAB would move the focus outside\n        // the document (e.g. to the browser search bar). Similarly, when the\n        // overlay contains the first focusable element of the document and it's\n        // already focused, pressing Shift+TAB would move the focus outside the\n        // document (e.g. to the browser search bar).\n        // In both cases, we would not receive a focus event, but only a blur.\n        // In order to achieve focus wrapping, we prevent this TAB event and\n        // force the focus. This will also prevent the focus to temporarily move\n        // outside the overlay, which might cause scrolling.\n        event.preventDefault();\n        this._focusedChild = nodeToSet;\n        this._applyFocus();\n      }\n    },\n\n    /**\n     * Refits if the overlay is opened and not animating.\n     * @protected\n     */\n    _onIronResize: function() {\n      if (this.opened && !this.__isAnimating) {\n        this.__onNextAnimationFrame(this.refit);\n      }\n    },\n\n    /**\n     * Will call notifyResize if overlay is opened.\n     * Can be overridden in order to avoid multiple observers on the same node.\n     * @protected\n     */\n    _onNodesChange: function() {\n      if (this.opened && !this.__isAnimating) {\n        // It might have added focusable nodes, so invalidate cached values.\n        this.invalidateTabbables();\n        this.notifyResize();\n      }\n    },\n\n    /**\n     * Will set first and last focusable nodes if any of them is not set.\n     * @private\n     */\n    __ensureFirstLastFocusables: function() {\n      if (!this.__firstFocusableNode || !this.__lastFocusableNode) {\n        var focusableNodes = this._focusableNodes;\n        this.__firstFocusableNode = focusableNodes[0];\n        this.__lastFocusableNode = focusableNodes[focusableNodes.length - 1];\n      }\n    },\n\n    /**\n     * Tasks executed when opened changes: prepare for the opening, move the\n     * focus, update the manager, render opened/closed.\n     * @private\n     */\n    __openedChanged: function() {\n      if (this.opened) {\n        // Make overlay visible, then add it to the manager.\n        this._prepareRenderOpened();\n        this._manager.addOverlay(this);\n        // Move the focus to the child node with [autofocus].\n        this._applyFocus();\n\n        this._renderOpened();\n      } else {\n        // Remove overlay, then restore the focus before actually closing.\n        this._manager.removeOverlay(this);\n        this._applyFocus();\n\n        this._renderClosed();\n      }\n    },\n\n    /**\n     * Executes a callback on the next animation frame, overriding any previous\n     * callback awaiting for the next animation frame. e.g.\n     * `__onNextAnimationFrame(callback1) && __onNextAnimationFrame(callback2)`;\n     * `callback1` will never be invoked.\n     * @param {!Function} callback Its `this` parameter is the overlay itself.\n     * @private\n     */\n    __onNextAnimationFrame: function(callback) {\n      if (this.__raf) {\n        window.cancelAnimationFrame(this.__raf);\n      }\n      var self = this;\n      this.__raf = window.requestAnimationFrame(function nextAnimationFrame() {\n        self.__raf = null;\n        callback.call(self);\n      });\n    }\n\n  };\n\n  /**\n  Use `Polymer.IronOverlayBehavior` to implement an element that can be hidden or shown, and displays\n  on top of other content. It includes an optional backdrop, and can be used to implement a variety\n  of UI controls including dialogs and drop downs. Multiple overlays may be displayed at once.\n\n  See the [demo source code](https://github.com/PolymerElements/iron-overlay-behavior/blob/master/demo/simple-overlay.html)\n  for an example.\n\n  ### Closing and canceling\n\n  An overlay may be hidden by closing or canceling. The difference between close and cancel is user\n  intent. Closing generally implies that the user acknowledged the content on the overlay. By default,\n  it will cancel whenever the user taps outside it or presses the escape key. This behavior is\n  configurable with the `no-cancel-on-esc-key` and the `no-cancel-on-outside-click` properties.\n  `close()` should be called explicitly by the implementer when the user interacts with a control\n  in the overlay element. When the dialog is canceled, the overlay fires an 'iron-overlay-canceled'\n  event. Call `preventDefault` on this event to prevent the overlay from closing.\n\n  ### Positioning\n\n  By default the element is sized and positioned to fit and centered inside the window. You can\n  position and size it manually using CSS. See `Polymer.IronFitBehavior`.\n\n  ### Backdrop\n\n  Set the `with-backdrop` attribute to display a backdrop behind the overlay. The backdrop is\n  appended to `<body>` and is of type `<iron-overlay-backdrop>`. See its doc page for styling\n  options.\n\n  In addition, `with-backdrop` will wrap the focus within the content in the light DOM.\n  Override the [`_focusableNodes` getter](#Polymer.IronOverlayBehavior:property-_focusableNodes)\n  to achieve a different behavior.\n\n  ### Limitations\n\n  The element is styled to appear on top of other content by setting its `z-index` property. You\n  must ensure no element has a stacking context with a higher `z-index` than its parent stacking\n  context. You should place this element as a child of `<body>` whenever possible.\n\n  @demo demo/index.html\n  @polymerBehavior\n  */\n  Polymer.IronOverlayBehavior = [Polymer.IronFitBehavior, Polymer.IronResizableBehavior, Polymer.IronOverlayBehaviorImpl];\n\n  /**\n   * Fired after the overlay opens.\n   * @event iron-overlay-opened\n   */\n\n  /**\n   * Fired when the overlay is canceled, but before it is closed.\n   * @event iron-overlay-canceled\n   * @param {Event} event The closing of the overlay can be prevented\n   * by calling `event.preventDefault()`. The `event.detail` is the original event that\n   * originated the canceling (e.g. ESC keyboard event or click event outside the overlay).\n   */\n\n  /**\n   * Fired after the overlay closes.\n   * @event iron-overlay-closed\n   * @param {Event} event The `event.detail` is the `closingReason` property\n   * (contains `canceled`, whether the overlay was canceled).\n   */\n\n})();\n</script>\n\n\n\n// WEBPACK FOOTER //\n// ../bower_components/iron-overlay-behavior/iron-overlay-behavior.html","<!--\n@license\nCopyright (c) 2015 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n-->\n\n<link rel=\"import\" href=\"../polymer/polymer.html\">\n\n<script>\n/**\n`Polymer.IronFitBehavior` fits an element in another element using `max-height` and `max-width`, and\noptionally centers it in the window or another element.\n\nThe element will only be sized and/or positioned if it has not already been sized and/or positioned\nby CSS.\n\nCSS properties               | Action\n-----------------------------|-------------------------------------------\n`position` set               | Element is not centered horizontally or vertically\n`top` or `bottom` set        | Element is not vertically centered\n`left` or `right` set        | Element is not horizontally centered\n`max-height` set             | Element respects `max-height`\n`max-width` set              | Element respects `max-width`\n\n`Polymer.IronFitBehavior` can position an element into another element using\n`verticalAlign` and `horizontalAlign`. This will override the element's css position.\n\n      <div class=\"container\">\n        <iron-fit-impl vertical-align=\"top\" horizontal-align=\"auto\">\n          Positioned into the container\n        </iron-fit-impl>\n      </div>\n\nUse `noOverlap` to position the element around another element without overlapping it.\n\n      <div class=\"container\">\n        <iron-fit-impl no-overlap vertical-align=\"auto\" horizontal-align=\"auto\">\n          Positioned around the container\n        </iron-fit-impl>\n      </div>\n\nUse `horizontalOffset, verticalOffset` to offset the element from its `positionTarget`;\n`Polymer.IronFitBehavior` will collapse these in order to keep the element\nwithin `fitInto` boundaries, while preserving the element's CSS margin values.\n\n      <div class=\"container\">\n        <iron-fit-impl vertical-align=\"top\" vertical-offset=\"20\">\n          With vertical offset\n        </iron-fit-impl>\n      </div>\n\n\n@demo demo/index.html\n@polymerBehavior\n*/\n  Polymer.IronFitBehavior = {\n\n    properties: {\n\n      /**\n       * The element that will receive a `max-height`/`width`. By default it is the same as `this`,\n       * but it can be set to a child element. This is useful, for example, for implementing a\n       * scrolling region inside the element.\n       * @type {!Element}\n       */\n      sizingTarget: {\n        type: Object,\n        value: function() {\n          return this;\n        }\n      },\n\n      /**\n       * The element to fit `this` into.\n       */\n      fitInto: {\n        type: Object,\n        value: window\n      },\n\n      /**\n       * Will position the element around the positionTarget without overlapping it.\n       */\n      noOverlap: {\n        type: Boolean\n      },\n\n      /**\n       * The element that should be used to position the element. If not set, it will\n       * default to the parent node.\n       * @type {!Element}\n       */\n      positionTarget: {\n        type: Element\n      },\n\n      /**\n       * The orientation against which to align the element horizontally\n       * relative to the `positionTarget`. Possible values are \"left\", \"right\", \"auto\".\n       */\n      horizontalAlign: {\n        type: String\n      },\n\n      /**\n       * The orientation against which to align the element vertically\n       * relative to the `positionTarget`. Possible values are \"top\", \"bottom\", \"auto\".\n       */\n      verticalAlign: {\n        type: String\n      },\n\n      /**\n       * If true, it will use `horizontalAlign` and `verticalAlign` values as preferred alignment\n       * and if there's not enough space, it will pick the values which minimize the cropping.\n       */\n      dynamicAlign: {\n        type: Boolean\n      },\n\n      /**\n       * A pixel value that will be added to the position calculated for the\n       * given `horizontalAlign`, in the direction of alignment. You can think\n       * of it as increasing or decreasing the distance to the side of the\n       * screen given by `horizontalAlign`.\n       *\n       * If `horizontalAlign` is \"left\", this offset will increase or decrease\n       * the distance to the left side of the screen: a negative offset will\n       * move the dropdown to the left; a positive one, to the right.\n       *\n       * Conversely if `horizontalAlign` is \"right\", this offset will increase\n       * or decrease the distance to the right side of the screen: a negative\n       * offset will move the dropdown to the right; a positive one, to the left.\n       */\n      horizontalOffset: {\n        type: Number,\n        value: 0,\n        notify: true\n      },\n\n      /**\n       * A pixel value that will be added to the position calculated for the\n       * given `verticalAlign`, in the direction of alignment. You can think\n       * of it as increasing or decreasing the distance to the side of the\n       * screen given by `verticalAlign`.\n       *\n       * If `verticalAlign` is \"top\", this offset will increase or decrease\n       * the distance to the top side of the screen: a negative offset will\n       * move the dropdown upwards; a positive one, downwards.\n       *\n       * Conversely if `verticalAlign` is \"bottom\", this offset will increase\n       * or decrease the distance to the bottom side of the screen: a negative\n       * offset will move the dropdown downwards; a positive one, upwards.\n       */\n      verticalOffset: {\n        type: Number,\n        value: 0,\n        notify: true\n      },\n\n      /**\n       * Set to true to auto-fit on attach.\n       */\n      autoFitOnAttach: {\n        type: Boolean,\n        value: false\n      },\n\n      /** @type {?Object} */\n      _fitInfo: {\n        type: Object\n      }\n    },\n\n    get _fitWidth() {\n      var fitWidth;\n      if (this.fitInto === window) {\n        fitWidth = this.fitInto.innerWidth;\n      } else {\n        fitWidth = this.fitInto.getBoundingClientRect().width;\n      }\n      return fitWidth;\n    },\n\n    get _fitHeight() {\n      var fitHeight;\n      if (this.fitInto === window) {\n        fitHeight = this.fitInto.innerHeight;\n      } else {\n        fitHeight = this.fitInto.getBoundingClientRect().height;\n      }\n      return fitHeight;\n    },\n\n    get _fitLeft() {\n      var fitLeft;\n      if (this.fitInto === window) {\n        fitLeft = 0;\n      } else {\n        fitLeft = this.fitInto.getBoundingClientRect().left;\n      }\n      return fitLeft;\n    },\n\n    get _fitTop() {\n      var fitTop;\n      if (this.fitInto === window) {\n        fitTop = 0;\n      } else {\n        fitTop = this.fitInto.getBoundingClientRect().top;\n      }\n      return fitTop;\n    },\n\n    /**\n     * The element that should be used to position the element,\n     * if no position target is configured.\n     */\n    get _defaultPositionTarget() {\n      var parent = Polymer.dom(this).parentNode;\n\n      if (parent && parent.nodeType === Node.DOCUMENT_FRAGMENT_NODE) {\n        parent = parent.host;\n      }\n\n      return parent;\n    },\n\n    /**\n     * The horizontal align value, accounting for the RTL/LTR text direction.\n     */\n    get _localeHorizontalAlign() {\n      if (this._isRTL) {\n        // In RTL, \"left\" becomes \"right\".\n        if (this.horizontalAlign === 'right') {\n          return 'left';\n        }\n        if (this.horizontalAlign === 'left') {\n          return 'right';\n        }\n      }\n      return this.horizontalAlign;\n    },\n\n    attached: function() {\n      // Memoize this to avoid expensive calculations & relayouts.\n      // Make sure we do it only once\n      if (typeof this._isRTL === 'undefined') {\n        this._isRTL = window.getComputedStyle(this).direction == 'rtl';\n      }\n      this.positionTarget = this.positionTarget || this._defaultPositionTarget;\n      if (this.autoFitOnAttach) {\n        if (window.getComputedStyle(this).display === 'none') {\n          setTimeout(function() {\n            this.fit();\n          }.bind(this));\n        } else {\n          // NOTE: shadydom applies distribution asynchronously\n          // for performance reasons webcomponents/shadydom#120\n          // Flush to get correct layout info.\n          window.ShadyDOM && ShadyDOM.flush();\n          this.fit();\n        }\n      }\n    },\n\n    detached: function() {\n      if (this.__deferredFit) {\n        clearTimeout(this.__deferredFit);\n        this.__deferredFit = null;\n      }\n    },\n\n    /**\n     * Positions and fits the element into the `fitInto` element.\n     */\n    fit: function() {\n      this.position();\n      this.constrain();\n      this.center();\n    },\n\n    /**\n     * Memoize information needed to position and size the target element.\n     * @suppress {deprecated}\n     */\n    _discoverInfo: function() {\n      if (this._fitInfo) {\n        return;\n      }\n      var target = window.getComputedStyle(this);\n      var sizer = window.getComputedStyle(this.sizingTarget);\n\n      this._fitInfo = {\n        inlineStyle: {\n          top: this.style.top || '',\n          left: this.style.left || '',\n          position: this.style.position || ''\n        },\n        sizerInlineStyle: {\n          maxWidth: this.sizingTarget.style.maxWidth || '',\n          maxHeight: this.sizingTarget.style.maxHeight || '',\n          boxSizing: this.sizingTarget.style.boxSizing || ''\n        },\n        positionedBy: {\n          vertically: target.top !== 'auto' ? 'top' : (target.bottom !== 'auto' ?\n            'bottom' : null),\n          horizontally: target.left !== 'auto' ? 'left' : (target.right !== 'auto' ?\n            'right' : null)\n        },\n        sizedBy: {\n          height: sizer.maxHeight !== 'none',\n          width: sizer.maxWidth !== 'none',\n          minWidth: parseInt(sizer.minWidth, 10) || 0,\n          minHeight: parseInt(sizer.minHeight, 10) || 0\n        },\n        margin: {\n          top: parseInt(target.marginTop, 10) || 0,\n          right: parseInt(target.marginRight, 10) || 0,\n          bottom: parseInt(target.marginBottom, 10) || 0,\n          left: parseInt(target.marginLeft, 10) || 0\n        }\n      };\n    },\n\n    /**\n     * Resets the target element's position and size constraints, and clear\n     * the memoized data.\n     */\n    resetFit: function() {\n      var info = this._fitInfo || {};\n      for (var property in info.sizerInlineStyle) {\n        this.sizingTarget.style[property] = info.sizerInlineStyle[property];\n      }\n      for (var property in info.inlineStyle) {\n        this.style[property] = info.inlineStyle[property];\n      }\n\n      this._fitInfo = null;\n    },\n\n    /**\n     * Equivalent to calling `resetFit()` and `fit()`. Useful to call this after\n     * the element or the `fitInto` element has been resized, or if any of the\n     * positioning properties (e.g. `horizontalAlign, verticalAlign`) is updated.\n     * It preserves the scroll position of the sizingTarget.\n     */\n    refit: function() {\n      var scrollLeft = this.sizingTarget.scrollLeft;\n      var scrollTop = this.sizingTarget.scrollTop;\n      this.resetFit();\n      this.fit();\n      this.sizingTarget.scrollLeft = scrollLeft;\n      this.sizingTarget.scrollTop = scrollTop;\n    },\n\n    /**\n     * Positions the element according to `horizontalAlign, verticalAlign`.\n     */\n    position: function() {\n      if (!this.horizontalAlign && !this.verticalAlign) {\n        // needs to be centered, and it is done after constrain.\n        return;\n      }\n      this._discoverInfo();\n\n      this.style.position = 'fixed';\n      // Need border-box for margin/padding.\n      this.sizingTarget.style.boxSizing = 'border-box';\n      // Set to 0, 0 in order to discover any offset caused by parent stacking contexts.\n      this.style.left = '0px';\n      this.style.top = '0px';\n\n      var rect = this.getBoundingClientRect();\n      var positionRect = this.__getNormalizedRect(this.positionTarget);\n      var fitRect = this.__getNormalizedRect(this.fitInto);\n\n      var margin = this._fitInfo.margin;\n\n      // Consider the margin as part of the size for position calculations.\n      var size = {\n        width: rect.width + margin.left + margin.right,\n        height: rect.height + margin.top + margin.bottom\n      };\n\n      var position = this.__getPosition(this._localeHorizontalAlign, this.verticalAlign, size, positionRect,\n        fitRect);\n\n      var left = position.left + margin.left;\n      var top = position.top + margin.top;\n\n      // We first limit right/bottom within fitInto respecting the margin,\n      // then use those values to limit top/left.\n      var right = Math.min(fitRect.right - margin.right, left + rect.width);\n      var bottom = Math.min(fitRect.bottom - margin.bottom, top + rect.height);\n\n      // Keep left/top within fitInto respecting the margin.\n      left = Math.max(fitRect.left + margin.left,\n        Math.min(left, right - this._fitInfo.sizedBy.minWidth));\n      top = Math.max(fitRect.top + margin.top,\n        Math.min(top, bottom - this._fitInfo.sizedBy.minHeight));\n\n      // Use right/bottom to set maxWidth/maxHeight, and respect minWidth/minHeight.\n      this.sizingTarget.style.maxWidth = Math.max(right - left, this._fitInfo.sizedBy.minWidth) + 'px';\n      this.sizingTarget.style.maxHeight = Math.max(bottom - top, this._fitInfo.sizedBy.minHeight) + 'px';\n\n      // Remove the offset caused by any stacking context.\n      this.style.left = (left - rect.left) + 'px';\n      this.style.top = (top - rect.top) + 'px';\n    },\n\n    /**\n     * Constrains the size of the element to `fitInto` by setting `max-height`\n     * and/or `max-width`.\n     */\n    constrain: function() {\n      if (this.horizontalAlign || this.verticalAlign) {\n        return;\n      }\n      this._discoverInfo();\n\n      var info = this._fitInfo;\n      // position at (0px, 0px) if not already positioned, so we can measure the natural size.\n      if (!info.positionedBy.vertically) {\n        this.style.position = 'fixed';\n        this.style.top = '0px';\n      }\n      if (!info.positionedBy.horizontally) {\n        this.style.position = 'fixed';\n        this.style.left = '0px';\n      }\n\n      // need border-box for margin/padding\n      this.sizingTarget.style.boxSizing = 'border-box';\n      // constrain the width and height if not already set\n      var rect = this.getBoundingClientRect();\n      if (!info.sizedBy.height) {\n        this.__sizeDimension(rect, info.positionedBy.vertically, 'top', 'bottom', 'Height');\n      }\n      if (!info.sizedBy.width) {\n        this.__sizeDimension(rect, info.positionedBy.horizontally, 'left', 'right', 'Width');\n      }\n    },\n\n    /**\n     * @protected\n     * @deprecated\n     */\n    _sizeDimension: function(rect, positionedBy, start, end, extent) {\n      this.__sizeDimension(rect, positionedBy, start, end, extent);\n    },\n\n    /**\n     * @private\n     */\n    __sizeDimension: function(rect, positionedBy, start, end, extent) {\n      var info = this._fitInfo;\n      var fitRect = this.__getNormalizedRect(this.fitInto);\n      var max = extent === 'Width' ? fitRect.width : fitRect.height;\n      var flip = (positionedBy === end);\n      var offset = flip ? max - rect[end] : rect[start];\n      var margin = info.margin[flip ? start : end];\n      var offsetExtent = 'offset' + extent;\n      var sizingOffset = this[offsetExtent] - this.sizingTarget[offsetExtent];\n      this.sizingTarget.style['max' + extent] = (max - margin - offset - sizingOffset) + 'px';\n    },\n\n    /**\n     * Centers horizontally and vertically if not already positioned. This also sets\n     * `position:fixed`.\n     */\n    center: function() {\n      if (this.horizontalAlign || this.verticalAlign) {\n        return;\n      }\n      this._discoverInfo();\n\n      var positionedBy = this._fitInfo.positionedBy;\n      if (positionedBy.vertically && positionedBy.horizontally) {\n        // Already positioned.\n        return;\n      }\n      // Need position:fixed to center\n      this.style.position = 'fixed';\n      // Take into account the offset caused by parents that create stacking\n      // contexts (e.g. with transform: translate3d). Translate to 0,0 and\n      // measure the bounding rect.\n      if (!positionedBy.vertically) {\n        this.style.top = '0px';\n      }\n      if (!positionedBy.horizontally) {\n        this.style.left = '0px';\n      }\n      // It will take in consideration margins and transforms\n      var rect = this.getBoundingClientRect();\n      var fitRect = this.__getNormalizedRect(this.fitInto);\n      if (!positionedBy.vertically) {\n        var top = fitRect.top - rect.top + (fitRect.height - rect.height) / 2;\n        this.style.top = top + 'px';\n      }\n      if (!positionedBy.horizontally) {\n        var left = fitRect.left - rect.left + (fitRect.width - rect.width) / 2;\n        this.style.left = left + 'px';\n      }\n    },\n\n    __getNormalizedRect: function(target) {\n      if (target === document.documentElement || target === window) {\n        return {\n          top: 0,\n          left: 0,\n          width: window.innerWidth,\n          height: window.innerHeight,\n          right: window.innerWidth,\n          bottom: window.innerHeight\n        };\n      }\n      return target.getBoundingClientRect();\n    },\n\n    __getCroppedArea: function(position, size, fitRect) {\n      var verticalCrop = Math.min(0, position.top) + Math.min(0, fitRect.bottom - (position.top + size.height));\n      var horizontalCrop = Math.min(0, position.left) + Math.min(0, fitRect.right - (position.left + size.width));\n      return Math.abs(verticalCrop) * size.width + Math.abs(horizontalCrop) * size.height;\n    },\n\n\n    __getPosition: function(hAlign, vAlign, size, positionRect, fitRect) {\n      // All the possible configurations.\n      // Ordered as top-left, top-right, bottom-left, bottom-right.\n      var positions = [{\n        verticalAlign: 'top',\n        horizontalAlign: 'left',\n        top: positionRect.top + this.verticalOffset,\n        left: positionRect.left + this.horizontalOffset\n      }, {\n        verticalAlign: 'top',\n        horizontalAlign: 'right',\n        top: positionRect.top + this.verticalOffset,\n        left: positionRect.right - size.width - this.horizontalOffset\n      }, {\n        verticalAlign: 'bottom',\n        horizontalAlign: 'left',\n        top: positionRect.bottom - size.height - this.verticalOffset,\n        left: positionRect.left + this.horizontalOffset\n      }, {\n        verticalAlign: 'bottom',\n        horizontalAlign: 'right',\n        top: positionRect.bottom - size.height - this.verticalOffset,\n        left: positionRect.right - size.width - this.horizontalOffset\n      }];\n\n      if (this.noOverlap) {\n        // Duplicate.\n        for (var i = 0, l = positions.length; i < l; i++) {\n          var copy = {};\n          for (var key in positions[i]) {\n            copy[key] = positions[i][key];\n          }\n          positions.push(copy);\n        }\n        // Horizontal overlap only.\n        positions[0].top = positions[1].top += positionRect.height;\n        positions[2].top = positions[3].top -= positionRect.height;\n        // Vertical overlap only.\n        positions[4].left = positions[6].left += positionRect.width;\n        positions[5].left = positions[7].left -= positionRect.width;\n      }\n\n      // Consider auto as null for coding convenience.\n      vAlign = vAlign === 'auto' ? null : vAlign;\n      hAlign = hAlign === 'auto' ? null : hAlign;\n\n      var position;\n      for (var i = 0; i < positions.length; i++) {\n        var pos = positions[i];\n\n        // If both vAlign and hAlign are defined, return exact match.\n        // For dynamicAlign and noOverlap we'll have more than one candidate, so\n        // we'll have to check the croppedArea to make the best choice.\n        if (!this.dynamicAlign && !this.noOverlap &&\n          pos.verticalAlign === vAlign && pos.horizontalAlign === hAlign) {\n          position = pos;\n          break;\n        }\n\n        // Align is ok if alignment preferences are respected. If no preferences,\n        // it is considered ok.\n        var alignOk = (!vAlign || pos.verticalAlign === vAlign) &&\n          (!hAlign || pos.horizontalAlign === hAlign);\n\n        // Filter out elements that don't match the alignment (if defined).\n        // With dynamicAlign, we need to consider all the positions to find the\n        // one that minimizes the cropped area.\n        if (!this.dynamicAlign && !alignOk) {\n          continue;\n        }\n\n        position = position || pos;\n        pos.croppedArea = this.__getCroppedArea(pos, size, fitRect);\n        var diff = pos.croppedArea - position.croppedArea;\n        // Check which crops less. If it crops equally, check if align is ok.\n        if (diff < 0 || (diff === 0 && alignOk)) {\n          position = pos;\n        }\n        // If not cropped and respects the align requirements, keep it.\n        // This allows to prefer positions overlapping horizontally over the\n        // ones overlapping vertically.\n        if (position.croppedArea === 0 && alignOk) {\n          break;\n        }\n      }\n\n      return position;\n    }\n\n  };\n</script>\n\n\n\n// WEBPACK FOOTER //\n// ../bower_components/iron-fit-behavior/iron-fit-behavior.html","<!--\n@license\nCopyright (c) 2015 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n-->\n\n<link rel=\"import\" href=\"../polymer/polymer.html\">\n<link rel=\"import\" href=\"../iron-a11y-keys-behavior/iron-a11y-keys-behavior.html\">\n<link rel=\"import\" href=\"iron-overlay-backdrop.html\">\n\n<script>\n\n  /**\n   * @struct\n   * @constructor\n   * @private\n   */\n  Polymer.IronOverlayManagerClass = function() {\n    /**\n     * Used to keep track of the opened overlays.\n     * @private {Array<Element>}\n     */\n    this._overlays = [];\n\n    /**\n     * iframes have a default z-index of 100,\n     * so this default should be at least that.\n     * @private {number}\n     */\n    this._minimumZ = 101;\n\n    /**\n     * Memoized backdrop element.\n     * @private {Element|null}\n     */\n    this._backdropElement = null;\n\n    // Enable document-wide tap recognizer.\n    // NOTE: Use useCapture=true to avoid accidentally prevention of the closing\n    // of an overlay via event.stopPropagation(). The only way to prevent\n    // closing of an overlay should be through its APIs.\n    // NOTE: enable tap on <html> to workaround Polymer/polymer#4459\n    Polymer.Gestures.add(document.documentElement, 'tap', null);\n    document.addEventListener('tap', this._onCaptureClick.bind(this), true);\n    document.addEventListener('focus', this._onCaptureFocus.bind(this), true);\n    document.addEventListener('keydown', this._onCaptureKeyDown.bind(this), true);\n  };\n\n  Polymer.IronOverlayManagerClass.prototype = {\n\n    constructor: Polymer.IronOverlayManagerClass,\n\n    /**\n     * The shared backdrop element.\n     * @type {!Element} backdropElement\n     */\n    get backdropElement() {\n      if (!this._backdropElement) {\n        this._backdropElement = document.createElement('iron-overlay-backdrop');\n      }\n      return this._backdropElement;\n    },\n\n    /**\n     * The deepest active element.\n     * @type {!Element} activeElement the active element\n     */\n    get deepActiveElement() {\n      // document.activeElement can be null\n      // https://developer.mozilla.org/en-US/docs/Web/API/Document/activeElement\n      // In case of null, default it to document.body.\n      var active = document.activeElement || document.body;\n      while (active.root && Polymer.dom(active.root).activeElement) {\n        active = Polymer.dom(active.root).activeElement;\n      }\n      return active;\n    },\n\n    /**\n     * Brings the overlay at the specified index to the front.\n     * @param {number} i\n     * @private\n     */\n    _bringOverlayAtIndexToFront: function(i) {\n      var overlay = this._overlays[i];\n      if (!overlay) {\n        return;\n      }\n      var lastI = this._overlays.length - 1;\n      var currentOverlay = this._overlays[lastI];\n      // Ensure always-on-top overlay stays on top.\n      if (currentOverlay && this._shouldBeBehindOverlay(overlay, currentOverlay)) {\n        lastI--;\n      }\n      // If already the top element, return.\n      if (i >= lastI) {\n        return;\n      }\n      // Update z-index to be on top.\n      var minimumZ = Math.max(this.currentOverlayZ(), this._minimumZ);\n      if (this._getZ(overlay) <= minimumZ) {\n        this._applyOverlayZ(overlay, minimumZ);\n      }\n\n      // Shift other overlays behind the new on top.\n      while (i < lastI) {\n        this._overlays[i] = this._overlays[i + 1];\n        i++;\n      }\n      this._overlays[lastI] = overlay;\n    },\n\n    /**\n     * Adds the overlay and updates its z-index if it's opened, or removes it if it's closed.\n     * Also updates the backdrop z-index.\n     * @param {!Element} overlay\n     */\n    addOrRemoveOverlay: function(overlay) {\n      if (overlay.opened) {\n        this.addOverlay(overlay);\n      } else {\n        this.removeOverlay(overlay);\n      }\n    },\n\n    /**\n     * Tracks overlays for z-index and focus management.\n     * Ensures the last added overlay with always-on-top remains on top.\n     * @param {!Element} overlay\n     */\n    addOverlay: function(overlay) {\n      var i = this._overlays.indexOf(overlay);\n      if (i >= 0) {\n        this._bringOverlayAtIndexToFront(i);\n        this.trackBackdrop();\n        return;\n      }\n      var insertionIndex = this._overlays.length;\n      var currentOverlay = this._overlays[insertionIndex - 1];\n      var minimumZ = Math.max(this._getZ(currentOverlay), this._minimumZ);\n      var newZ = this._getZ(overlay);\n\n      // Ensure always-on-top overlay stays on top.\n      if (currentOverlay && this._shouldBeBehindOverlay(overlay, currentOverlay)) {\n        // This bumps the z-index of +2.\n        this._applyOverlayZ(currentOverlay, minimumZ);\n        insertionIndex--;\n        // Update minimumZ to match previous overlay's z-index.\n        var previousOverlay = this._overlays[insertionIndex - 1];\n        minimumZ = Math.max(this._getZ(previousOverlay), this._minimumZ);\n      }\n\n      // Update z-index and insert overlay.\n      if (newZ <= minimumZ) {\n        this._applyOverlayZ(overlay, minimumZ);\n      }\n      this._overlays.splice(insertionIndex, 0, overlay);\n\n      this.trackBackdrop();\n    },\n\n    /**\n     * @param {!Element} overlay\n     */\n    removeOverlay: function(overlay) {\n      var i = this._overlays.indexOf(overlay);\n      if (i === -1) {\n        return;\n      }\n      this._overlays.splice(i, 1);\n\n      this.trackBackdrop();\n    },\n\n    /**\n     * Returns the current overlay.\n     * @return {Element|undefined}\n     */\n    currentOverlay: function() {\n      var i = this._overlays.length - 1;\n      return this._overlays[i];\n    },\n\n    /**\n     * Returns the current overlay z-index.\n     * @return {number}\n     */\n    currentOverlayZ: function() {\n      return this._getZ(this.currentOverlay());\n    },\n\n    /**\n     * Ensures that the minimum z-index of new overlays is at least `minimumZ`.\n     * This does not effect the z-index of any existing overlays.\n     * @param {number} minimumZ\n     */\n    ensureMinimumZ: function(minimumZ) {\n      this._minimumZ = Math.max(this._minimumZ, minimumZ);\n    },\n\n    focusOverlay: function() {\n      var current = /** @type {?} */ (this.currentOverlay());\n      if (current) {\n        current._applyFocus();\n      }\n    },\n\n    /**\n     * Updates the backdrop z-index.\n     */\n    trackBackdrop: function() {\n      var overlay = this._overlayWithBackdrop();\n      // Avoid creating the backdrop if there is no overlay with backdrop.\n      if (!overlay && !this._backdropElement) {\n        return;\n      }\n      this.backdropElement.style.zIndex = this._getZ(overlay) - 1;\n      this.backdropElement.opened = !!overlay;\n      // Property observers are not fired until element is attached\n      // in Polymer 2.x, so we ensure element is attached if needed.\n      // https://github.com/Polymer/polymer/issues/4526\n      this.backdropElement.prepare();\n    },\n\n    /**\n     * @return {Array<Element>}\n     */\n    getBackdrops: function() {\n      var backdrops = [];\n      for (var i = 0; i < this._overlays.length; i++) {\n        if (this._overlays[i].withBackdrop) {\n          backdrops.push(this._overlays[i]);\n        }\n      }\n      return backdrops;\n    },\n\n    /**\n     * Returns the z-index for the backdrop.\n     * @return {number}\n     */\n    backdropZ: function() {\n      return this._getZ(this._overlayWithBackdrop()) - 1;\n    },\n\n    /**\n     * Returns the first opened overlay that has a backdrop.\n     * @return {Element|undefined}\n     * @private\n     */\n    _overlayWithBackdrop: function() {\n      for (var i = 0; i < this._overlays.length; i++) {\n        if (this._overlays[i].withBackdrop) {\n          return this._overlays[i];\n        }\n      }\n    },\n\n    /**\n     * Calculates the minimum z-index for the overlay.\n     * @param {Element=} overlay\n     * @private\n     */\n    _getZ: function(overlay) {\n      var z = this._minimumZ;\n      if (overlay) {\n        var z1 = Number(overlay.style.zIndex || window.getComputedStyle(overlay).zIndex);\n        // Check if is a number\n        // Number.isNaN not supported in IE 10+\n        if (z1 === z1) {\n          z = z1;\n        }\n      }\n      return z;\n    },\n\n    /**\n     * @param {!Element} element\n     * @param {number|string} z\n     * @private\n     */\n    _setZ: function(element, z) {\n      element.style.zIndex = z;\n    },\n\n    /**\n     * @param {!Element} overlay\n     * @param {number} aboveZ\n     * @private\n     */\n    _applyOverlayZ: function(overlay, aboveZ) {\n      this._setZ(overlay, aboveZ + 2);\n    },\n\n    /**\n     * Returns the deepest overlay in the path.\n     * @param {Array<Element>=} path\n     * @return {Element|undefined}\n     * @suppress {missingProperties}\n     * @private\n     */\n    _overlayInPath: function(path) {\n      path = path || [];\n      for (var i = 0; i < path.length; i++) {\n        if (path[i]._manager === this) {\n          return path[i];\n        }\n      }\n    },\n\n    /**\n     * Ensures the click event is delegated to the right overlay.\n     * @param {!Event} event\n     * @private\n     */\n    _onCaptureClick: function(event) {\n      var overlay = /** @type {?} */ (this.currentOverlay());\n      // Check if clicked outside of top overlay.\n      if (overlay && this._overlayInPath(Polymer.dom(event).path) !== overlay) {\n        overlay._onCaptureClick(event);\n      }\n    },\n\n    /**\n     * Ensures the focus event is delegated to the right overlay.\n     * @param {!Event} event\n     * @private\n     */\n    _onCaptureFocus: function(event) {\n      var overlay = /** @type {?} */ (this.currentOverlay());\n      if (overlay) {\n        overlay._onCaptureFocus(event);\n      }\n    },\n\n    /**\n     * Ensures TAB and ESC keyboard events are delegated to the right overlay.\n     * @param {!Event} event\n     * @private\n     */\n    _onCaptureKeyDown: function(event) {\n      var overlay = /** @type {?} */ (this.currentOverlay());\n      if (overlay) {\n        if (Polymer.IronA11yKeysBehavior.keyboardEventMatchesKeys(event, 'esc')) {\n          overlay._onCaptureEsc(event);\n        } else if (Polymer.IronA11yKeysBehavior.keyboardEventMatchesKeys(event, 'tab')) {\n          overlay._onCaptureTab(event);\n        }\n      }\n    },\n\n    /**\n     * Returns if the overlay1 should be behind overlay2.\n     * @param {!Element} overlay1\n     * @param {!Element} overlay2\n     * @return {boolean}\n     * @suppress {missingProperties}\n     * @private\n     */\n    _shouldBeBehindOverlay: function(overlay1, overlay2) {\n      return !overlay1.alwaysOnTop && overlay2.alwaysOnTop;\n    }\n  };\n\n  Polymer.IronOverlayManager = new Polymer.IronOverlayManagerClass();\n</script>\n\n\n\n// WEBPACK FOOTER //\n// ../bower_components/iron-overlay-behavior/iron-overlay-manager.html","<!--\n@license\nCopyright (c) 2015 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n-->\n\n<link rel=\"import\" href=\"../polymer/polymer.html\">\n\n<!--\n`iron-overlay-backdrop` is a backdrop used by `Polymer.IronOverlayBehavior`. It should be a\nsingleton.\n\n### Styling\n\nThe following custom properties and mixins are available for styling.\n\nCustom property | Description | Default\n-------------------------------------------|------------------------|---------\n`--iron-overlay-backdrop-background-color` | Backdrop background color                                     | #000\n`--iron-overlay-backdrop-opacity`          | Backdrop opacity                                              | 0.6\n`--iron-overlay-backdrop`                  | Mixin applied to `iron-overlay-backdrop`.                      | {}\n`--iron-overlay-backdrop-opened`           | Mixin applied to `iron-overlay-backdrop` when it is displayed | {}\n-->\n\n<dom-module id=\"iron-overlay-backdrop\">\n\n  <template>\n    <style>\n      :host {\n        position: fixed;\n        top: 0;\n        left: 0;\n        width: 100%;\n        height: 100%;\n        background-color: var(--iron-overlay-backdrop-background-color, #000);\n        opacity: 0;\n        transition: opacity 0.2s;\n        pointer-events: none;\n        @apply --iron-overlay-backdrop;\n      }\n\n      :host(.opened) {\n        opacity: var(--iron-overlay-backdrop-opacity, 0.6);\n        pointer-events: auto;\n        @apply --iron-overlay-backdrop-opened;\n      }\n    </style>\n\n    <slot></slot>\n  </template>\n\n</dom-module>\n\n<script>\n(function() {\n'use strict';\n\n  Polymer({\n\n    is: 'iron-overlay-backdrop',\n\n    properties: {\n\n      /**\n       * Returns true if the backdrop is opened.\n       */\n      opened: {\n        reflectToAttribute: true,\n        type: Boolean,\n        value: false,\n        observer: '_openedChanged'\n      }\n\n    },\n\n    listeners: {\n      'transitionend': '_onTransitionend'\n    },\n\n    created: function() {\n      // Used to cancel previous requestAnimationFrame calls when opened changes.\n      this.__openedRaf = null;\n    },\n\n    attached: function() {\n      this.opened && this._openedChanged(this.opened);\n    },\n\n    /**\n     * Appends the backdrop to document body if needed.\n     */\n    prepare: function() {\n      if (this.opened && !this.parentNode) {\n        Polymer.dom(document.body).appendChild(this);\n      }\n    },\n\n    /**\n     * Shows the backdrop.\n     */\n    open: function() {\n      this.opened = true;\n    },\n\n    /**\n     * Hides the backdrop.\n     */\n    close: function() {\n      this.opened = false;\n    },\n\n    /**\n     * Removes the backdrop from document body if needed.\n     */\n    complete: function() {\n      if (!this.opened && this.parentNode === document.body) {\n        Polymer.dom(this.parentNode).removeChild(this);\n      }\n    },\n\n    _onTransitionend: function(event) {\n      if (event && event.target === this) {\n        this.complete();\n      }\n    },\n\n    /**\n     * @param {boolean} opened\n     * @private\n     */\n    _openedChanged: function(opened) {\n      if (opened) {\n        // Auto-attach.\n        this.prepare();\n      } else {\n        // Animation might be disabled via the mixin or opacity custom property.\n        // If it is disabled in other ways, it's up to the user to call complete.\n        var cs = window.getComputedStyle(this);\n        if (cs.transitionDuration === '0s' || cs.opacity == 0) {\n          this.complete();\n        }\n      }\n\n      if (!this.isAttached) {\n        return;\n      }\n\n      // Always cancel previous requestAnimationFrame.\n      if (this.__openedRaf) {\n        window.cancelAnimationFrame(this.__openedRaf);\n        this.__openedRaf = null;\n      }\n      // Force relayout to ensure proper transitions.\n      this.scrollTop = this.scrollTop;\n      this.__openedRaf = window.requestAnimationFrame(function() {\n        this.__openedRaf = null;\n        this.toggleClass('opened', this.opened);\n      }.bind(this));\n    }\n  });\n\n})();\n\n</script>\n\n\n\n// WEBPACK FOOTER //\n// ../bower_components/iron-overlay-behavior/iron-overlay-backdrop.html","<!doctype html>\n<!--\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n-->\n<link rel=\"import\" href=\"../polymer/polymer.html\">\n\n<script>\n  (function() {\n    'use strict';\n\n    var p = Element.prototype;\n    var matches = p.matches || p.matchesSelector || p.mozMatchesSelector ||\n      p.msMatchesSelector || p.oMatchesSelector || p.webkitMatchesSelector;\n\n    Polymer.IronFocusablesHelper = {\n\n      /**\n       * Returns a sorted array of tabbable nodes, including the root node.\n       * It searches the tabbable nodes in the light and shadow dom of the chidren,\n       * sorting the result by tabindex.\n       * @param {!Node} node\n       * @return {Array<HTMLElement>}\n       */\n      getTabbableNodes: function(node) {\n        var result = [];\n        // If there is at least one element with tabindex > 0, we need to sort\n        // the final array by tabindex.\n        var needsSortByTabIndex = this._collectTabbableNodes(node, result);\n        if (needsSortByTabIndex) {\n          return this._sortByTabIndex(result);\n        }\n        return result;\n      },\n\n      /**\n       * Returns if a element is focusable.\n       * @param {!HTMLElement} element\n       * @return {boolean}\n       */\n      isFocusable: function(element) {\n        // From http://stackoverflow.com/a/1600194/4228703:\n        // There isn't a definite list, it's up to the browser. The only\n        // standard we have is DOM Level 2 HTML https://www.w3.org/TR/DOM-Level-2-HTML/html.html,\n        // according to which the only elements that have a focus() method are\n        // HTMLInputElement,  HTMLSelectElement, HTMLTextAreaElement and\n        // HTMLAnchorElement. This notably omits HTMLButtonElement and\n        // HTMLAreaElement.\n        // Referring to these tests with tabbables in different browsers\n        // http://allyjs.io/data-tables/focusable.html\n\n        // Elements that cannot be focused if they have [disabled] attribute.\n        if (matches.call(element, 'input, select, textarea, button, object')) {\n          return matches.call(element, ':not([disabled])');\n        }\n        // Elements that can be focused even if they have [disabled] attribute.\n        return matches.call(element,\n          'a[href], area[href], iframe, [tabindex], [contentEditable]');\n      },\n\n      /**\n       * Returns if a element is tabbable. To be tabbable, a element must be\n       * focusable, visible, and with a tabindex !== -1.\n       * @param {!HTMLElement} element\n       * @return {boolean}\n       */\n      isTabbable: function(element) {\n        return this.isFocusable(element) &&\n          matches.call(element, ':not([tabindex=\"-1\"])') &&\n          this._isVisible(element);\n      },\n\n      /**\n       * Returns the normalized element tabindex. If not focusable, returns -1.\n       * It checks for the attribute \"tabindex\" instead of the element property\n       * `tabIndex` since browsers assign different values to it.\n       * e.g. in Firefox `<div contenteditable>` has `tabIndex = -1`\n       * @param {!HTMLElement} element\n       * @return {!number}\n       * @private\n       */\n      _normalizedTabIndex: function(element) {\n        if (this.isFocusable(element)) {\n          var tabIndex = element.getAttribute('tabindex') || 0;\n          return Number(tabIndex);\n        }\n        return -1;\n      },\n\n      /**\n       * Searches for nodes that are tabbable and adds them to the `result` array.\n       * Returns if the `result` array needs to be sorted by tabindex.\n       * @param {!Node} node The starting point for the search; added to `result`\n       * if tabbable.\n       * @param {!Array<HTMLElement>} result\n       * @return {boolean}\n       * @private\n       */\n      _collectTabbableNodes: function(node, result) {\n        // If not an element or not visible, no need to explore children.\n        if (node.nodeType !== Node.ELEMENT_NODE || !this._isVisible(node)) {\n          return false;\n        }\n        var element = /** @type {HTMLElement} */ (node);\n        var tabIndex = this._normalizedTabIndex(element);\n        var needsSort = tabIndex > 0;\n        if (tabIndex >= 0) {\n          result.push(element);\n        }\n\n        // In ShadowDOM v1, tab order is affected by the order of distrubution.\n        // E.g. getTabbableNodes(#root) in ShadowDOM v1 should return [#A, #B];\n        // in ShadowDOM v0 tab order is not affected by the distrubution order,\n        // in fact getTabbableNodes(#root) returns [#B, #A].\n        //  <div id=\"root\">\n        //   <!-- shadow -->\n        //     <slot name=\"a\">\n        //     <slot name=\"b\">\n        //   <!-- /shadow -->\n        //   <input id=\"A\" slot=\"a\">\n        //   <input id=\"B\" slot=\"b\" tabindex=\"1\">\n        //  </div>\n        // TODO(valdrin) support ShadowDOM v1 when upgrading to Polymer v2.0.\n        var children;\n        if (element.localName === 'content' || element.localName === 'slot') {\n          children = Polymer.dom(element).getDistributedNodes();\n        } else {\n          // Use shadow root if possible, will check for distributed nodes.\n          children = Polymer.dom(element.root || element).children;\n        }\n        for (var i = 0; i < children.length; i++) {\n          // Ensure method is always invoked to collect tabbable children.\n          needsSort = this._collectTabbableNodes(children[i], result) || needsSort;\n        }\n        return needsSort;\n      },\n\n      /**\n       * Returns false if the element has `visibility: hidden` or `display: none`\n       * @param {!HTMLElement} element\n       * @return {boolean}\n       * @private\n       */\n      _isVisible: function(element) {\n        // Check inline style first to save a re-flow. If looks good, check also\n        // computed style.\n        var style = element.style;\n        if (style.visibility !== 'hidden' && style.display !== 'none') {\n          style = window.getComputedStyle(element);\n          return (style.visibility !== 'hidden' && style.display !== 'none');\n        }\n        return false;\n      },\n\n      /**\n       * Sorts an array of tabbable elements by tabindex. Returns a new array.\n       * @param {!Array<HTMLElement>} tabbables\n       * @return {Array<HTMLElement>}\n       * @private\n       */\n      _sortByTabIndex: function(tabbables) {\n        // Implement a merge sort as Array.prototype.sort does a non-stable sort\n        // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/sort\n        var len = tabbables.length;\n        if (len < 2) {\n          return tabbables;\n        }\n        var pivot = Math.ceil(len / 2);\n        var left = this._sortByTabIndex(tabbables.slice(0, pivot));\n        var right = this._sortByTabIndex(tabbables.slice(pivot));\n        return this._mergeSortByTabIndex(left, right);\n      },\n\n      /**\n       * Merge sort iterator, merges the two arrays into one, sorted by tab index.\n       * @param {!Array<HTMLElement>} left\n       * @param {!Array<HTMLElement>} right\n       * @return {Array<HTMLElement>}\n       * @private\n       */\n      _mergeSortByTabIndex: function(left, right) {\n        var result = [];\n        while ((left.length > 0) && (right.length > 0)) {\n          if (this._hasLowerTabOrder(left[0], right[0])) {\n            result.push(right.shift());\n          } else {\n            result.push(left.shift());\n          }\n        }\n\n        return result.concat(left, right);\n      },\n\n      /**\n       * Returns if element `a` has lower tab order compared to element `b`\n       * (both elements are assumed to be focusable and tabbable).\n       * Elements with tabindex = 0 have lower tab order compared to elements\n       * with tabindex > 0.\n       * If both have same tabindex, it returns false.\n       * @param {!HTMLElement} a\n       * @param {!HTMLElement} b\n       * @return {boolean}\n       * @private\n       */\n      _hasLowerTabOrder: function(a, b) {\n        // Normalize tabIndexes\n        // e.g. in Firefox `<div contenteditable>` has `tabIndex = -1`\n        var ati = Math.max(a.tabIndex, 0);\n        var bti = Math.max(b.tabIndex, 0);\n        return (ati === 0 || bti === 0) ? bti > ati : ati > bti;\n      }\n    };\n  })();\n</script>\n\n\n\n// WEBPACK FOOTER //\n// ../bower_components/iron-overlay-behavior/iron-focusables-helper.html","<!--\n@license\nCopyright (c) 2015 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n-->\n\n<link rel=\"import\" href=\"../polymer/polymer.html\">\n<link rel=\"import\" href=\"../iron-a11y-announcer/iron-a11y-announcer.html\">\n<link rel=\"import\" href=\"../iron-overlay-behavior/iron-overlay-behavior.html\">\n\n<!--\nMaterial design: [Snackbars & toasts](https://www.google.com/design/spec/components/snackbars-toasts.html)\n\n`paper-toast` provides a subtle notification toast. Only one `paper-toast` will\nbe visible on screen.\n\nUse `opened` to show the toast:\n\nExample:\n\n    <paper-toast text=\"Hello world!\" opened></paper-toast>\n\nAlso `open()` or `show()` can be used to show the toast:\n\nExample:\n\n    <paper-button on-click=\"openToast\">Open Toast</paper-button>\n    <paper-toast id=\"toast\" text=\"Hello world!\"></paper-toast>\n\n    ...\n\n    openToast: function() {\n      this.$.toast.open();\n    }\n\nSet `duration` to 0, a negative number or Infinity to persist the toast on screen:\n\nExample:\n\n    <paper-toast text=\"Terms and conditions\" opened duration=\"0\">\n      <a href=\"#\">Show more</a>\n    </paper-toast>\n\n\n### Styling\nThe following custom properties and mixins are available for styling:\n\nCustom property | Description | Default\n----------------|-------------|----------\n`--paper-toast-background-color` | The paper-toast background-color | `#323232`\n`--paper-toast-color` | The paper-toast color | `#f1f1f1`\n\nThis element applies the mixin `--paper-font-common-base` but does not import `paper-styles/typography.html`.\nIn order to apply the `Roboto` font to this element, make sure you've imported `paper-styles/typography.html`.\n\n@group Paper Elements\n@element paper-toast\n@demo demo/index.html\n@hero hero.svg\n-->\n\n<dom-module id=\"paper-toast\">\n  <template>\n    <style>\n      :host {\n        display: block;\n        position: fixed;\n        background-color: var(--paper-toast-background-color, #323232);\n        color: var(--paper-toast-color, #f1f1f1);\n        min-height: 48px;\n        min-width: 288px;\n        padding: 16px 24px;\n        box-sizing: border-box;\n        box-shadow: 0 2px 5px 0 rgba(0, 0, 0, 0.26);\n        border-radius: 2px;\n        margin: 12px;\n        font-size: 14px;\n        cursor: default;\n        -webkit-transition: -webkit-transform 0.3s, opacity 0.3s;\n        transition: transform 0.3s, opacity 0.3s;\n        opacity: 0;\n        -webkit-transform: translateY(100px);\n        transform: translateY(100px);\n        @apply --paper-font-common-base;\n      }\n\n      :host(.capsule) {\n        border-radius: 24px;\n      }\n\n      :host(.fit-bottom) {\n        width: 100%;\n        min-width: 0;\n        border-radius: 0;\n        margin: 0;\n      }\n\n      :host(.paper-toast-open) {\n        opacity: 1;\n        -webkit-transform: translateY(0px);\n        transform: translateY(0px);\n      }\n    </style>\n\n    <span id=\"label\">{{text}}</span>\n    <slot></slot>\n  </template>\n\n  <script>\n    (function() {\n      'use strict';\n\n      // Keeps track of the toast currently opened.\n      var currentToast = null;\n\n      Polymer({\n        is: 'paper-toast',\n\n        behaviors: [\n          Polymer.IronOverlayBehavior\n        ],\n\n        properties: {\n          /**\n           * The element to fit `this` into.\n           * Overridden from `Polymer.IronFitBehavior`.\n           */\n          fitInto: {\n            type: Object,\n            value: window,\n            observer: '_onFitIntoChanged'\n          },\n\n          /**\n           * The orientation against which to align the dropdown content\n           * horizontally relative to `positionTarget`.\n           * Overridden from `Polymer.IronFitBehavior`.\n           */\n          horizontalAlign: {\n            type: String,\n            value: 'left'\n          },\n\n          /**\n           * The orientation against which to align the dropdown content\n           * vertically relative to `positionTarget`.\n           * Overridden from `Polymer.IronFitBehavior`.\n           */\n          verticalAlign: {\n            type: String,\n            value: 'bottom'\n          },\n\n          /**\n           * The duration in milliseconds to show the toast.\n           * Set to `0`, a negative number, or `Infinity`, to disable the\n           * toast auto-closing.\n           */\n          duration: {\n            type: Number,\n            value: 3000\n          },\n\n          /**\n           * The text to display in the toast.\n           */\n          text: {\n            type: String,\n            value: ''\n          },\n\n          /**\n           * Overridden from `IronOverlayBehavior`.\n           * Set to false to enable closing of the toast by clicking outside it.\n           */\n          noCancelOnOutsideClick: {\n            type: Boolean,\n            value: true\n          },\n\n          /**\n           * Overridden from `IronOverlayBehavior`.\n           * Set to true to disable auto-focusing the toast or child nodes with\n           * the `autofocus` attribute` when the overlay is opened.\n           */\n          noAutoFocus: {\n            type: Boolean,\n            value: true\n          }\n        },\n\n        listeners: {\n          'transitionend': '__onTransitionEnd'\n        },\n\n        /**\n         * Read-only. Deprecated. Use `opened` from `IronOverlayBehavior`.\n         * @property visible\n         * @deprecated\n         */\n        get visible() {\n          Polymer.Base._warn('`visible` is deprecated, use `opened` instead');\n          return this.opened;\n        },\n\n        /**\n         * Read-only. Can auto-close if duration is a positive finite number.\n         * @property _canAutoClose\n         */\n        get _canAutoClose() {\n          return this.duration > 0 && this.duration !== Infinity;\n        },\n\n        created: function() {\n          this._autoClose = null;\n          Polymer.IronA11yAnnouncer.requestAvailability();\n        },\n\n        /**\n         * Show the toast. Without arguments, this is the same as `open()` from `IronOverlayBehavior`.\n         * @param {(Object|string)=} properties Properties to be set before opening the toast.\n         * e.g. `toast.show('hello')` or `toast.show({text: 'hello', duration: 3000})`\n         */\n        show: function(properties) {\n          if (typeof properties == 'string') {\n            properties = { text: properties };\n          }\n          for (var property in properties) {\n            if (property.indexOf('_') === 0) {\n              Polymer.Base._warn('The property \"' + property + '\" is private and was not set.');\n            } else if (property in this) {\n              this[property] = properties[property];\n            } else {\n              Polymer.Base._warn('The property \"' + property + '\" is not valid.');\n            }\n          }\n          this.open();\n        },\n\n        /**\n         * Hide the toast. Same as `close()` from `IronOverlayBehavior`.\n         */\n        hide: function() {\n          this.close();\n        },\n\n        /**\n         * Called on transitions of the toast, indicating a finished animation\n         * @private\n         */\n        __onTransitionEnd: function(e) {\n          // there are different transitions that are happening when opening and\n          // closing the toast. The last one so far is for `opacity`.\n          // This marks the end of the transition, so we check for this to determine if this\n          // is the correct event.\n          if (e && e.target === this && e.propertyName === 'opacity') {\n            if (this.opened) {\n              this._finishRenderOpened();\n            } else {\n              this._finishRenderClosed();\n            }\n          }\n        },\n\n        /**\n         * Overridden from `IronOverlayBehavior`.\n         * Called when the value of `opened` changes.\n         */\n        _openedChanged: function() {\n          if (this._autoClose !== null) {\n            this.cancelAsync(this._autoClose);\n            this._autoClose = null;\n          }\n          if (this.opened) {\n            if (currentToast && currentToast !== this) {\n              currentToast.close();\n            }\n            currentToast = this;\n            this.fire('iron-announce', {\n              text: this.text\n            });\n            if (this._canAutoClose) {\n              this._autoClose = this.async(this.close, this.duration);\n            }\n          } else if (currentToast === this) {\n            currentToast = null;\n          }\n          Polymer.IronOverlayBehaviorImpl._openedChanged.apply(this, arguments);\n        },\n\n        /**\n         * Overridden from `IronOverlayBehavior`.\n         */\n        _renderOpened: function() {\n          this.classList.add('paper-toast-open');\n        },\n\n        /**\n         * Overridden from `IronOverlayBehavior`.\n         */\n        _renderClosed: function() {\n          this.classList.remove('paper-toast-open');\n        },\n\n        /**\n         * @private\n         */\n        _onFitIntoChanged: function(fitInto) {\n          this.positionTarget = fitInto;\n        }\n\n        /**\n         * Fired when `paper-toast` is opened.\n         *\n         * @event 'iron-announce'\n         * @param {{text: string}} detail Contains text that will be announced.\n         */\n      });\n    })();\n  </script>\n</dom-module>\n\n\n\n// WEBPACK FOOTER //\n// ../bower_components/paper-toast/paper-toast.html"],"sourceRoot":""}